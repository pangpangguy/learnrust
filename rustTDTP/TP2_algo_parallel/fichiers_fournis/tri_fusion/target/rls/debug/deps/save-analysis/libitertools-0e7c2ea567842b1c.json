{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6","program":"/home/pangpangguy/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","itertools","/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"use_std\"","-C","metadata=0e7c2ea567842b1c","-C","extra-filename=-0e7c2ea567842b1c","--out-dir","/home/pangpangguy/Ensimag/ProjetRust/learnrust/rustTDTP/TP2_algo_parallel/fichiers_fournis/tri_fusion/target/rls/debug/deps","-L","dependency=/home/pangpangguy/Ensimag/ProjetRust/learnrust/rustTDTP/TP2_algo_parallel/fichiers_fournis/tri_fusion/target/rls/debug/deps","--extern","either=/home/pangpangguy/Ensimag/ProjetRust/learnrust/rustTDTP/TP2_algo_parallel/fichiers_fournis/tri_fusion/target/rls/debug/deps/libeither-f1bdffbc4edc1b55.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pangpangguy/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pangpangguy/Ensimag/ProjetRust/learnrust/rustTDTP/TP2_algo_parallel/fichiers_fournis/tri_fusion/target/rls/debug/deps/libitertools-0e7c2ea567842b1c.rmeta"},"prelude":{"crate_id":{"name":"itertools","disambiguator":[917538892047380488,11734958612229521886]},"crate_root":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src","external_crates":[{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","num":18,"id":{"name":"either","disambiguator":[3028647763346013246,5204917533948602151]}}],"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":0,"byte_end":65347,"line_start":1,"line_end":1983,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":112},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":825,"byte_end":831,"line_start":32,"line_end":32,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":3439},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1105,"byte_end":1109,"line_start":47,"line_end":47,"column_start":14,"column_end":18},"alias_span":null,"name":"__std_iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1209,"byte_end":1214,"line_start":52,"line_end":52,"column_start":9,"column_end":14},"alias_span":null,"name":"Dedup","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1429},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1224,"byte_end":1234,"line_start":53,"line_end":53,"column_start":9,"column_end":19},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1443},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1244,"byte_end":1262,"line_start":54,"line_end":54,"column_start":9,"column_end":27},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1467},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1272,"byte_end":1279,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1457},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1289,"byte_end":1296,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"alias_span":null,"name":"PutBack","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1306,"byte_end":1314,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"alias_span":null,"name":"Batching","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1492},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1324,"byte_end":1328,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"alias_span":null,"name":"Step","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1338,"byte_end":1348,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"alias_span":null,"name":"MapResults","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1358,"byte_end":1363,"line_start":60,"line_end":60,"column_start":9,"column_end":14},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1373,"byte_end":1380,"line_start":61,"line_end":61,"column_start":9,"column_end":16},"alias_span":null,"name":"MergeBy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":321},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1390,"byte_end":1402,"line_start":62,"line_end":62,"column_start":9,"column_end":21},"alias_span":null,"name":"TakeWhileRef","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1517},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1412,"byte_end":1421,"line_start":63,"line_end":63,"column_start":9,"column_end":18},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1431,"byte_end":1439,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"alias_span":null,"name":"Coalesce","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1449,"byte_end":1466,"line_start":65,"line_end":65,"column_start":9,"column_end":26},"alias_span":null,"name":"TupleCombinations","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1617},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1476,"byte_end":1483,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":412},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1493,"byte_end":1502,"line_start":67,"line_end":67,"column_start":9,"column_end":18},"alias_span":null,"name":"Positions","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":431},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1512,"byte_end":1518,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1414},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1581,"byte_end":1593,"line_start":71,"line_end":71,"column_start":23,"column_end":35},"alias_span":null,"name":"MultiProduct","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":532},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1653,"byte_end":1665,"line_start":73,"line_end":73,"column_start":27,"column_end":39},"alias_span":null,"name":"Combinations","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":518},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1697,"byte_end":1707,"line_start":74,"line_end":74,"column_start":31,"column_end":41},"alias_span":null,"name":"ConsTuples","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1825},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1730,"byte_end":1736,"line_start":75,"line_end":75,"column_start":22,"column_end":28},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":584},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1738,"byte_end":1748,"line_start":75,"line_end":75,"column_start":30,"column_end":40},"alias_span":null,"name":"FormatWith","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1809,"byte_end":1819,"line_start":77,"line_end":77,"column_start":27,"column_end":37},"alias_span":null,"name":"IntoChunks","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":754},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1821,"byte_end":1826,"line_start":77,"line_end":77,"column_start":39,"column_end":44},"alias_span":null,"name":"Chunk","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":744},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1828,"byte_end":1834,"line_start":77,"line_end":77,"column_start":46,"column_end":52},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":669},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1836,"byte_end":1843,"line_start":77,"line_end":77,"column_start":54,"column_end":61},"alias_span":null,"name":"GroupBy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":707},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1845,"byte_end":1850,"line_start":77,"line_end":77,"column_start":63,"column_end":68},"alias_span":null,"name":"Group","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":693},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1852,"byte_end":1858,"line_start":77,"line_end":77,"column_start":70,"column_end":76},"alias_span":null,"name":"Groups","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1872},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1886,"byte_end":1897,"line_start":78,"line_end":78,"column_start":26,"column_end":37},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":803},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1957,"byte_end":1963,"line_start":80,"line_end":80,"column_start":27,"column_end":33},"alias_span":null,"name":"KMerge","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":820},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1965,"byte_end":1973,"line_start":80,"line_end":80,"column_start":35,"column_end":43},"alias_span":null,"name":"KMergeBy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":849},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2000,"byte_end":2011,"line_start":81,"line_end":81,"column_start":25,"column_end":36},"alias_span":null,"name":"MergeJoinBy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1905},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2073,"byte_end":2082,"line_start":83,"line_end":83,"column_start":29,"column_end":38},"alias_span":null,"name":"MultiPeek","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1916},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2106,"byte_end":2114,"line_start":84,"line_end":84,"column_start":23,"column_end":31},"alias_span":null,"name":"PadUsing","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":934},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2148,"byte_end":2164,"line_start":85,"line_end":85,"column_start":33,"column_end":49},"alias_span":null,"name":"PeekingTakeWhile","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":952},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2200,"byte_end":2214,"line_start":86,"line_end":86,"column_start":35,"column_end":49},"alias_span":null,"name":"ProcessResults","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1972},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2277,"byte_end":2285,"line_start":88,"line_end":88,"column_start":30,"column_end":38},"alias_span":null,"name":"PutBackN","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":989},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2344,"byte_end":2350,"line_start":90,"line_end":90,"column_start":26,"column_end":32},"alias_span":null,"name":"RcIter","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1013},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2373,"byte_end":2380,"line_start":91,"line_end":91,"column_start":22,"column_end":29},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1046},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2404,"byte_end":2414,"line_start":92,"line_end":92,"column_start":23,"column_end":33},"alias_span":null,"name":"RepeatCall","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1984},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2416,"byte_end":2422,"line_start":92,"line_end":92,"column_start":35,"column_end":41},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1993},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2424,"byte_end":2431,"line_start":92,"line_end":92,"column_start":43,"column_end":50},"alias_span":null,"name":"Iterate","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1097},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2483,"byte_end":2486,"line_start":94,"line_end":94,"column_start":18,"column_end":21},"alias_span":null,"name":"Tee","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1112},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2513,"byte_end":2524,"line_start":95,"line_end":95,"column_start":26,"column_end":37},"alias_span":null,"name":"TupleBuffer","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1144},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2526,"byte_end":2538,"line_start":95,"line_end":95,"column_start":39,"column_end":51},"alias_span":null,"name":"TupleWindows","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1127},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2540,"byte_end":2546,"line_start":95,"line_end":95,"column_start":53,"column_end":59},"alias_span":null,"name":"Tuples","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":2064},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2607,"byte_end":2613,"line_start":97,"line_end":97,"column_start":27,"column_end":33},"alias_span":null,"name":"Unique","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":2051},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2615,"byte_end":2623,"line_start":97,"line_end":97,"column_start":35,"column_end":43},"alias_span":null,"name":"UniqueBy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1209},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2653,"byte_end":2665,"line_start":98,"line_end":98,"column_start":28,"column_end":40},"alias_span":null,"name":"WithPosition","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":2099},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2692,"byte_end":2697,"line_start":99,"line_end":99,"column_start":26,"column_end":31},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":2108},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2724,"byte_end":2734,"line_start":100,"line_end":100,"column_start":26,"column_end":36},"alias_span":null,"name":"ZipLongest","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":2117},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2758,"byte_end":2761,"line_start":101,"line_end":101,"column_start":23,"column_end":26},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":14}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2782,"byte_end":2783,"line_start":103,"line_end":103,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"PadUsing, KMergeBy, Intersperse, FormatWith, MultiProduct, Flatten, WhileSome, Merge, Batching, InterleaveShortest, Unique, TupleWindows, Tee, WithPosition, Positions, Coalesce, MergeBy, ZipLongest, Step, Product, Tuples, Dedup, UniqueBy, PeekingTakeWhile, MergeJoinBy, KMerge, GroupBy, IntoChunks, Format, Combinations, Update, TupleCombinations, TakeWhileRef, MapResults, PutBack, Interleave, ZipEq, PutBackN","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":512},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2806,"byte_end":2812,"line_start":104,"line_end":104,"column_start":22,"column_end":28},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2840,"byte_end":2851,"line_start":105,"line_end":105,"column_start":27,"column_end":38},"alias_span":null,"name":"cons_tuples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":576},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2867,"byte_end":2876,"line_start":106,"line_end":106,"column_start":15,"column_end":24},"alias_span":null,"name":"diff_with","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2892,"byte_end":2896,"line_start":107,"line_end":107,"column_start":15,"column_end":19},"alias_span":null,"name":"Diff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":825},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2948,"byte_end":2957,"line_start":109,"line_end":109,"column_start":23,"column_end":32},"alias_span":null,"name":"kmerge_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1880},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":2976,"byte_end":2988,"line_start":110,"line_end":110,"column_start":17,"column_end":29},"alias_span":null,"name":"MinMaxResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":919},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":3018,"byte_end":3029,"line_start":111,"line_end":111,"column_start":29,"column_end":40},"alias_span":null,"name":"PeekingNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":966},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":3061,"byte_end":3076,"line_start":112,"line_end":112,"column_start":31,"column_end":46},"alias_span":null,"name":"process_results","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1017},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":3095,"byte_end":3103,"line_start":113,"line_end":113,"column_start":18,"column_end":26},"alias_span":null,"name":"repeat_n","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1051},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":3123,"byte_end":3134,"line_start":114,"line_end":114,"column_start":19,"column_end":30},"alias_span":null,"name":"repeat_call","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1060},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":3136,"byte_end":3142,"line_start":114,"line_end":114,"column_start":32,"column_end":38},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":3144,"byte_end":3151,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"alias_span":null,"name":"iterate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2071},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":3177,"byte_end":3185,"line_start":115,"line_end":115,"column_start":24,"column_end":32},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":3205,"byte_end":3213,"line_start":116,"line_end":116,"column_start":19,"column_end":27},"alias_span":null,"name":"multizip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1630},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":3273,"byte_end":3285,"line_start":119,"line_end":119,"column_start":25,"column_end":37},"alias_span":null,"name":"EitherOrBoth","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105539,"byte_end":105549,"line_start":13,"line_end":13,"column_start":5,"column_end":15},"alias_span":null,"name":"interleave","value":"","parent":{"krate":0,"index":461}},{"kind":"Use","ref_id":{"krate":0,"index":239},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105555,"byte_end":105560,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"alias_span":null,"name":"merge","value":"","parent":{"krate":0,"index":461}},{"kind":"Use","ref_id":{"krate":0,"index":158},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105566,"byte_end":105574,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"alias_span":null,"name":"put_back","value":"","parent":{"krate":0,"index":461}},{"kind":"Use","ref_id":{"krate":0,"index":975},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105632,"byte_end":105642,"line_start":18,"line_end":18,"column_start":26,"column_end":36},"alias_span":null,"name":"put_back_n","value":"","parent":{"krate":0,"index":461}},{"kind":"Use","ref_id":{"krate":0,"index":877},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105696,"byte_end":105705,"line_start":20,"line_end":20,"column_start":25,"column_end":34},"alias_span":null,"name":"multipeek","value":"","parent":{"krate":0,"index":461}},{"kind":"Use","ref_id":{"krate":0,"index":806},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105756,"byte_end":105762,"line_start":22,"line_end":22,"column_start":22,"column_end":28},"alias_span":null,"name":"kmerge","value":"","parent":{"krate":0,"index":461}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105785,"byte_end":105791,"line_start":23,"line_end":23,"column_start":22,"column_end":28},"alias_span":null,"name":"zip_eq","value":"","parent":{"krate":0,"index":461}},{"kind":"Use","ref_id":{"krate":0,"index":845},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105813,"byte_end":105826,"line_start":24,"line_end":24,"column_start":21,"column_end":34},"alias_span":null,"name":"merge_join_by","value":"","parent":{"krate":0,"index":461}},{"kind":"Use","ref_id":{"krate":0,"index":992},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105877,"byte_end":105883,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"alias_span":null,"name":"rciter","value":"","parent":{"krate":0,"index":461}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":3345,"byte_end":3346,"line_start":123,"line_end":123,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"interleave, zip_eq, merge_join_by, kmerge, fold, merge","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":0,"byte_end":65347,"line_start":1,"line_end":1983,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":2311},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":516},{"krate":0,"index":529},{"krate":0,"index":557},{"krate":0,"index":581},{"krate":0,"index":608},{"krate":0,"index":769},{"krate":0,"index":779},{"krate":0,"index":838},{"krate":0,"index":863},{"krate":0,"index":872},{"krate":0,"index":896},{"krate":0,"index":915},{"krate":0,"index":951},{"krate":0,"index":973},{"krate":0,"index":985},{"krate":0,"index":1012},{"krate":0,"index":1029},{"krate":0,"index":1043},{"krate":0,"index":1086},{"krate":0,"index":1110},{"krate":0,"index":1168},{"krate":0,"index":1205},{"krate":0,"index":1225},{"krate":0,"index":1239},{"krate":0,"index":1263},{"krate":0,"index":1271},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":2287},{"krate":0,"index":2301},{"krate":0,"index":2298},{"krate":0,"index":2295},{"krate":0,"index":1410}],"decl_id":null,"docs":" Itertools — extra iterator adaptors, functions and macros.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"crate_name = \"itertools\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":27}},{"value":"/ Itertools — extra iterator adaptors, functions and macros.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":98,"byte_end":162,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":163,"byte_end":166,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ To use the iterator methods in this crate, import the [`Itertools` trait](./trait.Itertools.html):","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":167,"byte_end":269,"line_start":7,"line_end":7,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":270,"byte_end":273,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":274,"byte_end":281,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":282,"byte_end":311,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":312,"byte_end":319,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":320,"byte_end":323,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Crate Features","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":324,"byte_end":345,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":346,"byte_end":349,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - `use_std`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":350,"byte_end":365,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/   - Enabled by default.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":366,"byte_end":393,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/   - Disable to compile itertools using `#![no_std]`. This disables","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":394,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/     any items that depend on collections (like `group_by`, `unique`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":465,"byte_end":537,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/     `kmerge`, `join` and many more).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":538,"byte_end":578,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":579,"byte_end":582,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Rust Version","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":583,"byte_end":602,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":603,"byte_end":606,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This version of itertools requires Rust 1.12 or later.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":607,"byte_end":665,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":666,"byte_end":669,"line_start":24,"line_end":24,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1167,"byte_end":1174,"line_start":50,"line_end":50,"column_start":9,"column_end":16},"name":"structs","qualname":"::structs","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"decl_id":null,"docs":" The concrete iterator types.\n","sig":null,"attributes":[{"value":"/ The concrete iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":1126,"byte_end":1158,"line_start":49,"line_end":49,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1414},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":99090,"byte_end":99102,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"MultiProduct","qualname":"::adaptors::multi_product::MultiProduct","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n multiple iterators of type `I`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":98730,"byte_end":98797,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/ multiple iterators of type `I`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":98798,"byte_end":98833,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":98834,"byte_end":98837,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An iterator element type is `Vec<I>`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":98838,"byte_end":98879,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":98880,"byte_end":98883,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`.multi_cartesian_product()`](../trait.Itertools.html#method.multi_cartesian_product)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":98884,"byte_end":98978,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":98979,"byte_end":99004,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":99005,"byte_end":99078,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1429},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66759,"byte_end":66769,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::adaptors::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from two iterators until both\n run out.","sig":null,"attributes":[{"value":"/ An iterator adaptor that alternates elements from two iterators until both","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66429,"byte_end":66507,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ run out.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66508,"byte_end":66520,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66521,"byte_end":66524,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66525,"byte_end":66554,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66555,"byte_end":66558,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ See [`.interleave()`](../trait.Itertools.html#method.interleave) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66559,"byte_end":66649,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66674,"byte_end":66747,"line_start":35,"line_end":35,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":139},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":67099,"byte_end":67109,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"interleave","qualname":"::adaptors::interleave","value":"pub fn interleave<I, J>(I, J)\n-> Interleave<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>\nwhere I: IntoIterator, J: IntoIterator<Item = I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that interleaves elements in `i` and `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that interleaves elements in `i` and `j`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66829,"byte_end":66893,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66894,"byte_end":66897,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.interleave(j)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66898,"byte_end":66954,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66955,"byte_end":66958,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66959,"byte_end":66966,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use itertools::interleave;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66967,"byte_end":66997,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":66998,"byte_end":67001,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ for elt in interleave(&[1, 2, 3], &[2, 3, 4]) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":67002,"byte_end":67053,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/     /* loop body */","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":67054,"byte_end":67077,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":67078,"byte_end":67083,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":67084,"byte_end":67091,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1443},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":68374,"byte_end":68392,"line_start":99,"line_end":99,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::adaptors::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from the two iterators until\n one of them runs out.","sig":null,"attributes":[{"value":"/ An iterator adaptor that alternates elements from the two iterators until","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":68010,"byte_end":68087,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ one of them runs out.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":68088,"byte_end":68113,"line_start":91,"line_end":91,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":68114,"byte_end":68117,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":68118,"byte_end":68147,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":68148,"byte_end":68151,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ See [`.interleave_shortest()`](../trait.Itertools.html#method.interleave_shortest)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":68152,"byte_end":68238,"line_start":95,"line_end":95,"column_start":1,"column_end":87}},{"value":"/ for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":68239,"byte_end":68264,"line_start":96,"line_end":96,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":68289,"byte_end":68362,"line_start":98,"line_end":98,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1457},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":70794,"byte_end":70801,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"PutBack","qualname":"::adaptors::PutBack","value":"PutBack {  }","parent":null,"children":[{"krate":0,"index":1459},{"krate":0,"index":1460}],"decl_id":null,"docs":" An iterator adaptor that allows putting back a single\n item to the front of the iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows putting back a single","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":70642,"byte_end":70699,"line_start":184,"line_end":184,"column_start":1,"column_end":58}},{"value":"/ item to the front of the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":70700,"byte_end":70738,"line_start":185,"line_end":185,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":70739,"byte_end":70742,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":70743,"byte_end":70782,"line_start":187,"line_end":187,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":70938,"byte_end":70946,"line_start":196,"line_end":196,"column_start":8,"column_end":16},"name":"put_back","qualname":"::adaptors::put_back","value":"pub fn put_back<I>(I) -> PutBack<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back a single item\n","sig":null,"attributes":[{"value":"/ Create an iterator where you can put back a single item","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":70871,"byte_end":70930,"line_start":195,"line_end":195,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71195,"byte_end":71205,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"with_value","qualname":"<PutBack<I>>::with_value","value":"pub fn with_value(Self, I::Item) -> Self","parent":null,"children":[],"decl_id":null,"docs":" put back value `value` (builder method)\n","sig":null,"attributes":[{"value":"/ put back value `value` (builder method)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71140,"byte_end":71183,"line_start":208,"line_end":208,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71361,"byte_end":71371,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<PutBack<I>>::into_parts","value":"pub fn into_parts(Self) -> (Option<I::Item>, I)","parent":null,"children":[],"decl_id":null,"docs":" Split the `PutBack` into its parts.\n","sig":null,"attributes":[{"value":"/ Split the `PutBack` into its parts.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71296,"byte_end":71335,"line_start":214,"line_end":214,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71340,"byte_end":71349,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71636,"byte_end":71644,"line_start":225,"line_end":225,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBack<I>>::put_back","value":"pub fn put_back(&mut Self, I::Item)","parent":null,"children":[],"decl_id":null,"docs":" Put back a single value to the front of the iterator.","sig":null,"attributes":[{"value":"/ Put back a single value to the front of the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71474,"byte_end":71531,"line_start":221,"line_end":221,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71536,"byte_end":71539,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ If a value is already in the put back slot, it is overwritten.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71544,"byte_end":71610,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71615,"byte_end":71624,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1467},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":73105,"byte_end":73112,"line_start":277,"line_end":277,"column_start":12,"column_end":19},"name":"Product","qualname":"::adaptors::Product","value":"Product {  }","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473}],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `I` and `J`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":72737,"byte_end":72804,"line_start":270,"line_end":270,"column_start":1,"column_end":68}},{"value":"/ the element sets of two iterators `I` and `J`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":72805,"byte_end":72855,"line_start":271,"line_end":271,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":72856,"byte_end":72859,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `(I::Item, J::Item)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":72860,"byte_end":72910,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":72911,"byte_end":72914,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ See [`.cartesian_product()`](../trait.Itertools.html#method.cartesian_product) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":72915,"byte_end":73019,"line_start":275,"line_end":275,"column_start":1,"column_end":105}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":73020,"byte_end":73093,"line_start":276,"line_end":276,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":75951,"byte_end":75959,"line_start":373,"line_end":373,"column_start":12,"column_end":20},"name":"Batching","qualname":"::adaptors::Batching","value":"Batching {  }","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1486}],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure recives a reference to the iterator\n and may pick off as many elements as it likes, to produce the next iterator element.","sig":null,"attributes":[{"value":"/ A “meta iterator adaptor”. Its closure recives a reference to the iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":75504,"byte_end":75586,"line_start":365,"line_end":365,"column_start":1,"column_end":79}},{"value":"/ and may pick off as many elements as it likes, to produce the next iterator element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":75587,"byte_end":75675,"line_start":366,"line_end":366,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":75676,"byte_end":75679,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is *X*, if the return type of `F` is *Option\\<X\\>*.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":75680,"byte_end":75757,"line_start":368,"line_end":368,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":75758,"byte_end":75761,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ See [`.batching()`](../trait.Itertools.html#method.batching) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":75762,"byte_end":75848,"line_start":370,"line_end":370,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":75866,"byte_end":75939,"line_start":372,"line_end":372,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1492},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":77000,"byte_end":77004,"line_start":413,"line_end":413,"column_start":12,"column_end":16},"name":"Step","qualname":"::adaptors::Step","value":"Step {  }","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1495}],"decl_id":null,"docs":" An iterator adaptor that steps a number elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"/ An iterator adaptor that steps a number elements in the base iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":76588,"byte_end":76661,"line_start":404,"line_end":404,"column_start":1,"column_end":74}},{"value":"/ for each iteration.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":76662,"byte_end":76685,"line_start":405,"line_end":405,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":76686,"byte_end":76689,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ The iterator steps by yielding the next element from the base iterator,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":76690,"byte_end":76765,"line_start":407,"line_end":407,"column_start":1,"column_end":76}},{"value":"/ then skipping forward *n-1* elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":76766,"byte_end":76807,"line_start":408,"line_end":408,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":76808,"byte_end":76811,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ See [`.step()`](../trait.Itertools.html#method.step) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":76812,"byte_end":76890,"line_start":410,"line_end":410,"column_start":1,"column_end":79}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":76915,"byte_end":76988,"line_start":412,"line_end":412,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":79752,"byte_end":79757,"line_start":527,"line_end":527,"column_start":12,"column_end":17},"name":"Merge","qualname":"::adaptors::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":231}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges the two base iterators in ascending order.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":79383,"byte_end":79461,"line_start":520,"line_end":520,"column_start":1,"column_end":79}},{"value":"/ If both base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":79462,"byte_end":79534,"line_start":521,"line_end":521,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":79535,"byte_end":79538,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":79539,"byte_end":79578,"line_start":523,"line_end":523,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":79579,"byte_end":79582,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ See [`.merge()`](../trait.Itertools.html#method.merge_by) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":79583,"byte_end":79666,"line_start":525,"line_end":525,"column_start":1,"column_end":84}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":79667,"byte_end":79740,"line_start":526,"line_end":526,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":239},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80545,"byte_end":80550,"line_start":563,"line_end":563,"column_start":8,"column_end":13},"name":"merge","qualname":"::adaptors::merge","value":"pub fn merge<I, J>(I, J)\n-> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter> where\nI: IntoIterator, J: IntoIterator<Item = I::Item>, I::Item: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements in `i` and `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements in `i` and `j`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80295,"byte_end":80354,"line_start":552,"line_end":552,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80355,"byte_end":80358,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.merge(j)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80359,"byte_end":80410,"line_start":554,"line_end":554,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80411,"byte_end":80414,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80415,"byte_end":80422,"line_start":556,"line_end":556,"column_start":1,"column_end":8}},{"value":"/ use itertools::merge;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80423,"byte_end":80448,"line_start":557,"line_end":557,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80449,"byte_end":80452,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ for elt in merge(&[1, 2, 3], &[2, 3, 4]) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80453,"byte_end":80499,"line_start":559,"line_end":559,"column_start":1,"column_end":47}},{"value":"/     /* loop body */","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80500,"byte_end":80523,"line_start":560,"line_end":560,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80524,"byte_end":80529,"line_start":561,"line_end":561,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80530,"byte_end":80537,"line_start":562,"line_end":562,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":81623,"byte_end":81630,"line_start":600,"line_end":600,"column_start":12,"column_end":19},"name":"MergeBy","qualname":"::adaptors::MergeBy","value":"MergeBy {  }","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges the two base iterators in ascending order.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":81251,"byte_end":81329,"line_start":593,"line_end":593,"column_start":1,"column_end":79}},{"value":"/ If both base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":81330,"byte_end":81402,"line_start":594,"line_end":594,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":81403,"byte_end":81406,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":81407,"byte_end":81446,"line_start":596,"line_end":596,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":81447,"byte_end":81450,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_by()`](../trait.Itertools.html#method.merge_by) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":81451,"byte_end":81537,"line_start":598,"line_end":598,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":81538,"byte_end":81611,"line_start":599,"line_end":599,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":280},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":84181,"byte_end":84189,"line_start":701,"line_end":701,"column_start":12,"column_end":20},"name":"Coalesce","qualname":"::adaptors::Coalesce","value":"Coalesce {  }","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" An iterator adaptor that may join together adjacent elements.","sig":null,"attributes":[{"value":"/ An iterator adaptor that may join together adjacent elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":83939,"byte_end":84004,"line_start":697,"line_end":697,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":84005,"byte_end":84008,"line_start":698,"line_end":698,"column_start":1,"column_end":4}},{"value":"/ See [`.coalesce()`](../trait.Itertools.html#method.coalesce) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":84009,"byte_end":84095,"line_start":699,"line_end":699,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":84096,"byte_end":84169,"line_start":700,"line_end":700,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":85420,"byte_end":85425,"line_start":756,"line_end":756,"column_start":12,"column_end":17},"name":"Dedup","qualname":"::adaptors::Dedup","value":"Dedup {  }","parent":null,"children":[{"krate":0,"index":303}],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates.","sig":null,"attributes":[{"value":"/ An iterator adaptor that removes repeated duplicates.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":85192,"byte_end":85249,"line_start":752,"line_end":752,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":85250,"byte_end":85253,"line_start":753,"line_end":753,"column_start":1,"column_end":4}},{"value":"/ See [`.dedup()`](../trait.Itertools.html#method.dedup) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":85254,"byte_end":85334,"line_start":754,"line_end":754,"column_start":1,"column_end":81}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":85335,"byte_end":85408,"line_start":755,"line_end":755,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":87136,"byte_end":87148,"line_start":829,"line_end":829,"column_start":12,"column_end":24},"name":"TakeWhileRef","qualname":"::adaptors::TakeWhileRef","value":"TakeWhileRef {  }","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"decl_id":null,"docs":" An iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate returns `true`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that borrows from a `Clone`-able iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":86816,"byte_end":86881,"line_start":824,"line_end":824,"column_start":1,"column_end":66}},{"value":"/ to only pick off elements while the predicate returns `true`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":86882,"byte_end":86947,"line_start":825,"line_end":825,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":86948,"byte_end":86951,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ See [`.take_while_ref()`](../trait.Itertools.html#method.take_while_ref) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":86952,"byte_end":87050,"line_start":827,"line_end":827,"column_start":1,"column_end":99}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":87051,"byte_end":87124,"line_start":828,"line_end":828,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1517},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":88521,"byte_end":88530,"line_start":880,"line_end":880,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::adaptors::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":1519}],"decl_id":null,"docs":" An iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"/ An iterator adaptor that filters `Option<A>` iterator elements","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":88189,"byte_end":88255,"line_start":874,"line_end":874,"column_start":1,"column_end":67}},{"value":"/ and produces `A`. Stops on the first `None` encountered.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":88256,"byte_end":88316,"line_start":875,"line_end":875,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":88317,"byte_end":88320,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ See [`.while_some()`](../trait.Itertools.html#method.while_some) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":88321,"byte_end":88411,"line_start":877,"line_end":877,"column_start":1,"column_end":91}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":88436,"byte_end":88509,"line_start":879,"line_end":879,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1526},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":89381,"byte_end":89398,"line_start":914,"line_end":914,"column_start":12,"column_end":29},"name":"TupleCombinations","qualname":"::adaptors::TupleCombinations","value":"TupleCombinations {  }","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531}],"decl_id":null,"docs":" An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples\n of a specific size.","sig":null,"attributes":[{"value":"/ An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":89040,"byte_end":89139,"line_start":907,"line_end":907,"column_start":1,"column_end":100}},{"value":"/ of a specific size.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":89140,"byte_end":89163,"line_start":908,"line_end":908,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":89164,"byte_end":89167,"line_start":909,"line_end":909,"column_start":1,"column_end":4}},{"value":"/ See [`.tuple_combinations()`](../trait.Itertools.html#method.tuple_combinations) for more","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":89168,"byte_end":89261,"line_start":910,"line_end":910,"column_start":1,"column_end":94}},{"value":"/ information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":89262,"byte_end":89278,"line_start":911,"line_end":911,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":89296,"byte_end":89369,"line_start":913,"line_end":913,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":349},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":89549,"byte_end":89563,"line_start":923,"line_end":923,"column_start":11,"column_end":25},"name":"HasCombination","qualname":"::adaptors::HasCombination","value":"HasCombination<I>: Sized","parent":null,"children":[{"krate":0,"index":351}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":351},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":89585,"byte_end":89596,"line_start":924,"line_end":924,"column_start":10,"column_end":21},"name":"Combination","qualname":"::adaptors::HasCombination::Combination","value":"type Combination: From<I> + Iterator<Item = Self>;","parent":{"krate":0,"index":349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1536},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":90217,"byte_end":90234,"line_start":952,"line_end":952,"column_start":12,"column_end":29},"name":"Tuple1Combination","qualname":"::adaptors::Tuple1Combination","value":"Tuple1Combination {  }","parent":null,"children":[{"krate":0,"index":1538}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1559},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":92455,"byte_end":92472,"line_start":1033,"line_end":1033,"column_start":25,"column_end":42},"name":"Tuple2Combination","qualname":"::adaptors::Tuple2Combination","value":"Tuple2Combination {  }","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1584},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":92531,"byte_end":92548,"line_start":1034,"line_end":1034,"column_start":25,"column_end":42},"name":"Tuple3Combination","qualname":"::adaptors::Tuple3Combination","value":"Tuple3Combination {  }","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1609},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":92612,"byte_end":92629,"line_start":1035,"line_end":1035,"column_start":25,"column_end":42},"name":"Tuple4Combination","qualname":"::adaptors::Tuple4Combination","value":"Tuple4Combination {  }","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1617},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":92928,"byte_end":92935,"line_start":1043,"line_end":1043,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::adaptors::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1621}],"decl_id":null,"docs":" An iterator adapter to simply flatten a structure.","sig":null,"attributes":[{"value":"/ An iterator adapter to simply flatten a structure.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":92675,"byte_end":92729,"line_start":1038,"line_end":1038,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":92730,"byte_end":92733,"line_start":1039,"line_end":1039,"column_start":1,"column_end":4}},{"value":"/ See [`.flatten()`](../trait.Itertools.html#method.flatten) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":92734,"byte_end":92818,"line_start":1040,"line_end":1040,"column_start":1,"column_end":85}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":92843,"byte_end":92916,"line_start":1042,"line_end":1042,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":94417,"byte_end":94427,"line_start":1096,"line_end":1096,"column_start":12,"column_end":22},"name":"MapResults","qualname":"::adaptors::MapResults","value":"MapResults {  }","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"decl_id":null,"docs":" An iterator adapter to apply a transformation within a nested `Result`.","sig":null,"attributes":[{"value":"/ An iterator adapter to apply a transformation within a nested `Result`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":94159,"byte_end":94234,"line_start":1092,"line_end":1092,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":94235,"byte_end":94238,"line_start":1093,"line_end":1093,"column_start":1,"column_end":4}},{"value":"/ See [`.map_results()`](../trait.Itertools.html#method.map_results) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":94239,"byte_end":94331,"line_start":1094,"line_end":1094,"column_start":1,"column_end":93}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":94332,"byte_end":94405,"line_start":1095,"line_end":1095,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":95718,"byte_end":95727,"line_start":1145,"line_end":1145,"column_start":12,"column_end":21},"name":"Positions","qualname":"::adaptors::Positions","value":"Positions {  }","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417}],"decl_id":null,"docs":" An iterator adapter to get the positions of each element that matches a predicate.","sig":null,"attributes":[{"value":"/ An iterator adapter to get the positions of each element that matches a predicate.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":95453,"byte_end":95539,"line_start":1141,"line_end":1141,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":95540,"byte_end":95543,"line_start":1142,"line_end":1142,"column_start":1,"column_end":4}},{"value":"/ See [`.positions()`](../trait.Itertools.html#method.positions) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":95544,"byte_end":95632,"line_start":1143,"line_end":1143,"column_start":1,"column_end":89}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":95633,"byte_end":95706,"line_start":1144,"line_end":1144,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":431},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":97143,"byte_end":97149,"line_start":1203,"line_end":1203,"column_start":12,"column_end":18},"name":"Update","qualname":"::adaptors::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"decl_id":null,"docs":" An iterator adapter to apply a mutating function to each element before yielding it.","sig":null,"attributes":[{"value":"/ An iterator adapter to apply a mutating function to each element before yielding it.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":96882,"byte_end":96970,"line_start":1199,"line_end":1199,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":96971,"byte_end":96974,"line_start":1200,"line_end":1200,"column_start":1,"column_end":4}},{"value":"/ See [`.update()`](../trait.Itertools.html#method.update) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":96975,"byte_end":97057,"line_start":1201,"line_end":1201,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":97058,"byte_end":97131,"line_start":1202,"line_end":1202,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1633},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/either_or_both.rs","byte_start":105030,"byte_end":105034,"line_start":5,"line_end":5,"column_start":5,"column_end":9},"name":"Both","qualname":"::either_or_both::EitherOrBoth::Both","value":"EitherOrBoth::Both(A, B)","parent":{"krate":0,"index":1630},"children":[],"decl_id":null,"docs":" Both values are present.\n","sig":null,"attributes":[{"value":"/ Both values are present.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/either_or_both.rs","byte_start":104997,"byte_end":105025,"line_start":4,"line_end":4,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1637},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/either_or_both.rs","byte_start":105098,"byte_end":105102,"line_start":7,"line_end":7,"column_start":5,"column_end":9},"name":"Left","qualname":"::either_or_both::EitherOrBoth::Left","value":"EitherOrBoth::Left(A)","parent":{"krate":0,"index":1630},"children":[],"decl_id":null,"docs":" Only the left value of type `A` is present.\n","sig":null,"attributes":[{"value":"/ Only the left value of type `A` is present.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/either_or_both.rs","byte_start":105046,"byte_end":105093,"line_start":6,"line_end":6,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1640},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/either_or_both.rs","byte_start":105164,"byte_end":105169,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"Right","qualname":"::either_or_both::EitherOrBoth::Right","value":"EitherOrBoth::Right(B)","parent":{"krate":0,"index":1630},"children":[],"decl_id":null,"docs":" Only the right value of type `B` is present.\n","sig":null,"attributes":[{"value":"/ Only the right value of type `B` is present.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/either_or_both.rs","byte_start":105111,"byte_end":105159,"line_start":8,"line_end":8,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":1630},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/either_or_both.rs","byte_start":104972,"byte_end":104984,"line_start":3,"line_end":3,"column_start":10,"column_end":22},"name":"EitherOrBoth","qualname":"::either_or_both::EitherOrBoth","value":"pub enum EitherOrBoth<A, B> {\n\n    /// Both values are present.\n    Both(A, B),\n\n    /// Only the left value of type `A` is present.\n    Left(A),\n\n    /// Only the right value of type `B` is present.\n    Right(B),\n}","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1637},{"krate":0,"index":1640}],"decl_id":null,"docs":" Value that either holds a single A or B, or both.\n","sig":null,"attributes":[{"value":"/ Value that either holds a single A or B, or both.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/either_or_both.rs","byte_start":104870,"byte_end":104923,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":461},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"free","qualname":"::free","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":491},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507}],"decl_id":null,"docs":" Free functions that create iterator adaptors or call iterator methods.","sig":null,"attributes":[{"value":"/ Free functions that create iterator adaptors or call iterator methods.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105177,"byte_end":105251,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105252,"byte_end":105255,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The benefit of free functions is that they accept any `IntoIterator` as","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105256,"byte_end":105331,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ argument, so the resulting code may be easier to read.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105332,"byte_end":105390,"line_start":4,"line_end":4,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":477},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106124,"byte_end":106133,"line_start":39,"line_end":39,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::free::enumerate","value":"pub fn enumerate<I>(I) -> iter::Enumerate<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` with a running index.","sig":null,"attributes":[{"value":"/ Iterate `iterable` with a running index.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105886,"byte_end":105930,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105931,"byte_end":105934,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `.enumerate()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105935,"byte_end":105988,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105989,"byte_end":105992,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":105993,"byte_end":106000,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use itertools::enumerate;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106001,"byte_end":106030,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106031,"byte_end":106034,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ for (i, elt) in enumerate(&[1, 2, 3]) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106035,"byte_end":106078,"line_start":35,"line_end":35,"column_start":1,"column_end":44}},{"value":"/     /* loop body */","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106079,"byte_end":106102,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106103,"byte_end":106108,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106109,"byte_end":106116,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":479},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106455,"byte_end":106458,"line_start":56,"line_end":56,"column_start":8,"column_end":11},"name":"rev","qualname":"::free::rev","value":"pub fn rev<I>(I) -> iter::Rev<I::IntoIter> where I: IntoIterator,\nI::IntoIter: DoubleEndedIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` in reverse.","sig":null,"attributes":[{"value":"/ Iterate `iterable` in reverse.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106250,"byte_end":106284,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106285,"byte_end":106288,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `.rev()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106289,"byte_end":106336,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106337,"byte_end":106340,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106341,"byte_end":106348,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ use itertools::rev;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106349,"byte_end":106372,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106373,"byte_end":106376,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ for elt in rev(&[1, 2, 3]) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106377,"byte_end":106409,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/     /* loop body */","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106410,"byte_end":106433,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106434,"byte_end":106439,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106440,"byte_end":106447,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":481},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106859,"byte_end":106862,"line_start":75,"line_end":75,"column_start":8,"column_end":11},"name":"zip","qualname":"::free::zip","value":"pub fn zip<I, J>(I, J) -> Zip<I::IntoIter, J::IntoIter> where I: IntoIterator,\nJ: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[{"value":"/ Iterate `i` and `j` in lock step.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106607,"byte_end":106644,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106645,"byte_end":106648,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.zip(j)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106649,"byte_end":106698,"line_start":65,"line_end":65,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106699,"byte_end":106702,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106703,"byte_end":106710,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use itertools::zip;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106711,"byte_end":106734,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106735,"byte_end":106738,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let data = [1, 2, 3, 4, 5];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106739,"byte_end":106770,"line_start":70,"line_end":70,"column_start":1,"column_end":32}},{"value":"/ for (a, b) in zip(&data, &data[1..]) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106771,"byte_end":106813,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"/     /* loop body */","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106814,"byte_end":106837,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106838,"byte_end":106843,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106844,"byte_end":106851,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":484},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107242,"byte_end":107247,"line_start":93,"line_end":93,"column_start":8,"column_end":13},"name":"chain","qualname":"::free::chain","value":"pub fn chain<I, J>(I, J)\n-> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>\nwhere I: IntoIterator, J: IntoIterator<Item = I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that first iterates `i` and then `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that first iterates `i` and then `j`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":106997,"byte_end":107057,"line_start":82,"line_end":82,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107058,"byte_end":107061,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.chain(j)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107062,"byte_end":107113,"line_start":84,"line_end":84,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107114,"byte_end":107117,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107118,"byte_end":107125,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/ use itertools::chain;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107126,"byte_end":107151,"line_start":87,"line_end":87,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107152,"byte_end":107155,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ for elt in chain(&[1, 2, 3], &[4]) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107156,"byte_end":107196,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"/     /* loop body */","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107197,"byte_end":107220,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107221,"byte_end":107226,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107227,"byte_end":107234,"line_start":92,"line_end":92,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":487},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107670,"byte_end":107676,"line_start":109,"line_end":109,"column_start":8,"column_end":14},"name":"cloned","qualname":"::free::cloned","value":"pub fn cloned<'a, I, T: 'a>(I) -> iter::Cloned<I::IntoIter> where\nI: IntoIterator<Item = &'a T>, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that clones each element from &T to T","sig":null,"attributes":[{"value":"/ Create an iterator that clones each element from &T to T","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107444,"byte_end":107504,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107505,"byte_end":107508,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.cloned()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107509,"byte_end":107560,"line_start":102,"line_end":102,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107561,"byte_end":107564,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107565,"byte_end":107572,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ use itertools::cloned;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107573,"byte_end":107599,"line_start":105,"line_end":105,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107600,"byte_end":107603,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(cloned(b\"abc\").next(), Some(b'a'));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107604,"byte_end":107654,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107655,"byte_end":107662,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108064,"byte_end":108068,"line_start":125,"line_end":125,"column_start":8,"column_end":12},"name":"fold","qualname":"::free::fold","value":"pub fn fold<I, B, F>(I, B, F) -> B where I: IntoIterator, F: FnMut(B, I::Item)\n-> B","parent":null,"children":[],"decl_id":null,"docs":" Perform a fold operation over the iterable.","sig":null,"attributes":[{"value":"/ Perform a fold operation over the iterable.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107831,"byte_end":107878,"line_start":116,"line_end":116,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107879,"byte_end":107882,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.fold(init, f)`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107883,"byte_end":107938,"line_start":118,"line_end":118,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107939,"byte_end":107942,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107943,"byte_end":107950,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use itertools::fold;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107951,"byte_end":107975,"line_start":121,"line_end":121,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107976,"byte_end":107979,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fold(&[1., 2., 3.], 0., |a, &b| f32::max(a, b)), 3.);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":107980,"byte_end":108048,"line_start":123,"line_end":123,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108049,"byte_end":108056,"line_start":124,"line_end":124,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":495},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108443,"byte_end":108446,"line_start":141,"line_end":141,"column_start":8,"column_end":11},"name":"all","qualname":"::free::all","value":"pub fn all<I, F>(I, F) -> bool where I: IntoIterator, F: FnMut(I::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for all elements in the iterable.","sig":null,"attributes":[{"value":"/ Test whether the predicate holds for all elements in the iterable.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108218,"byte_end":108288,"line_start":132,"line_end":132,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108289,"byte_end":108292,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.all(f)`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108293,"byte_end":108341,"line_start":134,"line_end":134,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108342,"byte_end":108345,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108346,"byte_end":108353,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use itertools::all;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108354,"byte_end":108377,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108378,"byte_end":108381,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ assert!(all(&[1, 2, 3], |elt| *elt > 0));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108382,"byte_end":108427,"line_start":139,"line_end":139,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108428,"byte_end":108435,"line_start":140,"line_end":140,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":498},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108806,"byte_end":108809,"line_start":157,"line_end":157,"column_start":8,"column_end":11},"name":"any","qualname":"::free::any","value":"pub fn any<I, F>(I, F) -> bool where I: IntoIterator, F: FnMut(I::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for any elements in the iterable.","sig":null,"attributes":[{"value":"/ Test whether the predicate holds for any elements in the iterable.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108580,"byte_end":108650,"line_start":148,"line_end":148,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108651,"byte_end":108654,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.any(f)`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108655,"byte_end":108703,"line_start":150,"line_end":150,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108704,"byte_end":108707,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108708,"byte_end":108715,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/ use itertools::any;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108716,"byte_end":108739,"line_start":153,"line_end":153,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108740,"byte_end":108743,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ assert!(any(&[0, -1, 2], |elt| *elt > 0));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108744,"byte_end":108790,"line_start":155,"line_end":155,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108791,"byte_end":108798,"line_start":156,"line_end":156,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":501},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109134,"byte_end":109137,"line_start":173,"line_end":173,"column_start":8,"column_end":11},"name":"max","qualname":"::free::max","value":"pub fn max<I>(I) -> Option<I::Item> where I: IntoIterator, I::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum value of the iterable.","sig":null,"attributes":[{"value":"/ Return the maximum value of the iterable.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108943,"byte_end":108988,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108989,"byte_end":108992,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.max()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":108993,"byte_end":109041,"line_start":166,"line_end":166,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109042,"byte_end":109045,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109046,"byte_end":109053,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ use itertools::max;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109054,"byte_end":109077,"line_start":169,"line_end":169,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109078,"byte_end":109081,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(max(0..10), Some(9));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109082,"byte_end":109118,"line_start":171,"line_end":171,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109119,"byte_end":109126,"line_start":172,"line_end":172,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109450,"byte_end":109453,"line_start":189,"line_end":189,"column_start":8,"column_end":11},"name":"min","qualname":"::free::min","value":"pub fn min<I>(I) -> Option<I::Item> where I: IntoIterator, I::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum value of the iterable.","sig":null,"attributes":[{"value":"/ Return the minimum value of the iterable.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109259,"byte_end":109304,"line_start":180,"line_end":180,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109305,"byte_end":109308,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.min()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109309,"byte_end":109357,"line_start":182,"line_end":182,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109358,"byte_end":109361,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109362,"byte_end":109369,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use itertools::min;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109370,"byte_end":109393,"line_start":185,"line_end":185,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109394,"byte_end":109397,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(min(0..10), Some(0));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109398,"byte_end":109434,"line_start":187,"line_end":187,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109435,"byte_end":109442,"line_start":188,"line_end":188,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":505},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109846,"byte_end":109850,"line_start":207,"line_end":207,"column_start":8,"column_end":12},"name":"join","qualname":"::free::join","value":"pub fn join<I>(I, &str) -> String where I: IntoIterator, I::Item: Display","parent":null,"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, seperated by `sep`.","sig":null,"attributes":[{"value":"/ Combine all iterator elements into one String, seperated by `sep`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109576,"byte_end":109646,"line_start":197,"line_end":197,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109647,"byte_end":109650,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `iterable.join(sep)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109651,"byte_end":109710,"line_start":199,"line_end":199,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109711,"byte_end":109714,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109715,"byte_end":109722,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/ use itertools::join;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109723,"byte_end":109747,"line_start":202,"line_end":202,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109748,"byte_end":109751,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join(&[1, 2, 3], \", \"), \"1, 2, 3\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109752,"byte_end":109802,"line_start":204,"line_end":204,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109803,"byte_end":109810,"line_start":205,"line_end":205,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109811,"byte_end":109838,"line_start":206,"line_end":206,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":507},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":110303,"byte_end":110309,"line_start":225,"line_end":225,"column_start":8,"column_end":14},"name":"sorted","qualname":"::free::sorted","value":"pub fn sorted<I>(I) -> Vec<I::Item> where I: IntoIterator, I::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Collect all the iterable's elements into a sorted vector in ascending order.","sig":null,"attributes":[{"value":"/ Collect all the iterable's elements into a sorted vector in ascending order.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":109982,"byte_end":110062,"line_start":214,"line_end":214,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":110063,"byte_end":110066,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `iterable.sorted()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":110067,"byte_end":110125,"line_start":216,"line_end":216,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":110126,"byte_end":110129,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":110130,"byte_end":110137,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"/ use itertools::sorted;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":110138,"byte_end":110164,"line_start":219,"line_end":219,"column_start":1,"column_end":27}},{"value":"/ use itertools::assert_equal;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":110165,"byte_end":110197,"line_start":220,"line_end":220,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":110198,"byte_end":110201,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ assert_equal(sorted(\"rust\".chars()), \"rstu\".chars());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":110202,"byte_end":110259,"line_start":222,"line_end":222,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":110260,"byte_end":110267,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/free.rs","byte_start":110268,"byte_end":110295,"line_start":224,"line_end":224,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":512},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110934,"byte_end":110940,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"concat","qualname":"::concat_impl::concat","value":"pub fn concat<I>(I) -> I::Item where I: IntoIterator,\nI::Item: Extend<<<I as IntoIterator>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":null,"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[{"value":"/ Combine all an iterator's elements into one element by using `Extend`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110448,"byte_end":110522,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110523,"byte_end":110526,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator`-enabled version of `.concat()`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110527,"byte_end":110576,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110577,"byte_end":110580,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This combinator will extend the first item with each of the rest of the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110581,"byte_end":110656,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ items of the iterator. If the iterator is empty, the default value of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110657,"byte_end":110730,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ `I::Item` is returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110731,"byte_end":110757,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110758,"byte_end":110761,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110762,"byte_end":110773,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ use itertools::concat;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110774,"byte_end":110800,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110801,"byte_end":110805,"line_start":13,"line_end":13,"column_start":1,"column_end":5}},{"value":"/ let input = vec![vec![1], vec![2, 3], vec![4, 5, 6]];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110806,"byte_end":110863,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(concat(input), vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110864,"byte_end":110918,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/concat_impl.rs","byte_start":110919,"byte_end":110926,"line_start":16,"line_end":16,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":518},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/cons_tuples_impl.rs","byte_start":112699,"byte_end":112709,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"ConsTuples","qualname":"::cons_tuples_impl::ConsTuples","value":"ConsTuples {  }","parent":null,"children":[{"krate":0,"index":521}],"decl_id":null,"docs":" An iterator that maps an iterator of tuples like\n `((A, B), C)` to an iterator of `(A, B, C)`.","sig":null,"attributes":[{"value":"/ An iterator that maps an iterator of tuples like","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/cons_tuples_impl.rs","byte_start":112471,"byte_end":112523,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ `((A, B), C)` to an iterator of `(A, B, C)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/cons_tuples_impl.rs","byte_start":112524,"byte_end":112572,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/cons_tuples_impl.rs","byte_start":112573,"byte_end":112576,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Used by the `iproduct!()` macro.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/cons_tuples_impl.rs","byte_start":112577,"byte_end":112613,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/cons_tuples_impl.rs","byte_start":112614,"byte_end":112687,"line_start":44,"line_end":44,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":526},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/cons_tuples_impl.rs","byte_start":113050,"byte_end":113061,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"cons_tuples","qualname":"::cons_tuples_impl::cons_tuples","value":"pub fn cons_tuples<I, J>(I) -> ConsTuples<I, J> where I: Iterator<Item = J>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that maps for example iterators of\n `((A, B), C)` to `(A, B, C)`.\n","sig":null,"attributes":[{"value":"/ Create an iterator that maps for example iterators of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/cons_tuples_impl.rs","byte_start":112951,"byte_end":113008,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/ `((A, B), C)` to `(A, B, C)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/cons_tuples_impl.rs","byte_start":113009,"byte_end":113042,"line_start":62,"line_end":62,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":532},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":113486,"byte_end":113498,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"Combinations","qualname":"::combinations::Combinations","value":"Combinations {  }","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"decl_id":null,"docs":" An iterator to iterate through all the `n`-length combinations in an iterator.","sig":null,"attributes":[{"value":"/ An iterator to iterate through all the `n`-length combinations in an iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":113219,"byte_end":113301,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":113302,"byte_end":113305,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`.combinations()`](../trait.Itertools.html#method.combinations) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":113306,"byte_end":113400,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":113401,"byte_end":113474,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":117939,"byte_end":117952,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"FirstMismatch","qualname":"::diff::Diff::FirstMismatch","value":"Diff::FirstMismatch(usize, PutBack<I>, PutBack<J>)","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" The index of the first non-matching element along with both iterator's remaining elements\n starting with the first mis-match.\n","sig":null,"attributes":[{"value":"/ The index of the first non-matching element along with both iterator's remaining elements","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":117798,"byte_end":117891,"line_start":19,"line_end":19,"column_start":5,"column_end":98}},{"value":"/ starting with the first mis-match.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":117896,"byte_end":117934,"line_start":20,"line_end":20,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":568},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118085,"byte_end":118092,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"Shorter","qualname":"::diff::Diff::Shorter","value":"Diff::Shorter(usize, PutBack<I>)","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" The total number of elements that were in `J` along with the remaining elements of `I`.\n","sig":null,"attributes":[{"value":"/ The total number of elements that were in `J` along with the remaining elements of `I`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":117989,"byte_end":118080,"line_start":22,"line_end":22,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":572},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118213,"byte_end":118219,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Longer","qualname":"::diff::Diff::Longer","value":"Diff::Longer(usize, PutBack<J>)","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" The total number of elements that were in `I` along with the remaining elements of `J`.\n","sig":null,"attributes":[{"value":"/ The total number of elements that were in `I` along with the remaining elements of `J`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118117,"byte_end":118208,"line_start":24,"line_end":24,"column_start":5,"column_end":96}}]},{"kind":"Enum","id":{"krate":0,"index":560},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":117736,"byte_end":117740,"line_start":15,"line_end":15,"column_start":10,"column_end":14},"name":"Diff","qualname":"::diff::Diff","value":"pub enum Diff<I, J> where I: Iterator, J: Iterator {\n\n    /// The index of the first non-matching element along with both iterator's remaining elements\n    /// starting with the first mis-match.\n    FirstMismatch(usize, PutBack<I>, PutBack<J>),\n\n    /// The total number of elements that were in `J` along with the remaining elements of `I`.\n    Shorter(usize, PutBack<I>),\n\n    /// The total number of elements that were in `I` along with the remaining elements of `J`.\n    Longer(usize, PutBack<J>),\n}","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":568},{"krate":0,"index":572}],"decl_id":null,"docs":" A type returned by the [`diff_with`](./fn.diff_with.html) function.","sig":null,"attributes":[{"value":"/ A type returned by the [`diff_with`](./fn.diff_with.html) function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":117538,"byte_end":117609,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":117610,"byte_end":117613,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Diff` represents the way in which the elements yielded by the iterator `I` differ to some","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":117614,"byte_end":117708,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ iterator `J`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":117709,"byte_end":117726,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":576},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118968,"byte_end":118977,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"diff_with","qualname":"::diff::diff_with","value":"pub fn diff_with<I, J, F>(I, J, F) -> Option<Diff<I::IntoIter, J::IntoIter>>\nwhere I: IntoIterator, J: IntoIterator, F: Fn(&I::Item, &J::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares every element yielded by both `i` and `j` with the given function in lock-step and\n returns a `Diff` which describes how `j` differs from `i`.","sig":null,"attributes":[{"value":"/ Compares every element yielded by both `i` and `j` with the given function in lock-step and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118243,"byte_end":118338,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ returns a `Diff` which describes how `j` differs from `i`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118339,"byte_end":118401,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118402,"byte_end":118405,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the number of elements yielded by `j` is less than the number of elements yielded by `i`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118406,"byte_end":118502,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/ the number of `j` elements yielded will be returned along with `i`'s remaining elements as","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118503,"byte_end":118597,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"/ `Diff::Shorter`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118598,"byte_end":118618,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118619,"byte_end":118622,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ If the two elements of a step differ, the index of those elements along with the remaining","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118623,"byte_end":118717,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ elements of both `i` and `j` are returned as `Diff::FirstMismatch`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118718,"byte_end":118789,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118790,"byte_end":118793,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `i` becomes exhausted before `j` becomes exhausted, the number of elements in `i` along with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118794,"byte_end":118893,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/ the remaining `j` elements will be returned as `Diff::Longer`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/diff.rs","byte_start":118894,"byte_end":118960,"line_start":39,"line_end":39,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":584},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":120097,"byte_end":120107,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"FormatWith","qualname":"::format::FormatWith","value":"FormatWith {  }","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements lazily, separated by `sep`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":119833,"byte_end":119893,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":119894,"byte_end":119897,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The format value can only be formatted once, after that the iterator is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":119898,"byte_end":119973,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ exhausted.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":119974,"byte_end":119988,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":119989,"byte_end":119992,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.format_with()`](../trait.Itertools.html#method.format_with) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":119993,"byte_end":120085,"line_start":9,"line_end":9,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1825},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":120530,"byte_end":120536,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Format","qualname":"::format::Format","value":"Format {  }","parent":null,"children":[{"krate":0,"index":1828},{"krate":0,"index":1829}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements lazily, separated by `sep`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":120255,"byte_end":120315,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":120316,"byte_end":120319,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The format value can only be formatted once, after that the iterator is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":120320,"byte_end":120395,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ exhausted.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":120396,"byte_end":120410,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":120411,"byte_end":120414,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See [`.format()`](../trait.Itertools.html#method.format)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":120415,"byte_end":120475,"line_start":21,"line_end":21,"column_start":1,"column_end":61}},{"value":"/ for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":120476,"byte_end":120501,"line_start":22,"line_end":22,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":615},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":123249,"byte_end":123252,"line_start":6,"line_end":6,"column_start":10,"column_end":13},"name":"Key","qualname":"::groupbylazy::KeyFunction::Key","value":"type Key;","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":669},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132701,"byte_end":132708,"line_start":288,"line_end":288,"column_start":12,"column_end":19},"name":"GroupBy","qualname":"::groupbylazy::GroupBy","value":"GroupBy {  }","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674}],"decl_id":null,"docs":" `GroupBy` is the storage for the lazy grouping operation.","sig":null,"attributes":[{"value":"/ `GroupBy` is the storage for the lazy grouping operation.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132000,"byte_end":132061,"line_start":274,"line_end":274,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132062,"byte_end":132065,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ If the groups are consumed in their original order, or if each","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132066,"byte_end":132132,"line_start":276,"line_end":276,"column_start":1,"column_end":67}},{"value":"/ group is dropped without keeping it around, then `GroupBy` uses","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132133,"byte_end":132200,"line_start":277,"line_end":277,"column_start":1,"column_end":68}},{"value":"/ no allocations. It needs allocations only if several group iterators","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132201,"byte_end":132273,"line_start":278,"line_end":278,"column_start":1,"column_end":73}},{"value":"/ are alive at the same time.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132274,"byte_end":132305,"line_start":279,"line_end":279,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132306,"byte_end":132309,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132310,"byte_end":132376,"line_start":281,"line_end":281,"column_start":1,"column_end":67}},{"value":"/ itself), because the group iterators need to borrow from this","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132377,"byte_end":132442,"line_start":282,"line_end":282,"column_start":1,"column_end":66}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132443,"byte_end":132510,"line_start":283,"line_end":283,"column_start":1,"column_end":68}},{"value":"/ iterated.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132511,"byte_end":132524,"line_start":284,"line_end":284,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132525,"byte_end":132528,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ See [`.group_by()`](../trait.Itertools.html#method.group_by) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132529,"byte_end":132615,"line_start":286,"line_end":286,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":132616,"byte_end":132689,"line_start":287,"line_end":287,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":693},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":134575,"byte_end":134581,"line_start":358,"line_end":358,"column_start":12,"column_end":18},"name":"Groups","qualname":"::groupbylazy::Groups","value":"Groups {  }","parent":null,"children":[{"krate":0,"index":698}],"decl_id":null,"docs":" An iterator that yields the Group iterators.","sig":null,"attributes":[{"value":"/ An iterator that yields the Group iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":134253,"byte_end":134301,"line_start":351,"line_end":351,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":134302,"byte_end":134305,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `(K, Group)`:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":134306,"byte_end":134348,"line_start":353,"line_end":353,"column_start":1,"column_end":43}},{"value":"/ the group's key `K` and the group's iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":134349,"byte_end":134398,"line_start":354,"line_end":354,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":134399,"byte_end":134402,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ See [`.group_by()`](../trait.Itertools.html#method.group_by) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":134403,"byte_end":134489,"line_start":356,"line_end":356,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":134490,"byte_end":134563,"line_start":357,"line_end":357,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":707},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":135449,"byte_end":135454,"line_start":392,"line_end":392,"column_start":12,"column_end":17},"name":"Group","qualname":"::groupbylazy::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714}],"decl_id":null,"docs":" An iterator for the elements in a single group.","sig":null,"attributes":[{"value":"/ An iterator for the elements in a single group.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":135342,"byte_end":135393,"line_start":389,"line_end":389,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":135394,"byte_end":135397,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":135398,"byte_end":135437,"line_start":391,"line_end":391,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":730},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":137389,"byte_end":137399,"line_start":464,"line_end":464,"column_start":12,"column_end":22},"name":"IntoChunks","qualname":"::groupbylazy::IntoChunks","value":"IntoChunks {  }","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733}],"decl_id":null,"docs":" `ChunkLazy` is the storage for a lazy chunking operation.","sig":null,"attributes":[{"value":"/ `ChunkLazy` is the storage for a lazy chunking operation.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":136726,"byte_end":136787,"line_start":450,"line_end":450,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":136788,"byte_end":136791,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ `IntoChunks` behaves just like `GroupBy`: it is iterable, and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":136792,"byte_end":136857,"line_start":452,"line_end":452,"column_start":1,"column_end":66}},{"value":"/ it only buffers if several chunk iterators are alive at the same time.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":136858,"byte_end":136932,"line_start":453,"line_end":453,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":136933,"byte_end":136936,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":136937,"byte_end":137003,"line_start":455,"line_end":455,"column_start":1,"column_end":67}},{"value":"/ itself), because the chunk iterators need to borrow from this","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":137004,"byte_end":137069,"line_start":456,"line_end":456,"column_start":1,"column_end":66}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":137070,"byte_end":137137,"line_start":457,"line_end":457,"column_start":1,"column_end":68}},{"value":"/ iterated.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":137138,"byte_end":137151,"line_start":458,"line_end":458,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":137152,"byte_end":137155,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Chunk`, each chunk's iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":137156,"byte_end":137216,"line_start":460,"line_end":460,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":137217,"byte_end":137220,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ See [`.chunks()`](../trait.Itertools.html#method.chunks) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":137221,"byte_end":137303,"line_start":462,"line_end":462,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":137304,"byte_end":137377,"line_start":463,"line_end":463,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":744},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":138522,"byte_end":138528,"line_start":509,"line_end":509,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::groupbylazy::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":747}],"decl_id":null,"docs":" An iterator that yields the Chunk iterators.","sig":null,"attributes":[{"value":"/ An iterator that yields the Chunk iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":138259,"byte_end":138307,"line_start":503,"line_end":503,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":138308,"byte_end":138311,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Chunk`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":138312,"byte_end":138349,"line_start":505,"line_end":505,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":138350,"byte_end":138353,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ See [`.chunks()`](../trait.Itertools.html#method.chunks) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":138354,"byte_end":138436,"line_start":507,"line_end":507,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":138437,"byte_end":138510,"line_start":508,"line_end":508,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":139246,"byte_end":139251,"line_start":540,"line_end":540,"column_start":12,"column_end":17},"name":"Chunk","qualname":"::groupbylazy::Chunk","value":"Chunk {  }","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759}],"decl_id":null,"docs":" An iterator for the elements in a single chunk.","sig":null,"attributes":[{"value":"/ An iterator for the elements in a single chunk.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":139139,"byte_end":139190,"line_start":537,"line_end":537,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":139191,"byte_end":139194,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":139195,"byte_end":139234,"line_start":539,"line_end":539,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1872},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/intersperse.rs","byte_start":140278,"byte_end":140289,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876}],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor to insert a particular value","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/intersperse.rs","byte_start":139916,"byte_end":139968,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/ between each element of the adapted iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/intersperse.rs","byte_start":139969,"byte_end":140018,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/intersperse.rs","byte_start":140019,"byte_end":140022,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/intersperse.rs","byte_start":140023,"byte_end":140061,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/intersperse.rs","byte_start":140062,"byte_end":140065,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/intersperse.rs","byte_start":140066,"byte_end":140095,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/intersperse.rs","byte_start":140096,"byte_end":140099,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`.intersperse()`](../trait.Itertools.html#method.intersperse) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/intersperse.rs","byte_start":140100,"byte_end":140192,"line_start":12,"line_end":12,"column_start":1,"column_end":93}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/intersperse.rs","byte_start":140193,"byte_end":140266,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":803},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144459,"byte_end":144465,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"KMerge","qualname":"::kmerge_impl::KMerge","value":"KMerge {  }","parent":null,"children":[{"krate":0,"index":805}],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators in ascending order.\n If all base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges an abitrary number of base iterators in ascending order.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144078,"byte_end":144170,"line_start":106,"line_end":106,"column_start":1,"column_end":93}},{"value":"/ If all base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144171,"byte_end":144242,"line_start":107,"line_end":107,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144243,"byte_end":144246,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144247,"byte_end":144286,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144287,"byte_end":144290,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ See [`.kmerge()`](../trait.Itertools.html#method.kmerge) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144291,"byte_end":144373,"line_start":111,"line_end":111,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144374,"byte_end":144447,"line_start":112,"line_end":112,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":806},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144843,"byte_end":144849,"line_start":131,"line_end":131,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::kmerge_impl::kmerge","value":"pub fn kmerge<I>(I) -> KMerge<<I::Item as IntoIterator>::IntoIter> where\nI: IntoIterator, I::Item: IntoIterator,\n<<I as IntoIterator>::Item as IntoIterator>::Item: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators using\n the ordering function.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements of the contained iterators using","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144524,"byte_end":144600,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ the ordering function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144601,"byte_end":144627,"line_start":120,"line_end":120,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144628,"byte_end":144631,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `iterable.into_iter().kmerge()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144632,"byte_end":144682,"line_start":122,"line_end":122,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144683,"byte_end":144686,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144687,"byte_end":144694,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ use itertools::kmerge;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144695,"byte_end":144721,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144722,"byte_end":144725,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ for elt in kmerge(vec![vec![0, 2, 4], vec![1, 3, 5], vec![6, 7]]) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144726,"byte_end":144797,"line_start":127,"line_end":127,"column_start":1,"column_end":72}},{"value":"/     /* loop body */","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144798,"byte_end":144821,"line_start":128,"line_end":128,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144822,"byte_end":144827,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":144828,"byte_end":144835,"line_start":130,"line_end":130,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":820},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146503,"byte_end":146511,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"KMergeBy","qualname":"::kmerge_impl::KMergeBy","value":"KMergeBy {  }","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824}],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators\n according to an ordering function.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges an abitrary number of base iterators","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146165,"byte_end":146237,"line_start":180,"line_end":180,"column_start":1,"column_end":73}},{"value":"/ according to an ordering function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146238,"byte_end":146276,"line_start":181,"line_end":181,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146277,"byte_end":146280,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146281,"byte_end":146320,"line_start":183,"line_end":183,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146321,"byte_end":146324,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ See [`.kmerge_by()`](../trait.Itertools.html#method.kmerge_by) for more","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146325,"byte_end":146400,"line_start":185,"line_end":185,"column_start":1,"column_end":76}},{"value":"/ information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146401,"byte_end":146417,"line_start":186,"line_end":186,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146418,"byte_end":146491,"line_start":187,"line_end":187,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":825},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146738,"byte_end":146747,"line_start":198,"line_end":198,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::kmerge_impl::kmerge_by","value":"pub fn kmerge_by<I, F>(I, F)\n-> KMergeBy<<I::Item as IntoIterator>::IntoIter, F> where I: IntoIterator,\nI::Item: IntoIterator,\nF: FnMut(&<<I as IntoIterator>::Item as IntoIterator>::Item,\n         &<<I as IntoIterator>::Item as IntoIterator>::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements of the contained iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146592,"byte_end":146663,"line_start":195,"line_end":195,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146664,"byte_end":146667,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `iterable.into_iter().kmerge_by(less_than)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":146668,"byte_end":146730,"line_start":197,"line_end":197,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":845},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/merge_join.rs","byte_start":148456,"byte_end":148469,"line_start":10,"line_end":10,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::merge_join::merge_join_by","value":"pub fn merge_join_by<I, J, F>(I, J, F)\n-> MergeJoinBy<I::IntoIter, J::IntoIter, F> where I: IntoIterator,\nJ: IntoIterator, F: FnMut(&I::Item, &J::Item) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/merge_join.rs","byte_start":148249,"byte_end":148350,"line_start":7,"line_end":7,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/merge_join.rs","byte_start":148351,"byte_end":148354,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_join_by()`](trait.Itertools.html#method.merge_join_by) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/merge_join.rs","byte_start":148355,"byte_end":148448,"line_start":9,"line_end":9,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":849},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/merge_join.rs","byte_start":149095,"byte_end":149106,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"MergeJoinBy","qualname":"::merge_join::MergeJoinBy","value":"MergeJoinBy {  }","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"decl_id":null,"docs":" An iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merge-joins items from the two base iterators in ascending order.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/merge_join.rs","byte_start":148814,"byte_end":148908,"line_start":23,"line_end":23,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/merge_join.rs","byte_start":148909,"byte_end":148912,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_join_by()`](../trait.Itertools.html#method.merge_join_by) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/merge_join.rs","byte_start":148913,"byte_end":149009,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/merge_join.rs","byte_start":149010,"byte_end":149083,"line_start":26,"line_end":26,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1882},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":150877,"byte_end":150887,"line_start":7,"line_end":7,"column_start":5,"column_end":15},"name":"NoElements","qualname":"::minmax::MinMaxResult::NoElements","value":"MinMaxResult::NoElements","parent":{"krate":0,"index":1880},"children":[],"decl_id":null,"docs":" Empty iterator\n","sig":null,"attributes":[{"value":"/ Empty iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":150854,"byte_end":150872,"line_start":6,"line_end":6,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1884},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":150969,"byte_end":150979,"line_start":10,"line_end":10,"column_start":5,"column_end":15},"name":"OneElement","qualname":"::minmax::MinMaxResult::OneElement","value":"MinMaxResult::OneElement(T)","parent":{"krate":0,"index":1880},"children":[],"decl_id":null,"docs":" Iterator with one element, so the minimum and maximum are the same\n","sig":null,"attributes":[{"value":"/ Iterator with one element, so the minimum and maximum are the same","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":150894,"byte_end":150964,"line_start":9,"line_end":9,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1887},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151092,"byte_end":151098,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"MinMax","qualname":"::minmax::MinMaxResult::MinMax","value":"MinMaxResult::MinMax(T, T)","parent":{"krate":0,"index":1880},"children":[],"decl_id":null,"docs":" More than one element in the iterator, the first element is not larger\n than the second\n","sig":null,"attributes":[{"value":"/ More than one element in the iterator, the first element is not larger","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":150989,"byte_end":151063,"line_start":12,"line_end":12,"column_start":5,"column_end":79}},{"value":"/ than the second","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151068,"byte_end":151087,"line_start":13,"line_end":13,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1880},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":150832,"byte_end":150844,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"MinMaxResult","qualname":"::minmax::MinMaxResult","value":"pub enum MinMaxResult<T> {\n\n    /// Empty iterator\n    NoElements,\n\n    /// Iterator with one element, so the minimum and maximum are the same\n    OneElement(T),\n\n    /// More than one element in the iterator, the first element is not larger\n    /// than the second\n    MinMax(T, T),\n}","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1887}],"decl_id":null,"docs":" `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for\n more detail.\n","sig":null,"attributes":[{"value":"/ `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":150683,"byte_end":150764,"line_start":2,"line_end":2,"column_start":1,"column_end":82}},{"value":"/ more detail.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":150765,"byte_end":150781,"line_start":3,"line_end":3,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151916,"byte_end":151927,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"into_option","qualname":"<MinMaxResult<T>>::into_option","value":"pub fn into_option(Self) -> Option<(T, T)>","parent":null,"children":[],"decl_id":null,"docs":" `into_option` creates an `Option` of type `(T, T)`. The returned `Option`\n has variant `None` if and only if the `MinMaxResult` has variant\n `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`.\n If the `MinMaxResult` has variant `OneElement(x)`, performing this\n operation will make one clone of `x`.","sig":null,"attributes":[{"value":"/ `into_option` creates an `Option` of type `(T, T)`. The returned `Option`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151145,"byte_end":151222,"line_start":18,"line_end":18,"column_start":5,"column_end":82}},{"value":"/ has variant `None` if and only if the `MinMaxResult` has variant","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151227,"byte_end":151295,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151300,"byte_end":151370,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ If the `MinMaxResult` has variant `OneElement(x)`, performing this","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151375,"byte_end":151445,"line_start":21,"line_end":21,"column_start":5,"column_end":75}},{"value":"/ operation will make one clone of `x`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151450,"byte_end":151491,"line_start":22,"line_end":22,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151496,"byte_end":151499,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151504,"byte_end":151518,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151523,"byte_end":151526,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151531,"byte_end":151538,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use itertools::MinMaxResult::{self, NoElements, OneElement, MinMax};","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151543,"byte_end":151615,"line_start":27,"line_end":27,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151620,"byte_end":151623,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let r: MinMaxResult<i32> = NoElements;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151628,"byte_end":151670,"line_start":29,"line_end":29,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(r.into_option(), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151675,"byte_end":151713,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151718,"byte_end":151721,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let r = OneElement(1);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151726,"byte_end":151752,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(r.into_option(), Some((1, 1)));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151757,"byte_end":151803,"line_start":33,"line_end":33,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151808,"byte_end":151811,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let r = MinMax(1, 2);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151816,"byte_end":151841,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(r.into_option(), Some((1, 2)));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151846,"byte_end":151892,"line_start":36,"line_end":36,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151897,"byte_end":151904,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1905},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":154727,"byte_end":154736,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"MultiPeek","qualname":"::multipeek_impl::MultiPeek","value":"MultiPeek {  }","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909}],"decl_id":null,"docs":" See [`multipeek()`](../fn.multipeek.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`multipeek()`](../fn.multipeek.html) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":154624,"byte_end":154691,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":877},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":154962,"byte_end":154971,"line_start":20,"line_end":20,"column_start":8,"column_end":17},"name":"multipeek","qualname":"::multipeek_impl::multipeek","value":"pub fn multipeek<I>(I) -> MultiPeek<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that allows the user to peek at multiple `.next()`\n values without advancing the base iterator.\n","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows the user to peek at multiple `.next()`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":154832,"byte_end":154906,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ values without advancing the base iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":154907,"byte_end":154954,"line_start":19,"line_end":19,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":155253,"byte_end":155263,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"reset_peek","qualname":"<MultiPeek<I>>::reset_peek","value":"pub fn reset_peek(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the peeking “cursor”\n","sig":null,"attributes":[{"value":"/ Reset the peeking “cursor”","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":155207,"byte_end":155241,"line_start":33,"line_end":33,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":155527,"byte_end":155531,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"peek","qualname":"<MultiPeek<I>>::peek","value":"pub fn peek(&mut Self) -> Option<&I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Works exactly like `.next()` with the only difference that it doesn't\n advance itself. `.peek()` can be called multiple times, to peek\n further ahead.\n","sig":null,"attributes":[{"value":"/ Works exactly like `.next()` with the only difference that it doesn't","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":155347,"byte_end":155420,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ advance itself. `.peek()` can be called multiple times, to peek","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":155425,"byte_end":155492,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/ further ahead.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":155497,"byte_end":155515,"line_start":42,"line_end":42,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1916},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":157330,"byte_end":157338,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"PadUsing","qualname":"::pad_tail::PadUsing","value":"PadUsing {  }","parent":null,"children":[{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922}],"decl_id":null,"docs":" An iterator adaptor that pads a sequence to a minimum length by filling\n missing elements using a closure.","sig":null,"attributes":[{"value":"/ An iterator adaptor that pads a sequence to a minimum length by filling","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":156977,"byte_end":157052,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ missing elements using a closure.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":157053,"byte_end":157090,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":157091,"byte_end":157094,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":157095,"byte_end":157134,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":157135,"byte_end":157138,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.pad_using()`](../trait.Itertools.html#method.pad_using) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":157139,"byte_end":157227,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":157245,"byte_end":157318,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":919},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159536,"byte_end":159547,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"name":"PeekingNext","qualname":"::peeking_take_while::PeekingNext","value":"PeekingNext: Iterator","parent":null,"children":[{"krate":0,"index":920}],"decl_id":null,"docs":" An iterator that allows peeking at an element before deciding to accept it.","sig":null,"attributes":[{"value":"/ An iterator that allows peeking at an element before deciding to accept it.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159130,"byte_end":159209,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159210,"byte_end":159213,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.peeking_take_while()`](trait.Itertools.html#method.peeking_take_while)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159214,"byte_end":159295,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/ for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159296,"byte_end":159321,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159322,"byte_end":159325,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is implemented by peeking adaptors like peekable and put back,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159326,"byte_end":159397,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ but also by a few iterators that can be peeked natively, like the slice’s","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159398,"byte_end":159477,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ by reference iterator (`std::slice::Iter`).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159478,"byte_end":159525,"line_start":14,"line_end":14,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159731,"byte_end":159743,"line_start":19,"line_end":19,"column_start":8,"column_end":20},"name":"peeking_next","qualname":"::peeking_take_while::PeekingNext::peeking_next","value":"pub fn peeking_next<F>(&mut Self, F) -> Option<Self::Item> where\nF: FnOnce(&Self::Item) -> bool","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":" Pass a reference to the next iterator element to the closure `accept`;\n if `accept` returns true, return it as the next element,\n else None.\n","sig":null,"attributes":[{"value":"/ Pass a reference to the next iterator element to the closure `accept`;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159565,"byte_end":159639,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ if `accept` returns true, return it as the next element,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159644,"byte_end":159704,"line_start":17,"line_end":17,"column_start":5,"column_end":65}},{"value":"/ else None.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159709,"byte_end":159723,"line_start":18,"line_end":18,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":934},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":161262,"byte_end":161278,"line_start":80,"line_end":80,"column_start":12,"column_end":28},"name":"PeekingTakeWhile","qualname":"::peeking_take_while::PeekingTakeWhile","value":"PeekingTakeWhile {  }","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"decl_id":null,"docs":" An iterator adaptor that takes items while a closure returns `true`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that takes items while a closure returns `true`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":160989,"byte_end":161061,"line_start":75,"line_end":75,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":161062,"byte_end":161065,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ See [`.peeking_take_while()`](../trait.Itertools.html#method.peeking_take_while)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":161066,"byte_end":161150,"line_start":77,"line_end":77,"column_start":1,"column_end":85}},{"value":"/ for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":161151,"byte_end":161176,"line_start":78,"line_end":78,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":161177,"byte_end":161250,"line_start":79,"line_end":79,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":952},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":163747,"byte_end":163761,"line_start":8,"line_end":8,"column_start":12,"column_end":26},"name":"ProcessResults","qualname":"::process_results_impl::ProcessResults","value":"ProcessResults {  }","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957}],"decl_id":null,"docs":" An iterator that produces only the `T` values as long as the\n inner iterator produces `Ok(T)`.","sig":null,"attributes":[{"value":"/ An iterator that produces only the `T` values as long as the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":163456,"byte_end":163520,"line_start":2,"line_end":2,"column_start":1,"column_end":65}},{"value":"/ inner iterator produces `Ok(T)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":163521,"byte_end":163557,"line_start":3,"line_end":3,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":163558,"byte_end":163561,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Used by [`process_results`](../fn.process_results.html), see its docs","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":163562,"byte_end":163635,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":163636,"byte_end":163661,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":163662,"byte_end":163735,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":966},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165666,"byte_end":165681,"line_start":70,"line_end":70,"column_start":8,"column_end":23},"name":"process_results","qualname":"::process_results_impl::process_results","value":"pub fn process_results<I, F, T, E, R>(I, F) -> Result<R, E> where\nI: IntoIterator<Item = Result<T, E>>,\nF: FnOnce(ProcessResults<, I::IntoIter, E>) -> R","parent":null,"children":[],"decl_id":null,"docs":" “Lift” a function of the values of an iterator so that it can process\n an iterator of `Result` values instead.","sig":null,"attributes":[{"value":"/ “Lift” a function of the values of an iterator so that it can process","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164333,"byte_end":164410,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ an iterator of `Result` values instead.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164411,"byte_end":164454,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164455,"byte_end":164458,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ `iterable` is an iterator or iterable with `Result<T, E>` elements, where","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164459,"byte_end":164536,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ `T` is the value type and `E` the error type.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164537,"byte_end":164586,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164587,"byte_end":164590,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ `processor` is a closure that receives an adapted version of the iterable","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164591,"byte_end":164668,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ as the only argument — the adapted iterator produces elements of type `T`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164669,"byte_end":164749,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ as long as the original iterator produces `Ok` values.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164750,"byte_end":164808,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164809,"byte_end":164812,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the original iterable produces an error at any point, the adapted","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164813,"byte_end":164885,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ iterator ends and the `process_results` function will return the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164886,"byte_end":164954,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ error iself.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164955,"byte_end":164971,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164972,"byte_end":164975,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Otherwise, the return value from the closure is returned wrapped","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":164976,"byte_end":165044,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ inside `Ok`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165045,"byte_end":165061,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165062,"byte_end":165065,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165066,"byte_end":165079,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165080,"byte_end":165083,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165084,"byte_end":165091,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use itertools::process_results;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165092,"byte_end":165127,"line_start":55,"line_end":55,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165128,"byte_end":165131,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ type R = Result<i32, &'static str>;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165132,"byte_end":165171,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165172,"byte_end":165175,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let first_values: Vec<R> = vec![Ok(1), Ok(0), Ok(3)];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165176,"byte_end":165233,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ let second_values: Vec<R> = vec![Ok(2), Ok(1), Err(\"overflow\")];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165234,"byte_end":165302,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165303,"byte_end":165306,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // “Lift” the iterator .max() method to work on the values in Results using process_results","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165307,"byte_end":165406,"line_start":62,"line_end":62,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165407,"byte_end":165410,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let first_max = process_results(first_values, |iter| iter.max().unwrap_or(0));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165411,"byte_end":165493,"line_start":64,"line_end":64,"column_start":1,"column_end":83}},{"value":"/ let second_max = process_results(second_values, |iter| iter.max().unwrap_or(0));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165494,"byte_end":165578,"line_start":65,"line_end":65,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165579,"byte_end":165582,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(first_max, Ok(3));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165583,"byte_end":165616,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ assert!(second_max.is_err());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165617,"byte_end":165650,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":165651,"byte_end":165658,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1972},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166205,"byte_end":166213,"line_start":8,"line_end":8,"column_start":12,"column_end":20},"name":"PutBackN","qualname":"::put_back_n_impl::PutBackN","value":"PutBackN {  }","parent":null,"children":[{"krate":0,"index":1974},{"krate":0,"index":1975}],"decl_id":null,"docs":" An iterator adaptor that allows putting multiple\n items in front of the iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows putting multiple","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166037,"byte_end":166089,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/ items in front of the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166090,"byte_end":166125,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166126,"byte_end":166129,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166130,"byte_end":166169,"line_start":6,"line_end":6,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":975},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166416,"byte_end":166426,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"put_back_n","qualname":"::put_back_n_impl::put_back_n","value":"pub fn put_back_n<I>(I) -> PutBackN<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back multiple values to the front\n of the iteration.","sig":null,"attributes":[{"value":"/ Create an iterator where you can put back multiple values to the front","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166268,"byte_end":166342,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ of the iteration.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166343,"byte_end":166364,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166365,"byte_end":166368,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166369,"byte_end":166408,"line_start":16,"line_end":16,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":167009,"byte_end":167017,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBackN<I>>::put_back","value":"pub fn put_back(&mut Self, I::Item)","parent":null,"children":[],"decl_id":null,"docs":" Puts x in front of the iterator.\n The values are yielded in order of the most recently put back\n values first.","sig":null,"attributes":[{"value":"/ Puts x in front of the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166617,"byte_end":166653,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/ The values are yielded in order of the most recently put back","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166658,"byte_end":166723,"line_start":28,"line_end":28,"column_start":5,"column_end":70}},{"value":"/ values first.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166728,"byte_end":166745,"line_start":29,"line_end":29,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166750,"byte_end":166753,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166758,"byte_end":166769,"line_start":31,"line_end":31,"column_start":5,"column_end":16}},{"value":"/ use itertools::put_back_n;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166774,"byte_end":166804,"line_start":32,"line_end":32,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166809,"byte_end":166812,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let mut it = put_back_n(1..5);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166817,"byte_end":166851,"line_start":34,"line_end":34,"column_start":5,"column_end":39}},{"value":"/ it.next();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166856,"byte_end":166870,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/ it.put_back(1);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166875,"byte_end":166894,"line_start":36,"line_end":36,"column_start":5,"column_end":24}},{"value":"/ it.put_back(0);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166899,"byte_end":166918,"line_start":37,"line_end":37,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166923,"byte_end":166926,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ assert!(itertools::equal(it, 0..5));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166931,"byte_end":166971,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166976,"byte_end":166983,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166988,"byte_end":166997,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":989},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":167631,"byte_end":167637,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"RcIter","qualname":"::rciter_impl::RcIter","value":"RcIter { rciter }","parent":null,"children":[{"krate":0,"index":991}],"decl_id":null,"docs":" A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.\n","sig":null,"attributes":[{"value":"/ A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":167546,"byte_end":167619,"line_start":6,"line_end":6,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":991},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":167679,"byte_end":167685,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"name":"rciter","qualname":"::rciter_impl::RcIter::rciter","value":"std::rc::Rc<std::cell::RefCell<I>>","parent":{"krate":0,"index":989},"children":[],"decl_id":null,"docs":" The boxed iterator.\n","sig":null,"attributes":[{"value":"/ The boxed iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":167647,"byte_end":167670,"line_start":8,"line_end":8,"column_start":5,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":992},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168954,"byte_end":168960,"line_start":46,"line_end":46,"column_start":8,"column_end":14},"name":"rciter","qualname":"::rciter_impl::rciter","value":"pub fn rciter<I>(I) -> RcIter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator inside a `Rc<RefCell<_>>` wrapper.","sig":null,"attributes":[{"value":"/ Return an iterator inside a `Rc<RefCell<_>>` wrapper.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":167706,"byte_end":167763,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":167764,"byte_end":167767,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The returned `RcIter` can be cloned, and each clone will refer back to the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":167768,"byte_end":167846,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ same original iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":167847,"byte_end":167874,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":167875,"byte_end":167878,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `RcIter` allows doing interesting things like using `.zip()` on an iterator with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":167879,"byte_end":167963,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ itself, at the cost of runtime borrow checking which may have a performance","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":167964,"byte_end":168043,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ penalty.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168044,"byte_end":168056,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168057,"byte_end":168060,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168061,"byte_end":168103,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168104,"byte_end":168107,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168108,"byte_end":168115,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ use itertools::rciter;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168116,"byte_end":168142,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/ use itertools::zip;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168143,"byte_end":168166,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168167,"byte_end":168170,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // In this example a range iterator is created and we iterate it using","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168171,"byte_end":168245,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ // three separate handles (two of them given to zip).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168246,"byte_end":168303,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/ // We also use the IntoIterator implementation for `&RcIter`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168304,"byte_end":168369,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168370,"byte_end":168373,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let mut iter = rciter(0..9);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168374,"byte_end":168406,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/ let mut z = zip(&iter, &iter);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168407,"byte_end":168441,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168442,"byte_end":168445,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(z.next(), Some((0, 1)));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168446,"byte_end":168485,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), Some((2, 3)));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168486,"byte_end":168525,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), Some((4, 5)));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168526,"byte_end":168565,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(iter.next(), Some(6));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168566,"byte_end":168603,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(z.next(), Some((7, 8)));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168604,"byte_end":168643,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168644,"byte_end":168675,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168676,"byte_end":168683,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168684,"byte_end":168687,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ **Panics** in iterator methods if a borrow error is encountered in the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168688,"byte_end":168762,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ iterator methods. It can only happen if the `RcIter` is reentered in","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168763,"byte_end":168835,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/ `.next()`, i.e. if it somehow participates in an “iterator knot”","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168836,"byte_end":168908,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ where it is an adaptor of itself.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":168909,"byte_end":168946,"line_start":45,"line_end":45,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1013},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":170450,"byte_end":170457,"line_start":6,"line_end":6,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::repeatn::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016}],"decl_id":null,"docs":" An iterator that produces *n* repetitions of an element.","sig":null,"attributes":[{"value":"/ An iterator that produces *n* repetitions of an element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":170242,"byte_end":170302,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":170303,"byte_end":170306,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ See [`repeat_n()`](../fn.repeat_n.html) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":170307,"byte_end":170372,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":170373,"byte_end":170438,"line_start":5,"line_end":5,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1017},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":170574,"byte_end":170582,"line_start":12,"line_end":12,"column_start":8,"column_end":16},"name":"repeat_n","qualname":"::repeatn::repeat_n","value":"pub fn repeat_n<A>(A, usize) -> RepeatN<A> where A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that produces `n` repetitions of `element`.\n","sig":null,"attributes":[{"value":"/ Create an iterator that produces `n` repetitions of `element`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":170500,"byte_end":170566,"line_start":11,"line_end":11,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174193,"byte_end":174203,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"RepeatCall","qualname":"::sources::RepeatCall","value":"RepeatCall {  }","parent":null,"children":[{"krate":0,"index":1048}],"decl_id":null,"docs":" See [`repeat_call`](../fn.repeat_call.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`repeat_call`](../fn.repeat_call.html) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174112,"byte_end":174181,"line_start":7,"line_end":7,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":1051},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174895,"byte_end":174906,"line_start":39,"line_end":39,"column_start":8,"column_end":19},"name":"repeat_call","qualname":"::sources::repeat_call","value":"pub fn repeat_call<F, A>(F) -> RepeatCall<F> where F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" An iterator source that produces elements indefinitely by calling\n a given closure.","sig":null,"attributes":[{"value":"/ An iterator source that produces elements indefinitely by calling","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174301,"byte_end":174370,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ a given closure.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174371,"byte_end":174391,"line_start":18,"line_end":18,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174392,"byte_end":174395,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is the return type of the closure.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174396,"byte_end":174456,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174457,"byte_end":174460,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174461,"byte_end":174468,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use itertools::repeat_call;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174469,"byte_end":174500,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174501,"byte_end":174530,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/ use std::collections::BinaryHeap;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174531,"byte_end":174568,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174569,"byte_end":174572,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut heap = BinaryHeap::from(vec![2, 5, 3, 7, 8]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174573,"byte_end":174630,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174631,"byte_end":174634,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // extract each element in sorted order","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174635,"byte_end":174678,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ for element in repeat_call(|| heap.pop()).while_some() {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174679,"byte_end":174739,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/     print!(\"{}\", element);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174740,"byte_end":174770,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174771,"byte_end":174776,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174777,"byte_end":174780,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174781,"byte_end":174809,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/     repeat_call(|| 1).take(5),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174810,"byte_end":174844,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/     vec![1, 1, 1, 1, 1]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174845,"byte_end":174872,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174873,"byte_end":174879,"line_start":37,"line_end":37,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174880,"byte_end":174887,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1060},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176513,"byte_end":176519,"line_start":97,"line_end":97,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sources::unfold","value":"pub fn unfold<A, St, F>(St, F) -> Unfold<St, F> where F: FnMut(&mut St) ->\nOption<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unfold source with the specified closure as the \"iterator\n function\" and an initial state to eventually pass to the closure","sig":null,"attributes":[{"value":"/ Creates a new unfold source with the specified closure as the \"iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175271,"byte_end":175346,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ function\" and an initial state to eventually pass to the closure","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175347,"byte_end":175415,"line_start":61,"line_end":61,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175416,"byte_end":175419,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ `unfold` is a general iterator builder: it has a mutable state value,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175420,"byte_end":175493,"line_start":63,"line_end":63,"column_start":1,"column_end":74}},{"value":"/ and a closure with access to the state that produces the next value.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175494,"byte_end":175566,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175567,"byte_end":175570,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This more or less equivalent to a regular struct with an `Iterator`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175571,"byte_end":175642,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/ implementation, and is useful for one-off iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175643,"byte_end":175699,"line_start":67,"line_end":67,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175700,"byte_end":175703,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175704,"byte_end":175711,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ // an iterator that yields sequential Fibonacci numbers,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175712,"byte_end":175772,"line_start":70,"line_end":70,"column_start":1,"column_end":61}},{"value":"/ // and stops at the maximum representable value.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175773,"byte_end":175825,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175826,"byte_end":175829,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ use itertools::unfold;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175830,"byte_end":175856,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175857,"byte_end":175860,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let (mut x1, mut x2) = (1u32, 1u32);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175861,"byte_end":175901,"line_start":75,"line_end":75,"column_start":1,"column_end":41}},{"value":"/ let mut fibonacci = unfold((), move |_| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175902,"byte_end":175947,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"/     // Attempt to get the next Fibonacci number","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175948,"byte_end":175999,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/     let next = x1.saturating_add(x2);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176000,"byte_end":176041,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176042,"byte_end":176045,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     // Shift left: ret <- x1 <- x2 <- next","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176046,"byte_end":176092,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/     let ret = x1;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176093,"byte_end":176114,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/     x1 = x2;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176115,"byte_end":176131,"line_start":82,"line_end":82,"column_start":1,"column_end":17}},{"value":"/     x2 = next;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176132,"byte_end":176150,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176151,"byte_end":176154,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     // If addition has saturated at the maximum, we are finished","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176155,"byte_end":176223,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/     if ret == x1 && ret > 1 {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176224,"byte_end":176257,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/         return None;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176258,"byte_end":176282,"line_start":87,"line_end":87,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176283,"byte_end":176292,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176293,"byte_end":176296,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     Some(ret)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176297,"byte_end":176314,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/ });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176315,"byte_end":176322,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176323,"byte_end":176326,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(fibonacci.by_ref().take(8),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176327,"byte_end":176382,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/                         vec![1, 1, 2, 3, 5, 8, 13, 21]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176383,"byte_end":176443,"line_start":94,"line_end":94,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(fibonacci.last(), Some(2_971_215_073))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176444,"byte_end":176497,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176498,"byte_end":176505,"line_start":96,"line_end":96,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1984},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176945,"byte_end":176951,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::sources::Unfold","value":"Unfold { state }","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1988}],"decl_id":null,"docs":" See [`unfold`](../fn.unfold.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`unfold`](../fn.unfold.html) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176791,"byte_end":176850,"line_start":112,"line_end":112,"column_start":1,"column_end":60}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176868,"byte_end":176933,"line_start":114,"line_end":114,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1988},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177059,"byte_end":177064,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"name":"state","qualname":"::sources::Unfold::state","value":"St","parent":{"krate":0,"index":1984},"children":[],"decl_id":null,"docs":" Internal state that will be passed to the closure on the next iteration\n","sig":null,"attributes":[{"value":"/ Internal state that will be passed to the closure on the next iteration","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176975,"byte_end":177050,"line_start":117,"line_end":117,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1993},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177724,"byte_end":177731,"line_start":145,"line_end":145,"column_start":12,"column_end":19},"name":"Iterate","qualname":"::sources::Iterate","value":"Iterate {  }","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1997}],"decl_id":null,"docs":" An iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[{"value":"/ An iterator that infinitely applies function to value and yields results.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177414,"byte_end":177491,"line_start":138,"line_end":138,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177492,"byte_end":177495,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iterate()`] function. See its documentation for more.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177496,"byte_end":177587,"line_start":140,"line_end":140,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177588,"byte_end":177591,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`iterate()`]: ../fn.iterate.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177592,"byte_end":177629,"line_start":142,"line_end":142,"column_start":1,"column_end":38}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177647,"byte_end":177712,"line_start":144,"line_end":144,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1083},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":178488,"byte_end":178495,"line_start":180,"line_end":180,"column_start":8,"column_end":15},"name":"iterate","qualname":"::sources::iterate","value":"pub fn iterate<St, F>(St, F) -> Iterate<St, F> where F: FnMut(&St) -> St","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[{"value":"/ Creates a new iterator that infinitely applies function to value and yields results.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":178256,"byte_end":178344,"line_start":173,"line_end":173,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":178345,"byte_end":178348,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":178349,"byte_end":178356,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/ use itertools::iterate;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":178357,"byte_end":178384,"line_start":176,"line_end":176,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":178385,"byte_end":178388,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(iterate(1, |&i| i * 3).take(5), vec![1, 3, 9, 27, 81]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":178389,"byte_end":178472,"line_start":178,"line_end":178,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":178473,"byte_end":178480,"line_start":179,"line_end":179,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1097},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tee.rs","byte_start":179182,"byte_end":179185,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"Tee","qualname":"::tee::Tee","value":"Tee {  }","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100}],"decl_id":null,"docs":" One half of an iterator pair where both return the same elements.","sig":null,"attributes":[{"value":"/ One half of an iterator pair where both return the same elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tee.rs","byte_start":178946,"byte_end":179015,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tee.rs","byte_start":179016,"byte_end":179019,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ See [`.tee()`](../trait.Itertools.html#method.tee) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tee.rs","byte_start":179020,"byte_end":179096,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tee.rs","byte_start":179097,"byte_end":179170,"line_start":18,"line_end":18,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1112},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":181014,"byte_end":181025,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"TupleBuffer","qualname":"::tuple_impl::TupleBuffer","value":"TupleBuffer {  }","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115}],"decl_id":null,"docs":" An iterator over a incomplete tuple.","sig":null,"attributes":[{"value":"/ An iterator over a incomplete tuple.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":180823,"byte_end":180863,"line_start":5,"line_end":5,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":180864,"byte_end":180867,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`.tuples()`](../trait.Itertools.html#method.tuples) and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":180868,"byte_end":180932,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/ [`Tuples::into_buffer()`](struct.Tuples.html#method.into_buffer).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":180933,"byte_end":181002,"line_start":8,"line_end":8,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1127},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":182251,"byte_end":182257,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"Tuples","qualname":"::tuple_impl::Tuples","value":"Tuples {  }","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"decl_id":null,"docs":" An iterator that groups the items in tuples of a specific size.","sig":null,"attributes":[{"value":"/ An iterator that groups the items in tuples of a specific size.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":182011,"byte_end":182078,"line_start":60,"line_end":60,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":182079,"byte_end":182082,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ See [`.tuples()`](../trait.Itertools.html#method.tuples) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":182083,"byte_end":182165,"line_start":62,"line_end":62,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":182166,"byte_end":182239,"line_start":63,"line_end":63,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183296,"byte_end":183307,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Tuples<I, T>>::into_buffer","value":"pub fn into_buffer(Self) -> TupleBuffer<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a buffer with the produced items that was not enough to be grouped in a tuple.","sig":null,"attributes":[{"value":"/ Return a buffer with the produced items that was not enough to be grouped in a tuple.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":182927,"byte_end":183016,"line_start":98,"line_end":98,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183021,"byte_end":183024,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183029,"byte_end":183036,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183041,"byte_end":183070,"line_start":101,"line_end":101,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183075,"byte_end":183078,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut iter = (0..5).tuples();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183083,"byte_end":183118,"line_start":103,"line_end":103,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Some((0, 1, 2)), iter.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183123,"byte_end":183168,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183173,"byte_end":183207,"line_start":105,"line_end":105,"column_start":5,"column_end":39}},{"value":"/ itertools::assert_equal(vec![3, 4], iter.into_buffer());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183212,"byte_end":183272,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183277,"byte_end":183284,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1144},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183654,"byte_end":183666,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"TupleWindows","qualname":"::tuple_impl::TupleWindows","value":"TupleWindows {  }","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1148}],"decl_id":null,"docs":" An iterator over all contiguous windows that produces tuples of a specific size.","sig":null,"attributes":[{"value":"/ An iterator over all contiguous windows that produces tuples of a specific size.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183379,"byte_end":183463,"line_start":114,"line_end":114,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183464,"byte_end":183467,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ See [`.tuple_windows()`](../trait.Itertools.html#method.tuple_windows) for more","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183468,"byte_end":183551,"line_start":116,"line_end":116,"column_start":1,"column_end":84}},{"value":"/ information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183552,"byte_end":183568,"line_start":117,"line_end":117,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":183569,"byte_end":183642,"line_start":118,"line_end":118,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1158},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":184963,"byte_end":184975,"line_start":172,"line_end":172,"column_start":11,"column_end":23},"name":"TupleCollect","qualname":"::tuple_impl::TupleCollect","value":"TupleCollect: Sized","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1166}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1159},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":184994,"byte_end":184998,"line_start":173,"line_end":173,"column_start":10,"column_end":14},"name":"Item","qualname":"::tuple_impl::TupleCollect::Item","value":"type Item;","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1160},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":185009,"byte_end":185015,"line_start":174,"line_end":174,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::tuple_impl::TupleCollect::Buffer","value":"type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":185094,"byte_end":185111,"line_start":176,"line_end":176,"column_start":8,"column_end":25},"name":"collect_from_iter","qualname":"::tuple_impl::TupleCollect::collect_from_iter","value":"pub fn collect_from_iter<I>(I, &mut Self::Buffer) -> Option<Self> where\nI: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":185222,"byte_end":185246,"line_start":179,"line_end":179,"column_start":8,"column_end":32},"name":"collect_from_iter_no_buf","qualname":"::tuple_impl::TupleCollect::collect_from_iter_no_buf","value":"pub fn collect_from_iter_no_buf<I>(I) -> Option<Self> where\nI: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":185333,"byte_end":185342,"line_start":182,"line_end":182,"column_start":8,"column_end":17},"name":"num_items","qualname":"::tuple_impl::TupleCollect::num_items","value":"pub fn num_items() -> usize","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":185363,"byte_end":185378,"line_start":184,"line_end":184,"column_start":8,"column_end":23},"name":"left_shift_push","qualname":"::tuple_impl::TupleCollect::left_shift_push","value":"pub fn left_shift_push(&mut Self, Self::Item)","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2051},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":188105,"byte_end":188113,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"UniqueBy","qualname":"::unique_impl::UniqueBy","value":"UniqueBy {  }","parent":null,"children":[{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"/ An iterator adapter to filter out duplicate elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":187855,"byte_end":187912,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":187913,"byte_end":187916,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.unique_by()`](../trait.Itertools.html#method.unique) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":187917,"byte_end":188002,"line_start":9,"line_end":9,"column_start":1,"column_end":86}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":188020,"byte_end":188093,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2064},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":191101,"byte_end":191107,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"Unique","qualname":"::unique_impl::Unique","value":"Unique {  }","parent":null,"children":[{"krate":0,"index":2066}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"/ An iterator adapter to filter out duplicate elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":190854,"byte_end":190911,"line_start":118,"line_end":118,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":190912,"byte_end":190915,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ See [`.unique()`](../trait.Itertools.html#method.unique) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":190916,"byte_end":190998,"line_start":120,"line_end":120,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":191016,"byte_end":191089,"line_start":122,"line_end":122,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1209},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":191908,"byte_end":191920,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"WithPosition","qualname":"::with_position::WithPosition","value":"WithPosition {  }","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212}],"decl_id":null,"docs":" An iterator adaptor that wraps each element in an [`Position`](../enum.Position.html).","sig":null,"attributes":[{"value":"/ An iterator adaptor that wraps each element in an [`Position`](../enum.Position.html).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":191577,"byte_end":191667,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":191668,"byte_end":191671,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Position<I::Item>`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":191672,"byte_end":191721,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":191722,"byte_end":191725,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`.with_position()`](../trait.Itertools.html#method.with_position) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":191726,"byte_end":191822,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":191823,"byte_end":191896,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2073},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192537,"byte_end":192542,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"First","qualname":"::with_position::Position::First","value":"Position::First(T)","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":" This is the first element.\n","sig":null,"attributes":[{"value":"/ This is the first element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192502,"byte_end":192532,"line_start":32,"line_end":32,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2076},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192607,"byte_end":192613,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Middle","qualname":"::with_position::Position::Middle","value":"Position::Middle(T)","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":" This is neither the first nor the last element.\n","sig":null,"attributes":[{"value":"/ This is neither the first nor the last element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192551,"byte_end":192602,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2079},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192656,"byte_end":192660,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Last","qualname":"::with_position::Position::Last","value":"Position::Last(T)","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":" This is the last element.\n","sig":null,"attributes":[{"value":"/ This is the last element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192622,"byte_end":192651,"line_start":36,"line_end":36,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2082},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192703,"byte_end":192707,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Only","qualname":"::with_position::Position::Only","value":"Position::Only(T)","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":" This is the only element.\n","sig":null,"attributes":[{"value":"/ This is the only element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192669,"byte_end":192698,"line_start":38,"line_end":38,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":2071},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192484,"byte_end":192492,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"name":"Position","qualname":"::with_position::Position","value":"pub enum Position<T> {\n\n    /// This is the first element.\n    First(T),\n\n    /// This is neither the first nor the last element.\n    Middle(T),\n\n    /// This is the last element.\n    Last(T),\n\n    /// This is the only element.\n    Only(T),\n}","parent":null,"children":[{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2082}],"decl_id":null,"docs":" A value yielded by `WithPosition`.\n Indicates the position of this element in the iterator results.","sig":null,"attributes":[{"value":"/ A value yielded by `WithPosition`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192229,"byte_end":192267,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/ Indicates the position of this element in the iterator results.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192268,"byte_end":192335,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192336,"byte_end":192339,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ See [`.with_position()`](trait.Itertools.html#method.with_position) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192340,"byte_end":192433,"line_start":29,"line_end":29,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192780,"byte_end":192790,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Position<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value.\n","sig":null,"attributes":[{"value":"/ Return the inner value.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192741,"byte_end":192768,"line_start":43,"line_end":43,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2099},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194589,"byte_end":194594,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::zip_eq_impl::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"/ An iterator which iterates two other iterators simultaneously","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194334,"byte_end":194399,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194400,"byte_end":194403,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ See [`.zip_eq()`](../trait.Itertools.html#method.zip_eq) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194404,"byte_end":194486,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194504,"byte_end":194577,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1227},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194969,"byte_end":194975,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::zip_eq_impl::zip_eq","value":"pub fn zip_eq<I, J>(I, J) -> ZipEq<I::IntoIter, J::IntoIter> where\nI: IntoIterator, J: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[{"value":"/ Iterate `i` and `j` in lock step.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194626,"byte_end":194663,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194664,"byte_end":194667,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the iterators are not of the same length.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194668,"byte_end":194727,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194728,"byte_end":194731,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.zip_eq(j)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194732,"byte_end":194784,"line_start":17,"line_end":17,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194785,"byte_end":194788,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194789,"byte_end":194796,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use itertools::zip_eq;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194797,"byte_end":194823,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194824,"byte_end":194827,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let data = [1, 2, 3, 4, 5];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194828,"byte_end":194859,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ for (a, b) in zip_eq(&data[..data.len() - 1], &data[1..]) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194860,"byte_end":194923,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/     /* loop body */","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194924,"byte_end":194947,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194948,"byte_end":194953,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":194954,"byte_end":194961,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2108},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":196393,"byte_end":196403,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"ZipLongest","qualname":"::zip_longest::ZipLongest","value":"ZipLongest {  }","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2112}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"/ An iterator which iterates two other iterators simultaneously","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":196094,"byte_end":196159,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":196160,"byte_end":196163,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":196164,"byte_end":196193,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":196194,"byte_end":196197,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See [`.zip_longest()`](../trait.Itertools.html#method.zip_longest) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":196198,"byte_end":196290,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":196308,"byte_end":196381,"line_start":16,"line_end":16,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2117},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198420,"byte_end":198423,"line_start":6,"line_end":6,"column_start":12,"column_end":15},"name":"Zip","qualname":"::ziptuple::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":2119}],"decl_id":null,"docs":" See [`multizip`](../fn.multizip.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`multizip`](../fn.multizip.html) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198254,"byte_end":198317,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198335,"byte_end":198408,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1265},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199587,"byte_end":199595,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"multizip","qualname":"::ziptuple::multizip","value":"pub fn multizip<T, U>(U) -> Zip<T> where Zip<T>: From<U>, Zip<T>: Iterator","parent":null,"children":[],"decl_id":null,"docs":" An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","sig":null,"attributes":[{"value":"/ An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198442,"byte_end":198534,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198535,"byte_end":198538,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The iterator `Zip<(I, J, ..., M)>` is formed from a tuple of iterators (or values that","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198539,"byte_end":198629,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/ implement `IntoIterator`) and yields elements","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198630,"byte_end":198679,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ until any of the subiterators yields `None`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198680,"byte_end":198728,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198729,"byte_end":198732,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The iterator element type is a tuple like like `(A, B, ..., E)` where `A` to `E` are the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198733,"byte_end":198825,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ element types of the subiterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198826,"byte_end":198863,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198864,"byte_end":198867,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **Note:** The result of this macro is a value of a named type (`Zip<(I, J,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198868,"byte_end":198946,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ ..)>` of each component iterator `I, J, ...`) if each component iterator is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":198947,"byte_end":199026,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ nameable.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199027,"byte_end":199040,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199041,"byte_end":199044,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Prefer [`izip!()`] over `multizip` for the performance benefits of using the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199045,"byte_end":199125,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ standard library `.zip()`. Prefer `multizip` if a nameable type is needed.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199126,"byte_end":199204,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199205,"byte_end":199208,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`izip!()`]: macro.izip.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199209,"byte_end":199241,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199242,"byte_end":199245,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199246,"byte_end":199253,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use itertools::multizip;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199254,"byte_end":199282,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199283,"byte_end":199286,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // iterate over three sequences side-by-side","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199287,"byte_end":199335,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/ let mut results = [0, 0, 0, 0];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199336,"byte_end":199371,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/ let inputs = [3, 7, 9, 6];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199372,"byte_end":199402,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199403,"byte_end":199406,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ for (r, index, input) in multizip((&mut results, 0..10, &inputs)) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199407,"byte_end":199478,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/     *r = index * 10 + input;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199479,"byte_end":199511,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199512,"byte_end":199517,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199518,"byte_end":199521,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(results, [0 + 3, 10 + 7, 29, 36]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199522,"byte_end":199571,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/ziptuple.rs","byte_start":199572,"byte_end":199579,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1271},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7976,"byte_end":7985,"line_start":278,"line_end":278,"column_start":11,"column_end":20},"name":"Itertools","qualname":"::Itertools","value":"Itertools: Iterator","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1299},{"krate":0,"index":1301},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1364},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1380},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1393}],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[{"value":"/ The trait `Itertools`: extra iterator adaptors and methods for iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7373,"byte_end":7450,"line_start":266,"line_end":266,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7451,"byte_end":7454,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ This trait defines a number of methods. They are divided into two groups:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7455,"byte_end":7532,"line_start":268,"line_end":268,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7533,"byte_end":7536,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ * *Adaptors* take an iterator and parameter as input, and return","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7537,"byte_end":7605,"line_start":270,"line_end":270,"column_start":1,"column_end":69}},{"value":"/ a new iterator value. These are listed first in the trait. An example","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7606,"byte_end":7679,"line_start":271,"line_end":271,"column_start":1,"column_end":74}},{"value":"/ of an adaptor is [`.interleave()`](#method.interleave)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7680,"byte_end":7738,"line_start":272,"line_end":272,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7739,"byte_end":7742,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ * *Regular methods* are those that don't return iterators and instead","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7743,"byte_end":7816,"line_start":274,"line_end":274,"column_start":1,"column_end":74}},{"value":"/ return a regular value of some other kind.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7817,"byte_end":7863,"line_start":275,"line_end":275,"column_start":1,"column_end":47}},{"value":"/ [`.next_tuple()`](#method.next_tuple) is an example and the first regular","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7864,"byte_end":7941,"line_start":276,"line_end":276,"column_start":1,"column_end":78}},{"value":"/ method in the list.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7942,"byte_end":7965,"line_start":277,"line_end":277,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8384,"byte_end":8394,"line_start":293,"line_end":293,"column_start":8,"column_end":18},"name":"interleave","qualname":"::Itertools::interleave","value":"pub fn interleave<J>(Self, J) -> Interleave<Self, J::IntoIter> where\nJ: IntoIterator<Item = Self::Item>, Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until both have run out.","sig":null,"attributes":[{"value":"/ Alternate elements from two iterators until both have run out.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8020,"byte_end":8086,"line_start":281,"line_end":281,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8091,"byte_end":8094,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8099,"byte_end":8141,"line_start":283,"line_end":283,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8146,"byte_end":8149,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8154,"byte_end":8183,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8188,"byte_end":8191,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8196,"byte_end":8203,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8208,"byte_end":8237,"line_start":288,"line_end":288,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8242,"byte_end":8245,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let it = (1..7).interleave(vec![-1, -2]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8250,"byte_end":8295,"line_start":290,"line_end":290,"column_start":5,"column_end":50}},{"value":"/ itertools::assert_equal(it, vec![1, -1, 2, -2, 3, 4, 5, 6]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8300,"byte_end":8364,"line_start":291,"line_end":291,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8369,"byte_end":8376,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8917,"byte_end":8936,"line_start":311,"line_end":311,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::Itertools::interleave_shortest","value":"pub fn interleave_shortest<J>(Self, J)\n-> InterleaveShortest<Self, J::IntoIter> where J: IntoIterator<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until at least one of them has run\n out.","sig":null,"attributes":[{"value":"/ Alternate elements from two iterators until at least one of them has run","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8572,"byte_end":8648,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/ out.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8653,"byte_end":8661,"line_start":301,"line_end":301,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8666,"byte_end":8669,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8674,"byte_end":8716,"line_start":303,"line_end":303,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8721,"byte_end":8724,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8729,"byte_end":8736,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8741,"byte_end":8770,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8775,"byte_end":8778,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let it = (1..7).interleave_shortest(vec![-1, -2]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8783,"byte_end":8837,"line_start":308,"line_end":308,"column_start":5,"column_end":59}},{"value":"/ itertools::assert_equal(it, vec![1, -1, 2, -2, 3]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8842,"byte_end":8897,"line_start":309,"line_end":309,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":8902,"byte_end":8909,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9515,"byte_end":9526,"line_start":330,"line_end":330,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::Itertools::intersperse","value":"pub fn intersperse(Self, Self::Item) -> Intersperse<Self> where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor to insert a particular value","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9153,"byte_end":9205,"line_start":318,"line_end":318,"column_start":5,"column_end":57}},{"value":"/ between each element of the adapted iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9210,"byte_end":9259,"line_start":319,"line_end":319,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9264,"byte_end":9267,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9272,"byte_end":9314,"line_start":321,"line_end":321,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9319,"byte_end":9322,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9327,"byte_end":9356,"line_start":323,"line_end":323,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9361,"byte_end":9364,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9369,"byte_end":9376,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9381,"byte_end":9410,"line_start":326,"line_end":326,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9415,"byte_end":9418,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal((0..3).intersperse(8), vec![0, 8, 1, 8, 2]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9423,"byte_end":9495,"line_start":328,"line_end":328,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9500,"byte_end":9507,"line_start":329,"line_end":329,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10769,"byte_end":10780,"line_start":364,"line_end":364,"column_start":8,"column_end":19},"name":"zip_longest","qualname":"::Itertools::zip_longest","value":"pub fn zip_longest<J>(Self, J) -> ZipLongest<Self, J::IntoIter> where\nJ: IntoIterator, Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of two optional elements.","sig":null,"attributes":[{"value":"/ Create an iterator which iterates over both this and the specified","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9699,"byte_end":9769,"line_start":337,"line_end":337,"column_start":5,"column_end":75}},{"value":"/ iterator simultaneously, yielding pairs of two optional elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9774,"byte_end":9843,"line_start":338,"line_end":338,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9848,"byte_end":9851,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9856,"byte_end":9885,"line_start":340,"line_end":340,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9890,"byte_end":9893,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ As long as neither input iterator is exhausted yet, it yields two values","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9898,"byte_end":9974,"line_start":342,"line_end":342,"column_start":5,"column_end":81}},{"value":"/ via `EitherOrBoth::Both`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":9979,"byte_end":10008,"line_start":343,"line_end":343,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10013,"byte_end":10016,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ When the parameter iterator is exhausted, it only yields a value from the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10021,"byte_end":10098,"line_start":345,"line_end":345,"column_start":5,"column_end":82}},{"value":"/ `self` iterator via `EitherOrBoth::Left`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10103,"byte_end":10148,"line_start":346,"line_end":346,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10153,"byte_end":10156,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ When the `self` iterator is exhausted, it only yields a value from the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10161,"byte_end":10235,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ parameter iterator via `EitherOrBoth::Right`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10240,"byte_end":10289,"line_start":349,"line_end":349,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10294,"byte_end":10297,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ When both iterators return `None`, all further invocations of `.next()`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10302,"byte_end":10377,"line_start":351,"line_end":351,"column_start":5,"column_end":80}},{"value":"/ will return `None`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10382,"byte_end":10405,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10410,"byte_end":10413,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10418,"byte_end":10446,"line_start":354,"line_end":354,"column_start":5,"column_end":33}},{"value":"/ [`EitherOrBoth<Self::Item, J::Item>`](enum.EitherOrBoth.html).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10451,"byte_end":10517,"line_start":355,"line_end":355,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10522,"byte_end":10525,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10530,"byte_end":10541,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/ use itertools::EitherOrBoth::{Both, Right};","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10546,"byte_end":10593,"line_start":358,"line_end":358,"column_start":5,"column_end":52}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10598,"byte_end":10627,"line_start":359,"line_end":359,"column_start":5,"column_end":34}},{"value":"/ let it = (0..1).zip_longest(1..3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10632,"byte_end":10670,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/ itertools::assert_equal(it, vec![Both(0, 1), Right(2)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10675,"byte_end":10735,"line_start":361,"line_end":361,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10740,"byte_end":10747,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10752,"byte_end":10761,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11218,"byte_end":11224,"line_start":377,"line_end":377,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::Itertools::zip_eq","value":"pub fn zip_eq<J>(Self, J) -> ZipEq<Self, J::IntoIter> where J: IntoIterator,\nSelf: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of elements.","sig":null,"attributes":[{"value":"/ Create an iterator which iterates over both this and the specified","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":10965,"byte_end":11035,"line_start":371,"line_end":371,"column_start":5,"column_end":75}},{"value":"/ iterator simultaneously, yielding pairs of elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11040,"byte_end":11096,"line_start":372,"line_end":372,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11101,"byte_end":11104,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the iterators reach an end and they are not of equal","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11109,"byte_end":11179,"line_start":374,"line_end":374,"column_start":5,"column_end":75}},{"value":"/ lengths.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11184,"byte_end":11196,"line_start":375,"line_end":375,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11201,"byte_end":11210,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12139,"byte_end":12147,"line_start":407,"line_end":407,"column_start":8,"column_end":16},"name":"batching","qualname":"::Itertools::batching","value":"pub fn batching<B, F>(Self, F) -> Batching<Self, F> where F: FnMut(&mut Self)\n-> Option<B>, Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure recives a reference to the\n iterator and may pick off as many elements as it likes, to produce the\n next iterator element.","sig":null,"attributes":[{"value":"/ A “meta iterator adaptor”. Its closure recives a reference to the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11374,"byte_end":11447,"line_start":384,"line_end":384,"column_start":5,"column_end":74}},{"value":"/ iterator and may pick off as many elements as it likes, to produce the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11452,"byte_end":11526,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ next iterator element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11531,"byte_end":11557,"line_start":386,"line_end":386,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11562,"byte_end":11565,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `B`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11570,"byte_end":11603,"line_start":388,"line_end":388,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11608,"byte_end":11611,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11616,"byte_end":11623,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11628,"byte_end":11657,"line_start":391,"line_end":391,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11662,"byte_end":11665,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ // An adaptor that gathers elements in pairs","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11670,"byte_end":11718,"line_start":393,"line_end":393,"column_start":5,"column_end":53}},{"value":"/ let pit = (0..4).batching(|it| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11723,"byte_end":11759,"line_start":394,"line_end":394,"column_start":5,"column_end":41}},{"value":"/            match it.next() {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11764,"byte_end":11796,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/                None => None,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11801,"byte_end":11833,"line_start":396,"line_end":396,"column_start":5,"column_end":37}},{"value":"/                Some(x) => match it.next() {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11838,"byte_end":11885,"line_start":397,"line_end":397,"column_start":5,"column_end":52}},{"value":"/                    None => None,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11890,"byte_end":11926,"line_start":398,"line_end":398,"column_start":5,"column_end":41}},{"value":"/                    Some(y) => Some((x, y)),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11931,"byte_end":11978,"line_start":399,"line_end":399,"column_start":5,"column_end":52}},{"value":"/                }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":11983,"byte_end":12003,"line_start":400,"line_end":400,"column_start":5,"column_end":25}},{"value":"/            }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12008,"byte_end":12024,"line_start":401,"line_end":401,"column_start":5,"column_end":21}},{"value":"/        });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12029,"byte_end":12043,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12048,"byte_end":12051,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(pit, vec![(0, 1), (2, 3)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12056,"byte_end":12111,"line_start":404,"line_end":404,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12116,"byte_end":12123,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12128,"byte_end":12131,"line_start":406,"line_end":406,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13778,"byte_end":13786,"line_start":448,"line_end":448,"column_start":8,"column_end":16},"name":"group_by","qualname":"::Itertools::group_by","value":"pub fn group_by<K, F>(Self, F) -> GroupBy<K, Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> K, K: PartialEq","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an *iterable* that can group iterator elements.\n Consecutive elements that map to the same key (“runs”), are assigned\n to the same group.","sig":null,"attributes":[{"value":"/ Return an *iterable* that can group iterator elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12314,"byte_end":12372,"line_start":414,"line_end":414,"column_start":5,"column_end":63}},{"value":"/ Consecutive elements that map to the same key (“runs”), are assigned","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12377,"byte_end":12453,"line_start":415,"line_end":415,"column_start":5,"column_end":77}},{"value":"/ to the same group.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12458,"byte_end":12480,"line_start":416,"line_end":416,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12485,"byte_end":12488,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ `GroupBy` is the storage for the lazy grouping operation.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12493,"byte_end":12554,"line_start":418,"line_end":418,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12559,"byte_end":12562,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ If the groups are consumed in order, or if each group's iterator is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12567,"byte_end":12638,"line_start":420,"line_end":420,"column_start":5,"column_end":76}},{"value":"/ dropped without keeping it around, then `GroupBy` uses no","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12643,"byte_end":12704,"line_start":421,"line_end":421,"column_start":5,"column_end":66}},{"value":"/ allocations.  It needs allocations only if several group iterators","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12709,"byte_end":12779,"line_start":422,"line_end":422,"column_start":5,"column_end":75}},{"value":"/ are alive at the same time.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12784,"byte_end":12815,"line_start":423,"line_end":423,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12820,"byte_end":12823,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12828,"byte_end":12894,"line_start":425,"line_end":425,"column_start":5,"column_end":71}},{"value":"/ itself), because the group iterators need to borrow from this","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12899,"byte_end":12964,"line_start":426,"line_end":426,"column_start":5,"column_end":70}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":12969,"byte_end":13036,"line_start":427,"line_end":427,"column_start":5,"column_end":72}},{"value":"/ iterated.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13041,"byte_end":13054,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13059,"byte_end":13062,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(K, Group)`: the group's key and the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13067,"byte_end":13133,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ group iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13138,"byte_end":13157,"line_start":431,"line_end":431,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13162,"byte_end":13165,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13170,"byte_end":13177,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13182,"byte_end":13211,"line_start":434,"line_end":434,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13216,"byte_end":13219,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ // group data into runs of larger than zero or not.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13224,"byte_end":13279,"line_start":436,"line_end":436,"column_start":5,"column_end":60}},{"value":"/ let data = vec![1, 3, -2, -2, 1, 0, 1, 2];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13284,"byte_end":13330,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/ // groups:     |---->|------>|--------->|","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13335,"byte_end":13380,"line_start":438,"line_end":438,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13385,"byte_end":13388,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ // Note: The `&` is significant here, `GroupBy` is iterable","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13393,"byte_end":13456,"line_start":440,"line_end":440,"column_start":5,"column_end":68}},{"value":"/ // only by reference. You can also call `.into_iter()` explicitly.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13461,"byte_end":13531,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/ for (key, group) in &data.into_iter().group_by(|elt| *elt >= 0) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13536,"byte_end":13605,"line_start":442,"line_end":442,"column_start":5,"column_end":74}},{"value":"/     // Check that the sum of each group is +/- 4.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13610,"byte_end":13663,"line_start":443,"line_end":443,"column_start":5,"column_end":58}},{"value":"/     assert_eq!(4, group.sum::<i32>().abs());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13668,"byte_end":13716,"line_start":444,"line_end":444,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13721,"byte_end":13726,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13731,"byte_end":13738,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13743,"byte_end":13770,"line_start":447,"line_end":447,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15065,"byte_end":15071,"line_start":484,"line_end":484,"column_start":8,"column_end":14},"name":"chunks","qualname":"::Itertools::chunks","value":"pub fn chunks(Self, usize) -> IntoChunks<Self> where Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an *iterable* that can chunk the iterator.","sig":null,"attributes":[{"value":"/ Return an *iterable* that can chunk the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":13980,"byte_end":14033,"line_start":456,"line_end":456,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14038,"byte_end":14041,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Yield subiterators (chunks) that each yield a fixed number elements,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14046,"byte_end":14118,"line_start":458,"line_end":458,"column_start":5,"column_end":77}},{"value":"/ determined by `size`. The last chunk will be shorter if there aren't","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14123,"byte_end":14195,"line_start":459,"line_end":459,"column_start":5,"column_end":77}},{"value":"/ enough elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14200,"byte_end":14220,"line_start":460,"line_end":460,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14225,"byte_end":14228,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ `IntoChunks` is based on `GroupBy`: it is iterable (implements","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14233,"byte_end":14299,"line_start":462,"line_end":462,"column_start":5,"column_end":71}},{"value":"/ `IntoIterator`, **not** `Iterator`), and it only buffers if several","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14304,"byte_end":14375,"line_start":463,"line_end":463,"column_start":5,"column_end":76}},{"value":"/ chunk iterators are alive at the same time.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14380,"byte_end":14427,"line_start":464,"line_end":464,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14432,"byte_end":14435,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Chunk`, each chunk's iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14440,"byte_end":14500,"line_start":466,"line_end":466,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14505,"byte_end":14508,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `size` is 0.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14513,"byte_end":14543,"line_start":468,"line_end":468,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14548,"byte_end":14551,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14556,"byte_end":14563,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14568,"byte_end":14597,"line_start":471,"line_end":471,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14602,"byte_end":14605,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 1, 2, -2, 6, 0, 3, 1];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14610,"byte_end":14655,"line_start":473,"line_end":473,"column_start":5,"column_end":50}},{"value":"/ //chunk size=3 |------->|-------->|--->|","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14660,"byte_end":14704,"line_start":474,"line_end":474,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14709,"byte_end":14712,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ // Note: The `&` is significant here, `IntoChunks` is iterable","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14717,"byte_end":14783,"line_start":476,"line_end":476,"column_start":5,"column_end":71}},{"value":"/ // only by reference. You can also call `.into_iter()` explicitly.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14788,"byte_end":14858,"line_start":477,"line_end":477,"column_start":5,"column_end":75}},{"value":"/ for chunk in &data.into_iter().chunks(3) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14863,"byte_end":14909,"line_start":478,"line_end":478,"column_start":5,"column_end":51}},{"value":"/     // Check that the sum of each chunk is 4.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14914,"byte_end":14963,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(4, chunk.sum());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":14968,"byte_end":15003,"line_start":480,"line_end":480,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15008,"byte_end":15013,"line_start":481,"line_end":481,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15018,"byte_end":15025,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15030,"byte_end":15057,"line_start":483,"line_end":483,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16427,"byte_end":16440,"line_start":522,"line_end":522,"column_start":8,"column_end":21},"name":"tuple_windows","qualname":"::Itertools::tuple_windows","value":"pub fn tuple_windows<T>(Self) -> TupleWindows<Self, T> where Self: Sized +\nIterator<Item = T::Item>, T: tuple_impl::TupleCollect, T::Item: Clone","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator over all contiguous windows producing tuples of\n a specific size (up to 4).","sig":null,"attributes":[{"value":"/ Return an iterator over all contiguous windows producing tuples of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15227,"byte_end":15297,"line_start":491,"line_end":491,"column_start":5,"column_end":75}},{"value":"/ a specific size (up to 4).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15302,"byte_end":15332,"line_start":492,"line_end":492,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15337,"byte_end":15340,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ `tuple_windows` clones the iterator elements so that they can be","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15345,"byte_end":15413,"line_start":494,"line_end":494,"column_start":5,"column_end":73}},{"value":"/ part of successive windows, this makes it most suited for iterators","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15418,"byte_end":15489,"line_start":495,"line_end":495,"column_start":5,"column_end":76}},{"value":"/ of references and other values that are cheap to copy.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15494,"byte_end":15552,"line_start":496,"line_end":496,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15557,"byte_end":15560,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15565,"byte_end":15572,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15577,"byte_end":15606,"line_start":499,"line_end":499,"column_start":5,"column_end":34}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15611,"byte_end":15638,"line_start":500,"line_end":500,"column_start":5,"column_end":32}},{"value":"/ for (a, b) in (1..5).tuple_windows() {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15643,"byte_end":15685,"line_start":501,"line_end":501,"column_start":5,"column_end":47}},{"value":"/     v.push((a, b));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15690,"byte_end":15713,"line_start":502,"line_end":502,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15718,"byte_end":15723,"line_start":503,"line_end":503,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (2, 3), (3, 4)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15728,"byte_end":15776,"line_start":504,"line_end":504,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15781,"byte_end":15784,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..5).tuple_windows();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15789,"byte_end":15829,"line_start":506,"line_end":506,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15834,"byte_end":15877,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((2, 3, 4)), it.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15882,"byte_end":15925,"line_start":508,"line_end":508,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15930,"byte_end":15962,"line_start":509,"line_end":509,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15967,"byte_end":15970,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":15975,"byte_end":16007,"line_start":511,"line_end":511,"column_start":5,"column_end":37}},{"value":"/ let it = (1..5).tuple_windows::<(_, _, _)>();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16012,"byte_end":16061,"line_start":512,"line_end":512,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (2, 3, 4)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16066,"byte_end":16126,"line_start":513,"line_end":513,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16131,"byte_end":16134,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ // you can also specify the complete type","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16139,"byte_end":16184,"line_start":515,"line_end":515,"column_start":5,"column_end":50}},{"value":"/ use itertools::TupleWindows;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16189,"byte_end":16221,"line_start":516,"line_end":516,"column_start":5,"column_end":37}},{"value":"/ use std::ops::Range;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16226,"byte_end":16250,"line_start":517,"line_end":517,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16255,"byte_end":16258,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let it: TupleWindows<Range<u32>, (u32, u32, u32)> = (1..5).tuple_windows();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16263,"byte_end":16342,"line_start":519,"line_end":519,"column_start":5,"column_end":84}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (2, 3, 4)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16347,"byte_end":16407,"line_start":520,"line_end":520,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16412,"byte_end":16419,"line_start":521,"line_end":521,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17749,"byte_end":17755,"line_start":561,"line_end":561,"column_start":8,"column_end":14},"name":"tuples","qualname":"::Itertools::tuples","value":"pub fn tuples<T>(Self) -> Tuples<Self, T> where Self: Sized + Iterator<Item =\nT::Item>, T: tuple_impl::TupleCollect","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator that groups the items in tuples of a specific size\n (up to 4).","sig":null,"attributes":[{"value":"/ Return an iterator that groups the items in tuples of a specific size","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16658,"byte_end":16731,"line_start":530,"line_end":530,"column_start":5,"column_end":78}},{"value":"/ (up to 4).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16736,"byte_end":16750,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16755,"byte_end":16758,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ See also the method [`.next_tuple()`](#method.next_tuple).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16763,"byte_end":16825,"line_start":533,"line_end":533,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16830,"byte_end":16833,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16838,"byte_end":16845,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16850,"byte_end":16879,"line_start":536,"line_end":536,"column_start":5,"column_end":34}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16884,"byte_end":16911,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/ for (a, b) in (1..5).tuples() {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16916,"byte_end":16951,"line_start":538,"line_end":538,"column_start":5,"column_end":40}},{"value":"/     v.push((a, b));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16956,"byte_end":16979,"line_start":539,"line_end":539,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16984,"byte_end":16989,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (3, 4)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":16994,"byte_end":17034,"line_start":541,"line_end":541,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17039,"byte_end":17042,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..7).tuples();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17047,"byte_end":17080,"line_start":543,"line_end":543,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17085,"byte_end":17128,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((4, 5, 6)), it.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17133,"byte_end":17176,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17181,"byte_end":17213,"line_start":546,"line_end":546,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17218,"byte_end":17221,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17226,"byte_end":17258,"line_start":548,"line_end":548,"column_start":5,"column_end":37}},{"value":"/ let it = (1..7).tuples::<(_, _, _)>();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17263,"byte_end":17305,"line_start":549,"line_end":549,"column_start":5,"column_end":47}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (4, 5, 6)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17310,"byte_end":17370,"line_start":550,"line_end":550,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17375,"byte_end":17378,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ // you can also specify the complete type","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17383,"byte_end":17428,"line_start":552,"line_end":552,"column_start":5,"column_end":50}},{"value":"/ use itertools::Tuples;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17433,"byte_end":17459,"line_start":553,"line_end":553,"column_start":5,"column_end":31}},{"value":"/ use std::ops::Range;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17464,"byte_end":17488,"line_start":554,"line_end":554,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17493,"byte_end":17496,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ let it: Tuples<Range<u32>, (u32, u32, u32)> = (1..7).tuples();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17501,"byte_end":17567,"line_start":556,"line_end":556,"column_start":5,"column_end":71}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (4, 5, 6)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17572,"byte_end":17632,"line_start":557,"line_end":557,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17637,"byte_end":17644,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17649,"byte_end":17652,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ See also [`Tuples::into_buffer`](structs/struct.Tuples.html#method.into_buffer).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17657,"byte_end":17741,"line_start":560,"line_end":560,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18564,"byte_end":18567,"line_start":586,"line_end":586,"column_start":8,"column_end":11},"name":"tee","qualname":"::Itertools::tee","value":"pub fn tee(Self) -> (Tee<Self>, Tee<Self>) where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Split into an iterator pair that both yield all elements from\n the original iterator.","sig":null,"attributes":[{"value":"/ Split into an iterator pair that both yield all elements from","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":17930,"byte_end":17995,"line_start":568,"line_end":568,"column_start":5,"column_end":70}},{"value":"/ the original iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18000,"byte_end":18026,"line_start":569,"line_end":569,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18031,"byte_end":18034,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ **Note:** If the iterator is clonable, prefer using that instead","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18039,"byte_end":18107,"line_start":571,"line_end":571,"column_start":5,"column_end":73}},{"value":"/ of using this method. It is likely to be more efficient.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18112,"byte_end":18172,"line_start":572,"line_end":572,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18177,"byte_end":18180,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18185,"byte_end":18227,"line_start":574,"line_end":574,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18232,"byte_end":18235,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18240,"byte_end":18247,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18252,"byte_end":18281,"line_start":577,"line_end":577,"column_start":5,"column_end":34}},{"value":"/ let xs = vec![0, 1, 2, 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18286,"byte_end":18316,"line_start":578,"line_end":578,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18321,"byte_end":18324,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let (mut t1, t2) = xs.into_iter().tee();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18329,"byte_end":18373,"line_start":580,"line_end":580,"column_start":5,"column_end":49}},{"value":"/ itertools::assert_equal(t1.next(), Some(0));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18378,"byte_end":18426,"line_start":581,"line_end":581,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(t2, 0..4);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18431,"byte_end":18469,"line_start":582,"line_end":582,"column_start":5,"column_end":43}},{"value":"/ itertools::assert_equal(t1, 1..4);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18474,"byte_end":18512,"line_start":583,"line_end":583,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18517,"byte_end":18524,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18529,"byte_end":18556,"line_start":585,"line_end":585,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19205,"byte_end":19209,"line_start":609,"line_end":609,"column_start":8,"column_end":12},"name":"step","qualname":"::Itertools::step","value":"pub fn step(Self, usize) -> Step<Self> where Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that steps `n` elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that steps `n` elements in the base iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18699,"byte_end":18774,"line_start":593,"line_end":593,"column_start":5,"column_end":80}},{"value":"/ for each iteration.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18779,"byte_end":18802,"line_start":594,"line_end":594,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18807,"byte_end":18810,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ The iterator steps by yielding the next element from the base iterator,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18815,"byte_end":18890,"line_start":596,"line_end":596,"column_start":5,"column_end":80}},{"value":"/ then skipping forward `n - 1` elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18895,"byte_end":18938,"line_start":597,"line_end":597,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18943,"byte_end":18946,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18951,"byte_end":18993,"line_start":599,"line_end":599,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":18998,"byte_end":19001,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the step is 0.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19006,"byte_end":19038,"line_start":601,"line_end":601,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19043,"byte_end":19046,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19051,"byte_end":19058,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19063,"byte_end":19092,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19097,"byte_end":19100,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let it = (0..8).step(3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19105,"byte_end":19133,"line_start":606,"line_end":606,"column_start":5,"column_end":33}},{"value":"/ itertools::assert_equal(it, vec![0, 3, 6]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19138,"byte_end":19185,"line_start":607,"line_end":607,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19190,"byte_end":19197,"line_start":608,"line_end":608,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19726,"byte_end":19737,"line_start":626,"line_end":626,"column_start":8,"column_end":19},"name":"map_results","qualname":"::Itertools::map_results","value":"pub fn map_results<F, T, U, E>(Self, F) -> MapResults<Self, F> where\nSelf: Iterator<Item = Result<T, E>> + Sized, F: FnMut(T) -> U","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies the provided closure\n to every `Result::Ok` value. `Result::Err` values are\n unchanged.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that applies the provided closure","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19315,"byte_end":19379,"line_start":615,"line_end":615,"column_start":5,"column_end":69}},{"value":"/ to every `Result::Ok` value. `Result::Err` values are","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19384,"byte_end":19441,"line_start":616,"line_end":616,"column_start":5,"column_end":62}},{"value":"/ unchanged.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19446,"byte_end":19460,"line_start":617,"line_end":617,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19465,"byte_end":19468,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19473,"byte_end":19480,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19485,"byte_end":19514,"line_start":620,"line_end":620,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19519,"byte_end":19522,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ let input = vec![Ok(41), Err(false), Ok(11)];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19527,"byte_end":19576,"line_start":622,"line_end":622,"column_start":5,"column_end":54}},{"value":"/ let it = input.into_iter().map_results(|i| i + 1);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19581,"byte_end":19635,"line_start":623,"line_end":623,"column_start":5,"column_end":59}},{"value":"/ itertools::assert_equal(it, vec![Ok(42), Err(false), Ok(12)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19640,"byte_end":19706,"line_start":624,"line_end":624,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19711,"byte_end":19718,"line_start":625,"line_end":625,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20400,"byte_end":20405,"line_start":647,"line_end":647,"column_start":8,"column_end":13},"name":"merge","qualname":"::Itertools::merge","value":"pub fn merge<J>(Self, J) -> Merge<Self, J::IntoIter> where Self: Sized,\nSelf::Item: PartialOrd, J: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in\n ascending order.  If both base iterators are sorted (ascending), the\n result is sorted.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merges the two base iterators in","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":19932,"byte_end":20000,"line_start":633,"line_end":633,"column_start":5,"column_end":73}},{"value":"/ ascending order.  If both base iterators are sorted (ascending), the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20005,"byte_end":20077,"line_start":634,"line_end":634,"column_start":5,"column_end":77}},{"value":"/ result is sorted.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20082,"byte_end":20103,"line_start":635,"line_end":635,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20108,"byte_end":20111,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20116,"byte_end":20158,"line_start":637,"line_end":637,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20163,"byte_end":20166,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20171,"byte_end":20178,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20183,"byte_end":20212,"line_start":640,"line_end":640,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20217,"byte_end":20220,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ let a = (0..11).step(3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20225,"byte_end":20253,"line_start":642,"line_end":642,"column_start":5,"column_end":33}},{"value":"/ let b = (0..11).step(5);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20258,"byte_end":20286,"line_start":643,"line_end":643,"column_start":5,"column_end":33}},{"value":"/ let it = a.merge(b);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20291,"byte_end":20315,"line_start":644,"line_end":644,"column_start":5,"column_end":29}},{"value":"/ itertools::assert_equal(it, vec![0, 0, 3, 5, 6, 9, 10]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20320,"byte_end":20380,"line_start":645,"line_end":645,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20385,"byte_end":20392,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21182,"byte_end":21190,"line_start":671,"line_end":671,"column_start":8,"column_end":16},"name":"merge_by","qualname":"::Itertools::merge_by","value":"pub fn merge_by<J, F>(Self, J, F) -> MergeBy<Self, J::IntoIter, F> where\nSelf: Sized, J: IntoIterator<Item = Self::Item>,\nF: FnMut(&Self::Item, &Self::Item) -> bool","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in order.\n This is much like `.merge()` but allows for a custom ordering.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merges the two base iterators in order.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20611,"byte_end":20686,"line_start":655,"line_end":655,"column_start":5,"column_end":80}},{"value":"/ This is much like `.merge()` but allows for a custom ordering.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20691,"byte_end":20757,"line_start":656,"line_end":656,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20762,"byte_end":20765,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ This can be especially useful for sequences of tuples.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20770,"byte_end":20828,"line_start":658,"line_end":658,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20833,"byte_end":20836,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20841,"byte_end":20883,"line_start":660,"line_end":660,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20888,"byte_end":20891,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20896,"byte_end":20903,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20908,"byte_end":20937,"line_start":663,"line_end":663,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20942,"byte_end":20945,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ let a = (0..).zip(\"bc\".chars());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20950,"byte_end":20986,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/ let b = (0..).zip(\"ad\".chars());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":20991,"byte_end":21027,"line_start":666,"line_end":666,"column_start":5,"column_end":41}},{"value":"/ let it = a.merge_by(b, |x, y| x.1 <= y.1);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21032,"byte_end":21078,"line_start":667,"line_end":667,"column_start":5,"column_end":51}},{"value":"/ itertools::assert_equal(it, vec![(0, 'a'), (0, 'b'), (1, 'c'), (1, 'd')]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21083,"byte_end":21161,"line_start":668,"line_end":668,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21166,"byte_end":21173,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22780,"byte_end":22793,"line_start":711,"line_end":711,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::Itertools::merge_join_by","value":"pub fn merge_join_by<J, F>(Self, J, F) -> MergeJoinBy<Self, J::IntoIter, F>\nwhere J: IntoIterator, F: FnMut(&Self::Item, &J::Item) -> std::cmp::Ordering,\nSelf: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Create an iterator that merges items from both this and the specified\n iterator in ascending order.","sig":null,"attributes":[{"value":"/ Create an iterator that merges items from both this and the specified","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21476,"byte_end":21549,"line_start":679,"line_end":679,"column_start":5,"column_end":78}},{"value":"/ iterator in ascending order.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21554,"byte_end":21586,"line_start":680,"line_end":680,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21591,"byte_end":21594,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ It chooses whether to pair elements based on the `Ordering` returned by the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21599,"byte_end":21678,"line_start":682,"line_end":682,"column_start":5,"column_end":84}},{"value":"/ specified compare function. At any point, inspecting the tip of the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21683,"byte_end":21754,"line_start":683,"line_end":683,"column_start":5,"column_end":76}},{"value":"/ iterators `I` and `J` as items `i` of type `I::Item` and `j` of type","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21759,"byte_end":21831,"line_start":684,"line_end":684,"column_start":5,"column_end":77}},{"value":"/ `J::Item` respectively, the resulting iterator will:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21836,"byte_end":21892,"line_start":685,"line_end":685,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21897,"byte_end":21900,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ - Emit `EitherOrBoth::Left(i)` when `i < j`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21905,"byte_end":21953,"line_start":687,"line_end":687,"column_start":5,"column_end":53}},{"value":"/   and remove `i` from its source iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":21958,"byte_end":22003,"line_start":688,"line_end":688,"column_start":5,"column_end":50}},{"value":"/ - Emit `EitherOrBoth::Right(j)` when `i > j`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22008,"byte_end":22057,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/   and remove `j` from its source iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22062,"byte_end":22107,"line_start":690,"line_end":690,"column_start":5,"column_end":50}},{"value":"/ - Emit `EitherOrBoth::Both(i, j)` when  `i == j`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22112,"byte_end":22165,"line_start":691,"line_end":691,"column_start":5,"column_end":58}},{"value":"/   and remove both `i` and `j` from their respective source iterators","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22170,"byte_end":22242,"line_start":692,"line_end":692,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22247,"byte_end":22250,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22255,"byte_end":22262,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22267,"byte_end":22296,"line_start":695,"line_end":695,"column_start":5,"column_end":34}},{"value":"/ use itertools::EitherOrBoth::{Left, Right, Both};","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22301,"byte_end":22354,"line_start":696,"line_end":696,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22359,"byte_end":22362,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ let ki = (0..10).step(3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22367,"byte_end":22396,"line_start":698,"line_end":698,"column_start":5,"column_end":34}},{"value":"/ let ku = (0..10).step(5);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22401,"byte_end":22430,"line_start":699,"line_end":699,"column_start":5,"column_end":34}},{"value":"/ let ki_ku = ki.merge_join_by(ku, |i, j| i.cmp(j)).map(|either| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22435,"byte_end":22503,"line_start":700,"line_end":700,"column_start":5,"column_end":73}},{"value":"/     match either {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22508,"byte_end":22530,"line_start":701,"line_end":701,"column_start":5,"column_end":27}},{"value":"/         Left(_) => \"Ki\",","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22535,"byte_end":22563,"line_start":702,"line_end":702,"column_start":5,"column_end":33}},{"value":"/         Right(_) => \"Ku\",","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22568,"byte_end":22597,"line_start":703,"line_end":703,"column_start":5,"column_end":34}},{"value":"/         Both(_, _) => \"KiKu\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22602,"byte_end":22634,"line_start":704,"line_end":704,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22639,"byte_end":22648,"line_start":705,"line_end":705,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22653,"byte_end":22660,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22665,"byte_end":22668,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(ki_ku, vec![\"KiKu\", \"Ki\", \"Ku\", \"Ki\", \"Ki\"]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22673,"byte_end":22746,"line_start":708,"line_end":708,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22751,"byte_end":22758,"line_start":709,"line_end":709,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":22763,"byte_end":22772,"line_start":710,"line_end":710,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23627,"byte_end":23633,"line_start":737,"line_end":737,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::Itertools::kmerge","value":"pub fn kmerge(Self) -> KMerge<<Self::Item as IntoIterator>::IntoIter> where\nSelf: Sized, Self::Item: IntoIterator,\n<Self::Item as IntoIterator>::Item: PartialOrd","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them in ascending order.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that flattens an iterator of iterators by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23051,"byte_end":23123,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ merging them in ascending order.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23128,"byte_end":23164,"line_start":721,"line_end":721,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23169,"byte_end":23172,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ If all base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23177,"byte_end":23248,"line_start":723,"line_end":723,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23253,"byte_end":23256,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23261,"byte_end":23303,"line_start":725,"line_end":725,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23308,"byte_end":23311,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23316,"byte_end":23323,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23328,"byte_end":23357,"line_start":728,"line_end":728,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23362,"byte_end":23365,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ let a = (0..6).step(3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23370,"byte_end":23397,"line_start":730,"line_end":730,"column_start":5,"column_end":32}},{"value":"/ let b = (1..6).step(3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23402,"byte_end":23429,"line_start":731,"line_end":731,"column_start":5,"column_end":32}},{"value":"/ let c = (2..6).step(3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23434,"byte_end":23461,"line_start":732,"line_end":732,"column_start":5,"column_end":32}},{"value":"/ let it = vec![a, b, c].into_iter().kmerge();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23466,"byte_end":23514,"line_start":733,"line_end":733,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 5]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23519,"byte_end":23575,"line_start":734,"line_end":734,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23580,"byte_end":23587,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23592,"byte_end":23619,"line_start":736,"line_end":736,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24638,"byte_end":24647,"line_start":766,"line_end":766,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::Itertools::kmerge_by","value":"pub fn kmerge_by<F>(Self, F)\n-> KMergeBy<<Self::Item as IntoIterator>::IntoIter, F> where Self: Sized,\nSelf::Item: IntoIterator,\nF: FnMut(&<Self::Item as IntoIterator>::Item,\n         &<Self::Item as IntoIterator>::Item) -> bool","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them according to the given closure.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that flattens an iterator of iterators by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23857,"byte_end":23929,"line_start":745,"line_end":745,"column_start":5,"column_end":77}},{"value":"/ merging them according to the given closure.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23934,"byte_end":23982,"line_start":746,"line_end":746,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23987,"byte_end":23990,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ The closure `first` is called with two elements *a*, *b* and should","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":23995,"byte_end":24066,"line_start":748,"line_end":748,"column_start":5,"column_end":76}},{"value":"/ return `true` if *a* is ordered before *b*.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24071,"byte_end":24118,"line_start":749,"line_end":749,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24123,"byte_end":24126,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ If all base iterators are sorted according to `first`, the result is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24131,"byte_end":24203,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ sorted.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24208,"byte_end":24219,"line_start":752,"line_end":752,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24224,"byte_end":24227,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24232,"byte_end":24274,"line_start":754,"line_end":754,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24279,"byte_end":24282,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24287,"byte_end":24294,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24299,"byte_end":24328,"line_start":757,"line_end":757,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24333,"byte_end":24336,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ let a = vec![-1f64, 2., 3., -5., 6., -7.];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24341,"byte_end":24387,"line_start":759,"line_end":759,"column_start":5,"column_end":51}},{"value":"/ let b = vec![0., 2., -4.];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24392,"byte_end":24422,"line_start":760,"line_end":760,"column_start":5,"column_end":35}},{"value":"/ let mut it = vec![a, b].into_iter().kmerge_by(|a, b| a.abs() < b.abs());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24427,"byte_end":24503,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(it.next(), Some(0.));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24508,"byte_end":24544,"line_start":762,"line_end":762,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(it.last(), Some(-7.));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24549,"byte_end":24586,"line_start":763,"line_end":763,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24591,"byte_end":24598,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24603,"byte_end":24630,"line_start":765,"line_end":765,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25399,"byte_end":25416,"line_start":787,"line_end":787,"column_start":8,"column_end":25},"name":"cartesian_product","qualname":"::Itertools::cartesian_product","value":"pub fn cartesian_product<J>(Self, J) -> Product<Self, J::IntoIter> where\nSelf: Sized, Self::Item: Clone, J: IntoIterator, J::IntoIter: Clone","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `self` and `J`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":24973,"byte_end":25047,"line_start":776,"line_end":776,"column_start":5,"column_end":79}},{"value":"/ the element sets of two iterators `self` and `J`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25052,"byte_end":25105,"line_start":777,"line_end":777,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25110,"byte_end":25113,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(Self::Item, J::Item)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25118,"byte_end":25171,"line_start":779,"line_end":779,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25176,"byte_end":25179,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25184,"byte_end":25191,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25196,"byte_end":25225,"line_start":782,"line_end":782,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25230,"byte_end":25233,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ let it = (0..2).cartesian_product(\"αβ\".chars());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25238,"byte_end":25292,"line_start":784,"line_end":784,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(it, vec![(0, 'α'), (0, 'β'), (1, 'α'), (1, 'β')]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25297,"byte_end":25379,"line_start":785,"line_end":785,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25384,"byte_end":25391,"line_start":786,"line_end":786,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26871,"byte_end":26894,"line_start":822,"line_end":822,"column_start":8,"column_end":31},"name":"multi_cartesian_product","qualname":"::Itertools::multi_cartesian_product","value":"pub fn multi_cartesian_product(Self)\n-> MultiProduct<<Self::Item as IntoIterator>::IntoIter> where Self: Iterator +\nSized, Self::Item: IntoIterator,\n<Self::Item as IntoIterator>::IntoIter: Clone,\n<Self::Item as IntoIterator>::Item: Clone","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n all subiterators returned by meta-iterator `self`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25668,"byte_end":25742,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/ all subiterators returned by meta-iterator `self`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25747,"byte_end":25801,"line_start":797,"line_end":797,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25806,"byte_end":25809,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ All provided iterators must yield the same `Item` type. To generate","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25814,"byte_end":25885,"line_start":799,"line_end":799,"column_start":5,"column_end":76}},{"value":"/ the product of iterators yielding multiple types, use the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25890,"byte_end":25951,"line_start":800,"line_end":800,"column_start":5,"column_end":66}},{"value":"/ [`iproduct`](macro.iproduct.html) macro instead.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":25956,"byte_end":26008,"line_start":801,"line_end":801,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26013,"byte_end":26016,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26021,"byte_end":26024,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is `Vec<T>`, where `T` is the iterator element","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26029,"byte_end":26105,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ of the subiterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26110,"byte_end":26134,"line_start":805,"line_end":805,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26139,"byte_end":26142,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26147,"byte_end":26154,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26159,"byte_end":26188,"line_start":808,"line_end":808,"column_start":5,"column_end":34}},{"value":"/ let mut multi_prod = (0..3).map(|i| (i * 2)..(i * 2 + 2))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26193,"byte_end":26254,"line_start":809,"line_end":809,"column_start":5,"column_end":66}},{"value":"/     .multi_cartesian_product();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26259,"byte_end":26294,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 2, 4]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26299,"byte_end":26354,"line_start":811,"line_end":811,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 2, 5]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26359,"byte_end":26414,"line_start":812,"line_end":812,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 3, 4]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26419,"byte_end":26474,"line_start":813,"line_end":813,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 3, 5]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26479,"byte_end":26534,"line_start":814,"line_end":814,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 2, 4]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26539,"byte_end":26594,"line_start":815,"line_end":815,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 2, 5]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26599,"byte_end":26654,"line_start":816,"line_end":816,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 3, 4]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26659,"byte_end":26714,"line_start":817,"line_end":817,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 3, 5]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26719,"byte_end":26774,"line_start":818,"line_end":818,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26779,"byte_end":26819,"line_start":819,"line_end":819,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26824,"byte_end":26831,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":26836,"byte_end":26863,"line_start":821,"line_end":821,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28387,"byte_end":28395,"line_start":859,"line_end":859,"column_start":8,"column_end":16},"name":"coalesce","qualname":"::Itertools::coalesce","value":"pub fn coalesce<F>(Self, F) -> Coalesce<Self, F> where Self: Sized,\nF: FnMut(Self::Item, Self::Item) ->\nResult<Self::Item, (Self::Item, Self::Item)>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that uses the passed-in closure to\n optionally merge together consecutive elements.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that uses the passed-in closure to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27217,"byte_end":27282,"line_start":831,"line_end":831,"column_start":5,"column_end":70}},{"value":"/ optionally merge together consecutive elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27287,"byte_end":27338,"line_start":832,"line_end":832,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27343,"byte_end":27346,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is passed two elements, `previous` and `current` and may","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27351,"byte_end":27427,"line_start":834,"line_end":834,"column_start":5,"column_end":81}},{"value":"/ return either (1) `Ok(combined)` to merge the two values or","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27432,"byte_end":27495,"line_start":835,"line_end":835,"column_start":5,"column_end":68}},{"value":"/ (2) `Err((previous', current'))` to indicate they can't be merged.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27500,"byte_end":27570,"line_start":836,"line_end":836,"column_start":5,"column_end":75}},{"value":"/ In (2), the value `previous'` is emitted by the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27575,"byte_end":27636,"line_start":837,"line_end":837,"column_start":5,"column_end":66}},{"value":"/ Either (1) `combined` or (2) `current'` becomes the previous value","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27641,"byte_end":27711,"line_start":838,"line_end":838,"column_start":5,"column_end":75}},{"value":"/ when coalesce continues with the next pair of elements to merge. The","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27716,"byte_end":27788,"line_start":839,"line_end":839,"column_start":5,"column_end":77}},{"value":"/ value that remains at the end is also emitted by the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27793,"byte_end":27859,"line_start":840,"line_end":840,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27864,"byte_end":27867,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27872,"byte_end":27914,"line_start":842,"line_end":842,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27919,"byte_end":27922,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27927,"byte_end":27956,"line_start":844,"line_end":844,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27961,"byte_end":27964,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27969,"byte_end":27976,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":27981,"byte_end":28010,"line_start":847,"line_end":847,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28015,"byte_end":28018,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ // sum same-sign runs together","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28023,"byte_end":28057,"line_start":849,"line_end":849,"column_start":5,"column_end":39}},{"value":"/ let data = vec![-1., -2., -3., 3., 1., 0., -1.];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28062,"byte_end":28114,"line_start":850,"line_end":850,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(data.into_iter().coalesce(|x, y|","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28119,"byte_end":28179,"line_start":851,"line_end":851,"column_start":5,"column_end":65}},{"value":"/         if (x >= 0.) == (y >= 0.) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28184,"byte_end":28223,"line_start":852,"line_end":852,"column_start":5,"column_end":44}},{"value":"/             Ok(x + y)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28228,"byte_end":28253,"line_start":853,"line_end":853,"column_start":5,"column_end":30}},{"value":"/         } else {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28258,"byte_end":28278,"line_start":854,"line_end":854,"column_start":5,"column_end":25}},{"value":"/             Err((x, y))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28283,"byte_end":28310,"line_start":855,"line_end":855,"column_start":5,"column_end":32}},{"value":"/         }),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28315,"byte_end":28330,"line_start":856,"line_end":856,"column_start":5,"column_end":20}},{"value":"/         vec![-6., 4., -1.]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28335,"byte_end":28367,"line_start":857,"line_end":857,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28372,"byte_end":28379,"line_start":858,"line_end":858,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29109,"byte_end":29114,"line_start":881,"line_end":881,"column_start":8,"column_end":13},"name":"dedup","qualname":"::Itertools::dedup","value":"pub fn dedup(Self) -> Dedup<Self> where Self: Sized, Self::Item: PartialEq","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[{"value":"/ Remove duplicates from sections of consecutive identical elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28630,"byte_end":28700,"line_start":867,"line_end":867,"column_start":5,"column_end":75}},{"value":"/ If the iterator is sorted, all elements will be unique.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28705,"byte_end":28764,"line_start":868,"line_end":868,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28769,"byte_end":28772,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28777,"byte_end":28819,"line_start":870,"line_end":870,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28824,"byte_end":28827,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28832,"byte_end":28861,"line_start":872,"line_end":872,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28866,"byte_end":28869,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28874,"byte_end":28881,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28886,"byte_end":28915,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28920,"byte_end":28923,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1., 1., 2., 3., 3., 2., 2.];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28928,"byte_end":28976,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(data.into_iter().dedup(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":28981,"byte_end":29034,"line_start":878,"line_end":878,"column_start":5,"column_end":58}},{"value":"/                         vec![1., 2., 3., 2.]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29039,"byte_end":29089,"line_start":879,"line_end":879,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29094,"byte_end":29101,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29805,"byte_end":29811,"line_start":903,"line_end":903,"column_start":8,"column_end":14},"name":"unique","qualname":"::Itertools::unique","value":"pub fn unique(Self) -> Unique<Self> where Self: Sized, Self::Item: Clone +\nEq + Hash","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration. Duplicates\n are detected using hash and equality.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters out elements that have","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29247,"byte_end":29313,"line_start":888,"line_end":888,"column_start":5,"column_end":71}},{"value":"/ already been produced once during the iteration. Duplicates","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29318,"byte_end":29381,"line_start":889,"line_end":889,"column_start":5,"column_end":68}},{"value":"/ are detected using hash and equality.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29386,"byte_end":29427,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29432,"byte_end":29435,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ Clones of visited elements are stored in a hash set in the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29440,"byte_end":29502,"line_start":892,"line_end":892,"column_start":5,"column_end":67}},{"value":"/ iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29507,"byte_end":29520,"line_start":893,"line_end":893,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29525,"byte_end":29528,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29533,"byte_end":29540,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29545,"byte_end":29574,"line_start":896,"line_end":896,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29579,"byte_end":29582,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ let data = vec![10, 20, 30, 20, 40, 10, 50];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29587,"byte_end":29635,"line_start":898,"line_end":898,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(data.into_iter().unique(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29640,"byte_end":29694,"line_start":899,"line_end":899,"column_start":5,"column_end":59}},{"value":"/                         vec![10, 20, 30, 40, 50]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29699,"byte_end":29753,"line_start":900,"line_end":900,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29758,"byte_end":29765,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29770,"byte_end":29797,"line_start":902,"line_end":902,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30568,"byte_end":30577,"line_start":925,"line_end":925,"column_start":8,"column_end":17},"name":"unique_by","qualname":"::Itertools::unique_by","value":"pub fn unique_by<V, F>(Self, F) -> UniqueBy<Self, V, F> where Self: Sized,\nV: Eq + Hash, F: FnMut(&Self::Item) -> V","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters out elements that have","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":29956,"byte_end":30022,"line_start":910,"line_end":910,"column_start":5,"column_end":71}},{"value":"/ already been produced once during the iteration.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30027,"byte_end":30079,"line_start":911,"line_end":911,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30084,"byte_end":30087,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ Duplicates are detected by comparing the key they map to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30092,"byte_end":30152,"line_start":913,"line_end":913,"column_start":5,"column_end":65}},{"value":"/ with the keying function `f` by hash and equality.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30157,"byte_end":30211,"line_start":914,"line_end":914,"column_start":5,"column_end":59}},{"value":"/ The keys are stored in a hash set in the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30216,"byte_end":30270,"line_start":915,"line_end":915,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30275,"byte_end":30278,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30283,"byte_end":30290,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30295,"byte_end":30324,"line_start":918,"line_end":918,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30329,"byte_end":30332,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ let data = vec![\"a\", \"bb\", \"aa\", \"c\", \"ccc\"];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30337,"byte_end":30386,"line_start":920,"line_end":920,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(data.into_iter().unique_by(|s| s.len()),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30391,"byte_end":30459,"line_start":921,"line_end":921,"column_start":5,"column_end":73}},{"value":"/                         vec![\"a\", \"bb\", \"ccc\"]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30464,"byte_end":30516,"line_start":922,"line_end":922,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30521,"byte_end":30528,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30533,"byte_end":30560,"line_start":924,"line_end":924,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31314,"byte_end":31332,"line_start":945,"line_end":945,"column_start":8,"column_end":26},"name":"peeking_take_while","qualname":"::Itertools::peeking_take_while","value":"pub fn peeking_take_while<F>(&mut Self, F) -> PeekingTakeWhile<, Self, F>\nwhere Self: Sized + PeekingNext, F: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from this iterator and\n takes items while the closure `accept` returns `true`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that borrows from this iterator and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30773,"byte_end":30839,"line_start":933,"line_end":933,"column_start":5,"column_end":71}},{"value":"/ takes items while the closure `accept` returns `true`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30844,"byte_end":30902,"line_start":934,"line_end":934,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30907,"byte_end":30910,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ This adaptor can only be used on iterators that implement `PeekingNext`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30915,"byte_end":30990,"line_start":936,"line_end":936,"column_start":5,"column_end":80}},{"value":"/ like `.peekable()`, `put_back` and a few other collection iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":30995,"byte_end":31067,"line_start":937,"line_end":937,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31072,"byte_end":31075,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ The last and rejected element (first `false`) is still available when","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31080,"byte_end":31153,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ `peeking_take_while` is done.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31158,"byte_end":31191,"line_start":940,"line_end":940,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31196,"byte_end":31199,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31204,"byte_end":31207,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ See also [`.take_while_ref()`](#method.take_while_ref)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31212,"byte_end":31270,"line_start":943,"line_end":943,"column_start":5,"column_end":63}},{"value":"/ which is a similar adaptor.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31275,"byte_end":31306,"line_start":944,"line_end":944,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32278,"byte_end":32292,"line_start":970,"line_end":970,"column_start":8,"column_end":22},"name":"take_while_ref","qualname":"::Itertools::take_while_ref","value":"pub fn take_while_ref<F>(&mut Self, F) -> TakeWhileRef<, Self, F> where\nSelf: Clone, F: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate `accept` returns `true`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that borrows from a `Clone`-able iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31551,"byte_end":31623,"line_start":952,"line_end":952,"column_start":5,"column_end":77}},{"value":"/ to only pick off elements while the predicate `accept` returns `true`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31628,"byte_end":31702,"line_start":953,"line_end":953,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31707,"byte_end":31710,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ It uses the `Clone` trait to restore the original iterator so that the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31715,"byte_end":31789,"line_start":955,"line_end":955,"column_start":5,"column_end":79}},{"value":"/ last and rejected element (first `false`) is still available when","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31794,"byte_end":31863,"line_start":956,"line_end":956,"column_start":5,"column_end":74}},{"value":"/ `take_while_ref` is done.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31868,"byte_end":31897,"line_start":957,"line_end":957,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31902,"byte_end":31905,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31910,"byte_end":31917,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31922,"byte_end":31951,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31956,"byte_end":31959,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ let mut hexadecimals = \"0123456789abcdef\".chars();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":31964,"byte_end":32018,"line_start":962,"line_end":962,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32023,"byte_end":32026,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ let decimals = hexadecimals.take_while_ref(|c| c.is_numeric())","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32031,"byte_end":32097,"line_start":964,"line_end":964,"column_start":5,"column_end":71}},{"value":"/                            .collect::<String>();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32102,"byte_end":32154,"line_start":965,"line_end":965,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(decimals, \"0123456789\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32159,"byte_end":32198,"line_start":966,"line_end":966,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(hexadecimals.next(), Some('a'));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32203,"byte_end":32250,"line_start":967,"line_end":967,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32255,"byte_end":32258,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32263,"byte_end":32270,"line_start":969,"line_end":969,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32958,"byte_end":32968,"line_start":991,"line_end":991,"column_start":8,"column_end":18},"name":"while_some","qualname":"::Itertools::while_some","value":"pub fn while_some<A>(Self) -> WhileSome<Self> where Self: Sized +\nIterator<Item = Option<A>>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters `Option<A>` iterator elements","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32478,"byte_end":32551,"line_start":977,"line_end":977,"column_start":5,"column_end":78}},{"value":"/ and produces `A`. Stops on the first `None` encountered.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32556,"byte_end":32616,"line_start":978,"line_end":978,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32621,"byte_end":32624,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `A`, the unwrapped element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32629,"byte_end":32685,"line_start":980,"line_end":980,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32690,"byte_end":32693,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32698,"byte_end":32705,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32710,"byte_end":32739,"line_start":983,"line_end":983,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32744,"byte_end":32747,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ // List all hexadecimal digits","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32752,"byte_end":32786,"line_start":985,"line_end":985,"column_start":5,"column_end":39}},{"value":"/ itertools::assert_equal(","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32791,"byte_end":32819,"line_start":986,"line_end":986,"column_start":5,"column_end":33}},{"value":"/     (0..).map(|i| std::char::from_digit(i, 16)).while_some(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32824,"byte_end":32889,"line_start":987,"line_end":987,"column_start":5,"column_end":70}},{"value":"/     \"0123456789abcdef\".chars());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32894,"byte_end":32930,"line_start":988,"line_end":988,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32935,"byte_end":32938,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":32943,"byte_end":32950,"line_start":990,"line_end":990,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34399,"byte_end":34417,"line_start":1030,"line_end":1030,"column_start":8,"column_end":26},"name":"tuple_combinations","qualname":"::Itertools::tuple_combinations","value":"pub fn tuple_combinations<T>(Self) -> TupleCombinations<Self, T> where\nSelf: Sized + Clone, Self::Item: Clone, T: adaptors::HasCombination<Self>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the combinations of the\n elements from an iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the combinations of the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33104,"byte_end":33177,"line_start":997,"line_end":997,"column_start":5,"column_end":78}},{"value":"/ elements from an iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33182,"byte_end":33212,"line_start":998,"line_end":998,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33217,"byte_end":33220,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ Iterator element can be any homogeneous tuple of type `Self::Item` with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33225,"byte_end":33300,"line_start":1000,"line_end":1000,"column_start":5,"column_end":80}},{"value":"/ size up to 4.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33305,"byte_end":33322,"line_start":1001,"line_end":1001,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33327,"byte_end":33330,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33335,"byte_end":33342,"line_start":1003,"line_end":1003,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33347,"byte_end":33376,"line_start":1004,"line_end":1004,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33381,"byte_end":33384,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33389,"byte_end":33416,"line_start":1006,"line_end":1006,"column_start":5,"column_end":32}},{"value":"/ for (a, b) in (1..5).tuple_combinations() {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33421,"byte_end":33468,"line_start":1007,"line_end":1007,"column_start":5,"column_end":52}},{"value":"/     v.push((a, b));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33473,"byte_end":33496,"line_start":1008,"line_end":1008,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33501,"byte_end":33506,"line_start":1009,"line_end":1009,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33511,"byte_end":33583,"line_start":1010,"line_end":1010,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33588,"byte_end":33591,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..5).tuple_combinations();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33596,"byte_end":33641,"line_start":1012,"line_end":1012,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33646,"byte_end":33689,"line_start":1013,"line_end":1013,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((1, 2, 4)), it.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33694,"byte_end":33737,"line_start":1014,"line_end":1014,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((1, 3, 4)), it.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33742,"byte_end":33785,"line_start":1015,"line_end":1015,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((2, 3, 4)), it.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33790,"byte_end":33833,"line_start":1016,"line_end":1016,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33838,"byte_end":33870,"line_start":1017,"line_end":1017,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33875,"byte_end":33878,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33883,"byte_end":33915,"line_start":1019,"line_end":1019,"column_start":5,"column_end":37}},{"value":"/ let it = (1..5).tuple_combinations::<(_, _, _)>();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33920,"byte_end":33974,"line_start":1020,"line_end":1020,"column_start":5,"column_end":59}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":33979,"byte_end":34061,"line_start":1021,"line_end":1021,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34066,"byte_end":34069,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ // you can also specify the complete type","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34074,"byte_end":34119,"line_start":1023,"line_end":1023,"column_start":5,"column_end":50}},{"value":"/ use itertools::TupleCombinations;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34124,"byte_end":34161,"line_start":1024,"line_end":1024,"column_start":5,"column_end":42}},{"value":"/ use std::ops::Range;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34166,"byte_end":34190,"line_start":1025,"line_end":1025,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34195,"byte_end":34198,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ let it: TupleCombinations<Range<u32>, (u32, u32, u32)> = (1..5).tuple_combinations();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34203,"byte_end":34292,"line_start":1027,"line_end":1027,"column_start":5,"column_end":94}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34297,"byte_end":34379,"line_start":1028,"line_end":1028,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34384,"byte_end":34391,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35223,"byte_end":35235,"line_start":1056,"line_end":1056,"column_start":8,"column_end":20},"name":"combinations","qualname":"::Itertools::combinations","value":"pub fn combinations(Self, usize) -> Combinations<Self> where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the `n`-length combinations of\n the elements from an iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the `n`-length combinations of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34634,"byte_end":34714,"line_start":1038,"line_end":1038,"column_start":5,"column_end":85}},{"value":"/ the elements from an iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34719,"byte_end":34753,"line_start":1039,"line_end":1039,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34758,"byte_end":34761,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Vec<Self::Item>`. The iterator produces a new Vec per iteration,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34766,"byte_end":34860,"line_start":1041,"line_end":1041,"column_start":5,"column_end":99}},{"value":"/ and clones the iterator elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34865,"byte_end":34902,"line_start":1042,"line_end":1042,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34907,"byte_end":34910,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34915,"byte_end":34922,"line_start":1044,"line_end":1044,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34927,"byte_end":34956,"line_start":1045,"line_end":1045,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34961,"byte_end":34964,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ let it = (1..5).combinations(3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":34969,"byte_end":35005,"line_start":1047,"line_end":1047,"column_start":5,"column_end":41}},{"value":"/ itertools::assert_equal(it, vec![","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35010,"byte_end":35047,"line_start":1048,"line_end":1048,"column_start":5,"column_end":42}},{"value":"/     vec![1, 2, 3],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35052,"byte_end":35074,"line_start":1049,"line_end":1049,"column_start":5,"column_end":27}},{"value":"/     vec![1, 2, 4],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35079,"byte_end":35101,"line_start":1050,"line_end":1050,"column_start":5,"column_end":27}},{"value":"/     vec![1, 3, 4],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35106,"byte_end":35128,"line_start":1051,"line_end":1051,"column_start":5,"column_end":27}},{"value":"/     vec![2, 3, 4],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35133,"byte_end":35155,"line_start":1052,"line_end":1052,"column_start":5,"column_end":27}},{"value":"/     ]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35160,"byte_end":35171,"line_start":1053,"line_end":1053,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35176,"byte_end":35183,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35188,"byte_end":35215,"line_start":1055,"line_end":1055,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36065,"byte_end":36074,"line_start":1080,"line_end":1080,"column_start":8,"column_end":17},"name":"pad_using","qualname":"::Itertools::pad_using","value":"pub fn pad_using<F>(Self, usize, F) -> PadUsing<Self, F> where Self: Sized,\nF: FnMut(usize) -> Self::Item","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that pads the sequence to a minimum length of\n `min` by filling missing elements using a closure `f`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that pads the sequence to a minimum length of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35394,"byte_end":35470,"line_start":1063,"line_end":1063,"column_start":5,"column_end":81}},{"value":"/ `min` by filling missing elements using a closure `f`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35475,"byte_end":35533,"line_start":1064,"line_end":1064,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35538,"byte_end":35541,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35546,"byte_end":35588,"line_start":1066,"line_end":1066,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35593,"byte_end":35596,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35601,"byte_end":35608,"line_start":1068,"line_end":1068,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35613,"byte_end":35642,"line_start":1069,"line_end":1069,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35647,"byte_end":35650,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ let it = (0..5).pad_using(10, |i| 2*i);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35655,"byte_end":35698,"line_start":1071,"line_end":1071,"column_start":5,"column_end":48}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 10, 12, 14, 16, 18]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35703,"byte_end":35776,"line_start":1072,"line_end":1072,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35781,"byte_end":35784,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ let it = (0..10).pad_using(5, |i| 2*i);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35789,"byte_end":35832,"line_start":1074,"line_end":1074,"column_start":5,"column_end":48}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35837,"byte_end":35905,"line_start":1075,"line_end":1075,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35910,"byte_end":35913,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ let it = (0..5).pad_using(10, |i| 2*i).rev();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35918,"byte_end":35967,"line_start":1077,"line_end":1077,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(it, vec![18, 16, 14, 12, 10, 4, 3, 2, 1, 0]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":35972,"byte_end":36045,"line_start":1078,"line_end":1078,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36050,"byte_end":36057,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36638,"byte_end":36645,"line_start":1100,"line_end":1100,"column_start":8,"column_end":15},"name":"flatten","qualname":"::Itertools::flatten","value":"pub fn flatten(Self) -> Flatten<Self, <Self::Item as IntoIterator>::IntoIter>\nwhere Self: Sized, Self::Item: IntoIterator","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Unravel a nested iterator.","sig":null,"attributes":[{"value":"/ Unravel a nested iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36253,"byte_end":36283,"line_start":1087,"line_end":1087,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36288,"byte_end":36291,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ This is more or less equivalent to `.flat_map` with an identity","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36296,"byte_end":36363,"line_start":1089,"line_end":1089,"column_start":5,"column_end":72}},{"value":"/ function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36368,"byte_end":36381,"line_start":1090,"line_end":1090,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36386,"byte_end":36389,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36394,"byte_end":36401,"line_start":1092,"line_end":1092,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36406,"byte_end":36435,"line_start":1093,"line_end":1093,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36440,"byte_end":36443,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ let data = vec![vec![1, 2, 3], vec![4, 5, 6]];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36448,"byte_end":36498,"line_start":1095,"line_end":1095,"column_start":5,"column_end":55}},{"value":"/ let flattened = data.iter().flatten();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36503,"byte_end":36545,"line_start":1096,"line_end":1096,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36550,"byte_end":36553,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(flattened, &[1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36558,"byte_end":36618,"line_start":1098,"line_end":1098,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36623,"byte_end":36630,"line_start":1099,"line_end":1099,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37570,"byte_end":37583,"line_start":1126,"line_end":1126,"column_start":8,"column_end":21},"name":"with_position","qualname":"::Itertools::with_position","value":"pub fn with_position(Self) -> WithPosition<Self> where Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that wraps each element in a `Position` to\n ease special-case handling of the first or last elements.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that wraps each element in a `Position` to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36824,"byte_end":36897,"line_start":1107,"line_end":1107,"column_start":5,"column_end":78}},{"value":"/ ease special-case handling of the first or last elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36902,"byte_end":36963,"line_start":1108,"line_end":1108,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36968,"byte_end":36971,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":36976,"byte_end":37004,"line_start":1110,"line_end":1110,"column_start":5,"column_end":33}},{"value":"/ [`Position<Self::Item>`](enum.Position.html)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37009,"byte_end":37057,"line_start":1111,"line_end":1111,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37062,"byte_end":37065,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37070,"byte_end":37077,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}},{"value":"/ use itertools::{Itertools, Position};","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37082,"byte_end":37123,"line_start":1114,"line_end":1114,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37128,"byte_end":37131,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ let it = (0..4).with_position();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37136,"byte_end":37172,"line_start":1116,"line_end":1116,"column_start":5,"column_end":41}},{"value":"/ itertools::assert_equal(it,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37177,"byte_end":37208,"line_start":1117,"line_end":1117,"column_start":5,"column_end":36}},{"value":"/                         vec![Position::First(0),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37213,"byte_end":37265,"line_start":1118,"line_end":1118,"column_start":5,"column_end":57}},{"value":"/                              Position::Middle(1),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37270,"byte_end":37323,"line_start":1119,"line_end":1119,"column_start":5,"column_end":58}},{"value":"/                              Position::Middle(2),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37328,"byte_end":37381,"line_start":1120,"line_end":1120,"column_start":5,"column_end":58}},{"value":"/                              Position::Last(3)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37386,"byte_end":37439,"line_start":1121,"line_end":1121,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37444,"byte_end":37447,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ let it = (0..1).with_position();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37452,"byte_end":37488,"line_start":1123,"line_end":1123,"column_start":5,"column_end":41}},{"value":"/ itertools::assert_equal(it, vec![Position::Only(0)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37493,"byte_end":37550,"line_start":1124,"line_end":1124,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37555,"byte_end":37562,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38262,"byte_end":38271,"line_start":1145,"line_end":1145,"column_start":8,"column_end":17},"name":"positions","qualname":"::Itertools::positions","value":"pub fn positions<P>(Self, P) -> Positions<Self, P> where Self: Sized,\nP: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that yields the indices of all elements\n satisfying a predicate, counted from the start of the iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that yields the indices of all elements","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37699,"byte_end":37769,"line_start":1132,"line_end":1132,"column_start":5,"column_end":75}},{"value":"/ satisfying a predicate, counted from the start of the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37774,"byte_end":37841,"line_start":1133,"line_end":1133,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37846,"byte_end":37849,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `iter.enumerate().filter(|(_, v)| predicate(v)).map(|(i, _)| i)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37854,"byte_end":37937,"line_start":1135,"line_end":1135,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37942,"byte_end":37945,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37950,"byte_end":37957,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37962,"byte_end":37991,"line_start":1138,"line_end":1138,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":37996,"byte_end":37999,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 2, 3, 3, 4, 6, 7, 9];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38004,"byte_end":38048,"line_start":1140,"line_end":1140,"column_start":5,"column_end":49}},{"value":"/ itertools::assert_equal(data.iter().positions(|v| v % 2 == 0), vec![1, 4, 5]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38053,"byte_end":38135,"line_start":1141,"line_end":1141,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38140,"byte_end":38143,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(data.iter().positions(|v| v % 2 == 1).rev(), vec![7, 6, 3, 2, 0]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38148,"byte_end":38242,"line_start":1143,"line_end":1143,"column_start":5,"column_end":99}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38247,"byte_end":38254,"line_start":1144,"line_end":1144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38824,"byte_end":38830,"line_start":1162,"line_end":1162,"column_start":8,"column_end":14},"name":"update","qualname":"::Itertools::update","value":"pub fn update<F>(Self, F) -> Update<Self, F> where Self: Sized,\nF: FnMut(&mut Self::Item) -> ()","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies a mutating function\n to each element before yielding it.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that applies a mutating function","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38450,"byte_end":38513,"line_start":1152,"line_end":1152,"column_start":5,"column_end":68}},{"value":"/ to each element before yielding it.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38518,"byte_end":38557,"line_start":1153,"line_end":1153,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38562,"byte_end":38565,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38570,"byte_end":38577,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38582,"byte_end":38611,"line_start":1156,"line_end":1156,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38616,"byte_end":38619,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ let input = vec![vec![1], vec![3, 2, 1]];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38624,"byte_end":38669,"line_start":1158,"line_end":1158,"column_start":5,"column_end":50}},{"value":"/ let it = input.into_iter().update(|mut v| v.push(0));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38674,"byte_end":38731,"line_start":1159,"line_end":1159,"column_start":5,"column_end":62}},{"value":"/ itertools::assert_equal(it, vec![vec![1, 0], vec![3, 2, 1, 0]]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38736,"byte_end":38804,"line_start":1160,"line_end":1160,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":38809,"byte_end":38816,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39455,"byte_end":39465,"line_start":1183,"line_end":1183,"column_start":8,"column_end":18},"name":"next_tuple","qualname":"::Itertools::next_tuple","value":"pub fn next_tuple<T>(&mut Self) -> Option<T> where Self: Sized + Iterator<Item\n= T::Item>, T: tuple_impl::TupleCollect","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Advances the iterator and returns the next items grouped in a tuple of\n a specific size (up to 4).","sig":null,"attributes":[{"value":"/ Advances the iterator and returns the next items grouped in a tuple of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39023,"byte_end":39097,"line_start":1170,"line_end":1170,"column_start":5,"column_end":79}},{"value":"/ a specific size (up to 4).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39102,"byte_end":39132,"line_start":1171,"line_end":1171,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39137,"byte_end":39140,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ If there are enough elements to be grouped in a tuple, then the tuple is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39145,"byte_end":39221,"line_start":1173,"line_end":1173,"column_start":5,"column_end":81}},{"value":"/ returned inside `Some`, otherwise `None` is returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39226,"byte_end":39283,"line_start":1174,"line_end":1174,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39288,"byte_end":39291,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39296,"byte_end":39303,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39308,"byte_end":39337,"line_start":1177,"line_end":1177,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39342,"byte_end":39345,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ let mut iter = 1..5;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39350,"byte_end":39374,"line_start":1179,"line_end":1179,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39379,"byte_end":39382,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some((1, 2)), iter.next_tuple());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39387,"byte_end":39435,"line_start":1181,"line_end":1181,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39440,"byte_end":39447,"line_start":1182,"line_end":1182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40207,"byte_end":40220,"line_start":1208,"line_end":1208,"column_start":8,"column_end":21},"name":"collect_tuple","qualname":"::Itertools::collect_tuple","value":"pub fn collect_tuple<T>(Self) -> Option<T> where Self: Sized + Iterator<Item =\nT::Item>, T: tuple_impl::TupleCollect","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Collects all items from the iterator into a tuple of a specific size\n (up to 4).","sig":null,"attributes":[{"value":"/ Collects all items from the iterator into a tuple of a specific size","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39648,"byte_end":39720,"line_start":1190,"line_end":1190,"column_start":5,"column_end":77}},{"value":"/ (up to 4).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39725,"byte_end":39739,"line_start":1191,"line_end":1191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39744,"byte_end":39747,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ If the number of elements inside the iterator is **exactly** equal to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39752,"byte_end":39825,"line_start":1193,"line_end":1193,"column_start":5,"column_end":78}},{"value":"/ the tuple size, then the tuple is returned inside `Some`, otherwise","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39830,"byte_end":39901,"line_start":1194,"line_end":1194,"column_start":5,"column_end":76}},{"value":"/ `None` is returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39906,"byte_end":39929,"line_start":1195,"line_end":1195,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39934,"byte_end":39937,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39942,"byte_end":39949,"line_start":1197,"line_end":1197,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39954,"byte_end":39983,"line_start":1198,"line_end":1198,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39988,"byte_end":39991,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ let iter = 1..3;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":39996,"byte_end":40016,"line_start":1200,"line_end":1200,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40021,"byte_end":40024,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ if let Some((x, y)) = iter.collect_tuple() {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40029,"byte_end":40077,"line_start":1202,"line_end":1202,"column_start":5,"column_end":53}},{"value":"/     assert_eq!((x, y), (1, 2))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40082,"byte_end":40116,"line_start":1203,"line_end":1203,"column_start":5,"column_end":39}},{"value":"/ } else {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40121,"byte_end":40133,"line_start":1204,"line_end":1204,"column_start":5,"column_end":17}},{"value":"/     panic!(\"Expected two elements\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40138,"byte_end":40177,"line_start":1205,"line_end":1205,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40182,"byte_end":40187,"line_start":1206,"line_end":1206,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40192,"byte_end":40199,"line_start":1207,"line_end":1207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40901,"byte_end":40914,"line_start":1232,"line_end":1232,"column_start":8,"column_end":21},"name":"find_position","qualname":"::Itertools::find_position","value":"pub fn find_position<P>(&mut Self, P) -> Option<(usize, Self::Item)> where\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Find the position and value of the first element satisfying a predicate.","sig":null,"attributes":[{"value":"/ Find the position and value of the first element satisfying a predicate.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40553,"byte_end":40629,"line_start":1222,"line_end":1222,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40634,"byte_end":40637,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ The iterator is not advanced past the first element found.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40642,"byte_end":40704,"line_start":1224,"line_end":1224,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40709,"byte_end":40712,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40717,"byte_end":40724,"line_start":1226,"line_end":1226,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40729,"byte_end":40758,"line_start":1227,"line_end":1227,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40763,"byte_end":40766,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ let text = \"Hα\";","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40771,"byte_end":40792,"line_start":1229,"line_end":1229,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(text.chars().find_position(|ch| ch.is_lowercase()), Some((1, 'α')));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40797,"byte_end":40881,"line_start":1230,"line_end":1230,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":40886,"byte_end":40893,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41763,"byte_end":41772,"line_start":1261,"line_end":1261,"column_start":8,"column_end":17},"name":"all_equal","qualname":"::Itertools::all_equal","value":"pub fn all_equal(&mut Self) -> bool where Self::Item: PartialEq","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Check whether all elements compare equal.","sig":null,"attributes":[{"value":"/ Check whether all elements compare equal.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41224,"byte_end":41269,"line_start":1245,"line_end":1245,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41274,"byte_end":41277,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ Empty iterators are considered to have equal elements:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41282,"byte_end":41340,"line_start":1247,"line_end":1247,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41345,"byte_end":41348,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41353,"byte_end":41360,"line_start":1249,"line_end":1249,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41365,"byte_end":41394,"line_start":1250,"line_end":1250,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41399,"byte_end":41402,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41407,"byte_end":41460,"line_start":1252,"line_end":1252,"column_start":5,"column_end":58}},{"value":"/ assert!(!data.iter().all_equal());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41465,"byte_end":41503,"line_start":1253,"line_end":1253,"column_start":5,"column_end":43}},{"value":"/ assert!(data[0..3].iter().all_equal());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41508,"byte_end":41551,"line_start":1254,"line_end":1254,"column_start":5,"column_end":48}},{"value":"/ assert!(data[3..5].iter().all_equal());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41556,"byte_end":41599,"line_start":1255,"line_end":1255,"column_start":5,"column_end":48}},{"value":"/ assert!(data[5..8].iter().all_equal());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41604,"byte_end":41647,"line_start":1256,"line_end":1256,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41652,"byte_end":41655,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ let data : Option<usize> = None;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41660,"byte_end":41696,"line_start":1258,"line_end":1258,"column_start":5,"column_end":41}},{"value":"/ assert!(data.into_iter().all_equal());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41701,"byte_end":41743,"line_start":1259,"line_end":1259,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41748,"byte_end":41755,"line_start":1260,"line_end":1260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42452,"byte_end":42460,"line_start":1282,"line_end":1282,"column_start":8,"column_end":16},"name":"dropping","qualname":"::Itertools::dropping","value":"pub fn dropping(Self, usize) -> Self where Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Consume the first `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[{"value":"/ Consume the first `n` elements from the iterator eagerly,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41884,"byte_end":41945,"line_start":1267,"line_end":1267,"column_start":5,"column_end":66}},{"value":"/ and return the same iterator again.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41950,"byte_end":41989,"line_start":1268,"line_end":1268,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":41994,"byte_end":41997,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ It works similarly to *.skip(* `n` *)* except it is eager and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42002,"byte_end":42067,"line_start":1270,"line_end":1270,"column_start":5,"column_end":70}},{"value":"/ preserves the iterator type.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42072,"byte_end":42104,"line_start":1271,"line_end":1271,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42109,"byte_end":42112,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42117,"byte_end":42124,"line_start":1273,"line_end":1273,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42129,"byte_end":42158,"line_start":1274,"line_end":1274,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42163,"byte_end":42166,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ let mut iter = \"αβγ\".chars().dropping(2);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42171,"byte_end":42219,"line_start":1276,"line_end":1276,"column_start":5,"column_end":50}},{"value":"/ itertools::assert_equal(iter, \"γ\".chars());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42224,"byte_end":42272,"line_start":1277,"line_end":1277,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42277,"byte_end":42284,"line_start":1278,"line_end":1278,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42289,"byte_end":42292,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ *Fusing notes: if the iterator is exhausted by dropping,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42297,"byte_end":42357,"line_start":1280,"line_end":1280,"column_start":5,"column_end":65}},{"value":"/ the result of calling `.next()` again depends on the iterator implementation.*","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42362,"byte_end":42444,"line_start":1281,"line_end":1281,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43153,"byte_end":43166,"line_start":1306,"line_end":1306,"column_start":8,"column_end":21},"name":"dropping_back","qualname":"::Itertools::dropping_back","value":"pub fn dropping_back(Self, usize) -> Self where Self: Sized,\nSelf: DoubleEndedIterator","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Consume the last `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[{"value":"/ Consume the last `n` elements from the iterator eagerly,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42603,"byte_end":42663,"line_start":1291,"line_end":1291,"column_start":5,"column_end":65}},{"value":"/ and return the same iterator again.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42668,"byte_end":42707,"line_start":1292,"line_end":1292,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42712,"byte_end":42715,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ This is only possible on double ended iterators. `n` may be","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42720,"byte_end":42783,"line_start":1294,"line_end":1294,"column_start":5,"column_end":68}},{"value":"/ larger than the number of elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42788,"byte_end":42827,"line_start":1295,"line_end":1295,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42832,"byte_end":42835,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ Note: This method is eager, dropping the back elements immediately and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42840,"byte_end":42914,"line_start":1297,"line_end":1297,"column_start":5,"column_end":79}},{"value":"/ preserves the iterator type.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42919,"byte_end":42951,"line_start":1298,"line_end":1298,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42956,"byte_end":42959,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42964,"byte_end":42971,"line_start":1300,"line_end":1300,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":42976,"byte_end":43005,"line_start":1301,"line_end":1301,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43010,"byte_end":43013,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ let init = vec![0, 3, 6, 9].into_iter().dropping_back(1);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43018,"byte_end":43079,"line_start":1303,"line_end":1303,"column_start":5,"column_end":66}},{"value":"/ itertools::assert_equal(init, vec![0, 3, 6]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43084,"byte_end":43133,"line_start":1304,"line_end":1304,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43138,"byte_end":43145,"line_start":1305,"line_end":1305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43889,"byte_end":43896,"line_start":1333,"line_end":1333,"column_start":8,"column_end":15},"name":"foreach","qualname":"::Itertools::foreach","value":"pub fn foreach<F>(Self, F) where F: FnMut(Self::Item) -> (), Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Run the closure `f` eagerly on each element of the iterator.","sig":null,"attributes":[{"value":"/ Run the closure `f` eagerly on each element of the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43363,"byte_end":43427,"line_start":1316,"line_end":1316,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43432,"byte_end":43435,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ Consumes the iterator until its end.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43440,"byte_end":43480,"line_start":1318,"line_end":1318,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43485,"byte_end":43488,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43493,"byte_end":43500,"line_start":1320,"line_end":1320,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43505,"byte_end":43538,"line_start":1321,"line_end":1321,"column_start":5,"column_end":38}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43543,"byte_end":43572,"line_start":1322,"line_end":1322,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43577,"byte_end":43580,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = channel();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43585,"byte_end":43614,"line_start":1324,"line_end":1324,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43619,"byte_end":43622,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ // use .foreach() to apply a function to each value -- sending it","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43627,"byte_end":43696,"line_start":1326,"line_end":1326,"column_start":5,"column_end":74}},{"value":"/ (0..5).map(|x| x * 2 + 1).foreach(|x| { tx.send(x).unwrap(); } );","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43701,"byte_end":43770,"line_start":1327,"line_end":1327,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43775,"byte_end":43778,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ drop(tx);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43783,"byte_end":43796,"line_start":1329,"line_end":1329,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43801,"byte_end":43804,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(rx.iter(), vec![1, 3, 5, 7, 9]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43809,"byte_end":43869,"line_start":1331,"line_end":1331,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":43874,"byte_end":43881,"line_start":1332,"line_end":1332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44559,"byte_end":44565,"line_start":1353,"line_end":1353,"column_start":8,"column_end":14},"name":"concat","qualname":"::Itertools::concat","value":"pub fn concat(Self) -> Self::Item where Self: Sized,\nSelf::Item: Extend<<<Self as Iterator>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[{"value":"/ Combine all an iterator's elements into one element by using `Extend`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44049,"byte_end":44123,"line_start":1340,"line_end":1340,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44128,"byte_end":44131,"line_start":1341,"line_end":1341,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with each of the rest of the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44136,"byte_end":44211,"line_start":1342,"line_end":1342,"column_start":5,"column_end":80}},{"value":"/ items of the iterator. If the iterator is empty, the default value of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44216,"byte_end":44289,"line_start":1343,"line_end":1343,"column_start":5,"column_end":78}},{"value":"/ `I::Item` is returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44294,"byte_end":44320,"line_start":1344,"line_end":1344,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44325,"byte_end":44328,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44333,"byte_end":44344,"line_start":1346,"line_end":1346,"column_start":5,"column_end":16}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44349,"byte_end":44378,"line_start":1347,"line_end":1347,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44383,"byte_end":44386,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ let input = vec![vec![1], vec![2, 3], vec![4, 5, 6]];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44391,"byte_end":44448,"line_start":1349,"line_end":1349,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(input.into_iter().concat(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44453,"byte_end":44495,"line_start":1350,"line_end":1350,"column_start":5,"column_end":47}},{"value":"/            vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44500,"byte_end":44539,"line_start":1351,"line_end":1351,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44544,"byte_end":44551,"line_start":1352,"line_end":1352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44893,"byte_end":44904,"line_start":1363,"line_end":1363,"column_start":8,"column_end":19},"name":"collect_vec","qualname":"::Itertools::collect_vec","value":"pub fn collect_vec(Self) -> Vec<Self::Item> where Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" `.collect_vec()` is simply a type specialization of `.collect()`,\n for convenience.\n","sig":null,"attributes":[{"value":"/ `.collect_vec()` is simply a type specialization of `.collect()`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44759,"byte_end":44828,"line_start":1360,"line_end":1360,"column_start":5,"column_end":74}},{"value":"/ for convenience.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44833,"byte_end":44853,"line_start":1361,"line_end":1361,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44858,"byte_end":44885,"line_start":1362,"line_end":1362,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45521,"byte_end":45529,"line_start":1385,"line_end":1385,"column_start":8,"column_end":16},"name":"set_from","qualname":"::Itertools::set_from","value":"pub fn set_from<'a, A: 'a, J>(&mut Self, J) -> usize where Self: Iterator<Item\n= &'a mut A>, J: IntoIterator<Item = A>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Assign to each reference in `self` from the `from` iterator,\n stopping at the shortest of the two iterators.","sig":null,"attributes":[{"value":"/ Assign to each reference in `self` from the `from` iterator,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":44996,"byte_end":45060,"line_start":1369,"line_end":1369,"column_start":5,"column_end":69}},{"value":"/ stopping at the shortest of the two iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45065,"byte_end":45115,"line_start":1370,"line_end":1370,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45120,"byte_end":45123,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ The `from` iterator is queried for its next element before the `self`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45128,"byte_end":45201,"line_start":1372,"line_end":1372,"column_start":5,"column_end":78}},{"value":"/ iterator, and if either is exhausted the method is done.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45206,"byte_end":45266,"line_start":1373,"line_end":1373,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45271,"byte_end":45274,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ Return the number of elements written.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45279,"byte_end":45321,"line_start":1375,"line_end":1375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45326,"byte_end":45329,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45334,"byte_end":45341,"line_start":1377,"line_end":1377,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45346,"byte_end":45375,"line_start":1378,"line_end":1378,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45380,"byte_end":45383,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ let mut xs = [0; 4];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45388,"byte_end":45412,"line_start":1380,"line_end":1380,"column_start":5,"column_end":29}},{"value":"/ xs.iter_mut().set_from(1..);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45417,"byte_end":45449,"line_start":1381,"line_end":1381,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(xs, [1, 2, 3, 4]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45454,"byte_end":45487,"line_start":1382,"line_end":1382,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45492,"byte_end":45499,"line_start":1383,"line_end":1383,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45504,"byte_end":45513,"line_start":1384,"line_end":1384,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":46273,"byte_end":46277,"line_start":1411,"line_end":1411,"column_start":8,"column_end":12},"name":"join","qualname":"::Itertools::join","value":"pub fn join(&mut Self, &str) -> String where Self::Item: std::fmt::Display","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, seperated by `sep`.","sig":null,"attributes":[{"value":"/ Combine all iterator elements into one String, seperated by `sep`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45897,"byte_end":45967,"line_start":1400,"line_end":1400,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45972,"byte_end":45975,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ Use the `Display` implementation of each element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":45980,"byte_end":46033,"line_start":1402,"line_end":1402,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":46038,"byte_end":46041,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":46046,"byte_end":46053,"line_start":1404,"line_end":1404,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":46058,"byte_end":46087,"line_start":1405,"line_end":1405,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":46092,"byte_end":46095,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ assert_eq!([\"a\", \"b\", \"c\"].iter().join(\", \"), \"a, b, c\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":46100,"byte_end":46161,"line_start":1407,"line_end":1407,"column_start":5,"column_end":66}},{"value":"/ assert_eq!([1, 2, 3].iter().join(\", \"), \"1, 2, 3\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":46166,"byte_end":46221,"line_start":1408,"line_end":1408,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":46226,"byte_end":46233,"line_start":1409,"line_end":1409,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":46238,"byte_end":46265,"line_start":1410,"line_end":1410,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47405,"byte_end":47411,"line_start":1445,"line_end":1445,"column_start":8,"column_end":14},"name":"format","qualname":"::Itertools::format","value":"pub fn format(Self, &str) -> Format<, Self> where Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements, separated by `sep`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":46917,"byte_end":46970,"line_start":1430,"line_end":1430,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":46975,"byte_end":46978,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ All elements are formatted (any formatting trait)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":46983,"byte_end":47036,"line_start":1432,"line_end":1432,"column_start":5,"column_end":58}},{"value":"/ with `sep` inserted between each element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47041,"byte_end":47086,"line_start":1433,"line_end":1433,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47091,"byte_end":47094,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the formatter helper is formatted more than once.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47099,"byte_end":47166,"line_start":1435,"line_end":1435,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47171,"byte_end":47174,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47179,"byte_end":47186,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47191,"byte_end":47220,"line_start":1438,"line_end":1438,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47225,"byte_end":47228,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ let data = [1.1, 2.71828, -3.];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47233,"byte_end":47268,"line_start":1440,"line_end":1440,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47273,"byte_end":47288,"line_start":1441,"line_end":1441,"column_start":5,"column_end":20}},{"value":"/     format!(\"{:.2}\", data.iter().format(\", \")),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47293,"byte_end":47344,"line_start":1442,"line_end":1442,"column_start":5,"column_end":56}},{"value":"/            \"1.10, 2.72, -3.00\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47349,"byte_end":47385,"line_start":1443,"line_end":1443,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47390,"byte_end":47397,"line_start":1444,"line_end":1444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48889,"byte_end":48900,"line_start":1483,"line_end":1483,"column_start":8,"column_end":19},"name":"format_with","qualname":"::Itertools::format_with","value":"pub fn format_with<F>(Self, &str, F) -> FormatWith<, Self, F> where\nSelf: Sized, F: FnMut(Self::Item, &mut FnMut(&fmt::Display) -> fmt::Result) ->\nfmt::Result","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements, separated by `sep`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47535,"byte_end":47588,"line_start":1451,"line_end":1451,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47593,"byte_end":47596,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ This is a customizable version of `.format()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47601,"byte_end":47651,"line_start":1453,"line_end":1453,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47656,"byte_end":47659,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ The supplied closure `format` is called once per iterator element,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47664,"byte_end":47734,"line_start":1455,"line_end":1455,"column_start":5,"column_end":75}},{"value":"/ with two arguments: the element and a callback that takes a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47739,"byte_end":47802,"line_start":1456,"line_end":1456,"column_start":5,"column_end":68}},{"value":"/ `&Display` value, i.e. any reference to type that implements `Display`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47807,"byte_end":47882,"line_start":1457,"line_end":1457,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47887,"byte_end":47890,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ Using `&format_args!(...)` is the most versatile way to apply custom","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47895,"byte_end":47967,"line_start":1459,"line_end":1459,"column_start":5,"column_end":77}},{"value":"/ element formatting. The callback can be called multiple times if needed.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":47972,"byte_end":48048,"line_start":1460,"line_end":1460,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48053,"byte_end":48056,"line_start":1461,"line_end":1461,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the formatter helper is formatted more than once.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48061,"byte_end":48128,"line_start":1462,"line_end":1462,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48133,"byte_end":48136,"line_start":1463,"line_end":1463,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48141,"byte_end":48148,"line_start":1464,"line_end":1464,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48153,"byte_end":48182,"line_start":1465,"line_end":1465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48187,"byte_end":48190,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ let data = [1.1, 2.71828, -3.];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48195,"byte_end":48230,"line_start":1467,"line_end":1467,"column_start":5,"column_end":40}},{"value":"/ let data_formatter = data.iter().format_with(\", \", |elt, f| f(&format_args!(\"{:.2}\", elt)));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48235,"byte_end":48331,"line_start":1468,"line_end":1468,"column_start":5,"column_end":101}},{"value":"/ assert_eq!(format!(\"{}\", data_formatter),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48336,"byte_end":48381,"line_start":1469,"line_end":1469,"column_start":5,"column_end":50}},{"value":"/            \"1.10, 2.72, -3.00\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48386,"byte_end":48422,"line_start":1470,"line_end":1470,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48427,"byte_end":48430,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ // .format_with() is recursively composable","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48435,"byte_end":48482,"line_start":1472,"line_end":1472,"column_start":5,"column_end":52}},{"value":"/ let matrix = [[1., 2., 3.],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48487,"byte_end":48518,"line_start":1473,"line_end":1473,"column_start":5,"column_end":36}},{"value":"/               [4., 5., 6.]];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48523,"byte_end":48555,"line_start":1474,"line_end":1474,"column_start":5,"column_end":37}},{"value":"/ let matrix_formatter = matrix.iter().format_with(\"\\n\", |row, f| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48560,"byte_end":48629,"line_start":1475,"line_end":1475,"column_start":5,"column_end":74}},{"value":"/                                 f(&row.iter().format_with(\", \", |elt, g| g(&elt)))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48634,"byte_end":48720,"line_start":1476,"line_end":1476,"column_start":5,"column_end":91}},{"value":"/                              });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48725,"byte_end":48761,"line_start":1477,"line_end":1477,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(format!(\"{}\", matrix_formatter),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48766,"byte_end":48813,"line_start":1478,"line_end":1478,"column_start":5,"column_end":52}},{"value":"/            \"1, 2, 3\\n4, 5, 6\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48818,"byte_end":48853,"line_start":1479,"line_end":1479,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48858,"byte_end":48861,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48866,"byte_end":48869,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":48874,"byte_end":48881,"line_start":1482,"line_end":1482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50621,"byte_end":50633,"line_start":1532,"line_end":1532,"column_start":8,"column_end":20},"name":"fold_results","qualname":"::Itertools::fold_results","value":"pub fn fold_results<A, E, B, F>(&mut Self, B, F) -> Result<B, E> where\nSelf: Iterator<Item = Result<A, E>>, F: FnMut(B, A) -> B","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Fold `Result` values from an iterator.","sig":null,"attributes":[{"value":"/ Fold `Result` values from an iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49138,"byte_end":49180,"line_start":1490,"line_end":1490,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49185,"byte_end":49188,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ Only `Ok` values are folded. If no error is encountered, the folded","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49193,"byte_end":49264,"line_start":1492,"line_end":1492,"column_start":5,"column_end":76}},{"value":"/ value is returned inside `Ok`. Otherwise, the operation terminates","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49269,"byte_end":49339,"line_start":1493,"line_end":1493,"column_start":5,"column_end":75}},{"value":"/ and returns the first `Err` value it encounters. No iterator elements are","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49344,"byte_end":49421,"line_start":1494,"line_end":1494,"column_start":5,"column_end":82}},{"value":"/ consumed after the first error.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49426,"byte_end":49461,"line_start":1495,"line_end":1495,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49466,"byte_end":49469,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ The first accumulator value is the `start` parameter.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49474,"byte_end":49531,"line_start":1497,"line_end":1497,"column_start":5,"column_end":62}},{"value":"/ Each iteration passes the accumulator value and the next value inside `Ok`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49536,"byte_end":49614,"line_start":1498,"line_end":1498,"column_start":5,"column_end":83}},{"value":"/ to the fold function `f` and its return value becomes the new accumulator value.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49619,"byte_end":49703,"line_start":1499,"line_end":1499,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49708,"byte_end":49711,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ For example the sequence *Ok(1), Ok(2), Ok(3)* will result in a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49716,"byte_end":49783,"line_start":1501,"line_end":1501,"column_start":5,"column_end":72}},{"value":"/ computation like this:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49788,"byte_end":49814,"line_start":1502,"line_end":1502,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49819,"byte_end":49822,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49827,"byte_end":49840,"line_start":1504,"line_end":1504,"column_start":5,"column_end":18}},{"value":"/ let mut accum = start;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49845,"byte_end":49871,"line_start":1505,"line_end":1505,"column_start":5,"column_end":31}},{"value":"/ accum = f(accum, 1);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49876,"byte_end":49900,"line_start":1506,"line_end":1506,"column_start":5,"column_end":29}},{"value":"/ accum = f(accum, 2);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49905,"byte_end":49929,"line_start":1507,"line_end":1507,"column_start":5,"column_end":29}},{"value":"/ accum = f(accum, 3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49934,"byte_end":49958,"line_start":1508,"line_end":1508,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49963,"byte_end":49970,"line_start":1509,"line_end":1509,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49975,"byte_end":49978,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ With a `start` value of 0 and an addition as folding function,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":49983,"byte_end":50049,"line_start":1511,"line_end":1511,"column_start":5,"column_end":71}},{"value":"/ this effetively results in *((0 + 1) + 2) + 3*","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50054,"byte_end":50104,"line_start":1512,"line_end":1512,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50109,"byte_end":50112,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50117,"byte_end":50124,"line_start":1514,"line_end":1514,"column_start":5,"column_end":12}},{"value":"/ use std::ops::Add;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50129,"byte_end":50151,"line_start":1515,"line_end":1515,"column_start":5,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50156,"byte_end":50185,"line_start":1516,"line_end":1516,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50190,"byte_end":50193,"line_start":1517,"line_end":1517,"column_start":5,"column_end":8}},{"value":"/ let values = [1, 2, -2, -1, 2, 1];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50198,"byte_end":50236,"line_start":1518,"line_end":1518,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50241,"byte_end":50256,"line_start":1519,"line_end":1519,"column_start":5,"column_end":20}},{"value":"/     values.iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50261,"byte_end":50282,"line_start":1520,"line_end":1520,"column_start":5,"column_end":26}},{"value":"/           .map(Ok::<_, ()>)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50287,"byte_end":50318,"line_start":1521,"line_end":1521,"column_start":5,"column_end":36}},{"value":"/           .fold_results(0, Add::add),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50323,"byte_end":50364,"line_start":1522,"line_end":1522,"column_start":5,"column_end":46}},{"value":"/     Ok(3)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50369,"byte_end":50382,"line_start":1523,"line_end":1523,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50387,"byte_end":50393,"line_start":1524,"line_end":1524,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50398,"byte_end":50410,"line_start":1525,"line_end":1525,"column_start":5,"column_end":17}},{"value":"/     values.iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50415,"byte_end":50436,"line_start":1526,"line_end":1526,"column_start":5,"column_end":26}},{"value":"/           .map(|&x| if x >= 0 { Ok(x) } else { Err(\"Negative number\") })","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50441,"byte_end":50517,"line_start":1527,"line_end":1527,"column_start":5,"column_end":81}},{"value":"/           .fold_results(0, Add::add)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50522,"byte_end":50562,"line_start":1528,"line_end":1528,"column_start":5,"column_end":45}},{"value":"/           .is_err()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50567,"byte_end":50590,"line_start":1529,"line_end":1529,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50595,"byte_end":50601,"line_start":1530,"line_end":1530,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50606,"byte_end":50613,"line_start":1531,"line_end":1531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51790,"byte_end":51802,"line_start":1564,"line_end":1564,"column_start":8,"column_end":20},"name":"fold_options","qualname":"::Itertools::fold_options","value":"pub fn fold_options<A, B, F>(&mut Self, B, F) -> Option<B> where\nSelf: Iterator<Item = Option<A>>, F: FnMut(B, A) -> B","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Fold `Option` values from an iterator.","sig":null,"attributes":[{"value":"/ Fold `Option` values from an iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":50978,"byte_end":51020,"line_start":1545,"line_end":1545,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51025,"byte_end":51028,"line_start":1546,"line_end":1546,"column_start":5,"column_end":8}},{"value":"/ Only `Some` values are folded. If no `None` is encountered, the folded","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51033,"byte_end":51107,"line_start":1547,"line_end":1547,"column_start":5,"column_end":79}},{"value":"/ value is returned inside `Some`. Otherwise, the operation terminates","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51112,"byte_end":51184,"line_start":1548,"line_end":1548,"column_start":5,"column_end":77}},{"value":"/ and returns `None`. No iterator elements are consumed after the `None`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51189,"byte_end":51264,"line_start":1549,"line_end":1549,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51269,"byte_end":51272,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ This is the `Option` equivalent to `fold_results`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51277,"byte_end":51331,"line_start":1551,"line_end":1551,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51336,"byte_end":51339,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51344,"byte_end":51351,"line_start":1553,"line_end":1553,"column_start":5,"column_end":12}},{"value":"/ use std::ops::Add;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51356,"byte_end":51378,"line_start":1554,"line_end":1554,"column_start":5,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51383,"byte_end":51412,"line_start":1555,"line_end":1555,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51417,"byte_end":51420,"line_start":1556,"line_end":1556,"column_start":5,"column_end":8}},{"value":"/ let mut values = vec![Some(1), Some(2), Some(-2)].into_iter();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51425,"byte_end":51491,"line_start":1557,"line_end":1557,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(values.fold_options(5, Add::add), Some(5 + 1 + 2 - 2));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51496,"byte_end":51566,"line_start":1558,"line_end":1558,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51571,"byte_end":51574,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ let mut more_values = vec![Some(2), None, Some(0)].into_iter();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51579,"byte_end":51646,"line_start":1560,"line_end":1560,"column_start":5,"column_end":72}},{"value":"/ assert!(more_values.fold_options(0, Add::add).is_none());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51651,"byte_end":51712,"line_start":1561,"line_end":1561,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(more_values.next().unwrap(), Some(0));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51717,"byte_end":51770,"line_start":1562,"line_end":1562,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":51775,"byte_end":51782,"line_start":1563,"line_end":1563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52602,"byte_end":52607,"line_start":1589,"line_end":1589,"column_start":8,"column_end":13},"name":"fold1","qualname":"::Itertools::fold1","value":"pub fn fold1<F>(Self, F) -> Option<Self::Item> where\nF: FnMut(Self::Item, Self::Item) -> Self::Item, Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Accumulator of the elements in the iterator.","sig":null,"attributes":[{"value":"/ Accumulator of the elements in the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52138,"byte_end":52186,"line_start":1577,"line_end":1577,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52191,"byte_end":52194,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ Like `.fold()`, without a base case. If the iterator is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52199,"byte_end":52258,"line_start":1579,"line_end":1579,"column_start":5,"column_end":64}},{"value":"/ empty, return `None`. With just one element, return it.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52263,"byte_end":52322,"line_start":1580,"line_end":1580,"column_start":5,"column_end":64}},{"value":"/ Otherwise elements are accumulated in sequence using the closure `f`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52327,"byte_end":52400,"line_start":1581,"line_end":1581,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52405,"byte_end":52408,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52413,"byte_end":52420,"line_start":1583,"line_end":1583,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52425,"byte_end":52454,"line_start":1584,"line_end":1584,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52459,"byte_end":52462,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ assert_eq!((0..10).fold1(|x, y| x + y).unwrap_or(0), 45);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52467,"byte_end":52528,"line_start":1586,"line_end":1586,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((0..0).fold1(|x, y| x * y), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52533,"byte_end":52582,"line_start":1587,"line_end":1587,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52587,"byte_end":52594,"line_start":1588,"line_end":1588,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54121,"byte_end":54131,"line_start":1635,"line_end":1635,"column_start":8,"column_end":18},"name":"fold_while","qualname":"::Itertools::fold_while","value":"pub fn fold_while<B, F>(&mut Self, B, F) -> FoldWhile<B> where Self: Sized,\nF: FnMut(B, Self::Item) -> FoldWhile<B>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" An iterator method that applies a function, producing a single, final value.","sig":null,"attributes":[{"value":"/ An iterator method that applies a function, producing a single, final value.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52805,"byte_end":52885,"line_start":1596,"line_end":1596,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52890,"byte_end":52893,"line_start":1597,"line_end":1597,"column_start":5,"column_end":8}},{"value":"/ `fold_while()` is basically equivalent to `fold()` but with additional support for","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52898,"byte_end":52984,"line_start":1598,"line_end":1598,"column_start":5,"column_end":91}},{"value":"/ early exit via short-circuiting.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":52989,"byte_end":53025,"line_start":1599,"line_end":1599,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53030,"byte_end":53033,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53038,"byte_end":53045,"line_start":1601,"line_end":1601,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53050,"byte_end":53079,"line_start":1602,"line_end":1602,"column_start":5,"column_end":34}},{"value":"/ use itertools::FoldWhile::{Continue, Done};","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53084,"byte_end":53131,"line_start":1603,"line_end":1603,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53136,"byte_end":53139,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53144,"byte_end":53194,"line_start":1605,"line_end":1605,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53199,"byte_end":53202,"line_start":1606,"line_end":1606,"column_start":5,"column_end":8}},{"value":"/ let mut result = 0;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53207,"byte_end":53230,"line_start":1607,"line_end":1607,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53235,"byte_end":53238,"line_start":1608,"line_end":1608,"column_start":5,"column_end":8}},{"value":"/ // for loop:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53243,"byte_end":53259,"line_start":1609,"line_end":1609,"column_start":5,"column_end":21}},{"value":"/ for i in &numbers {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53264,"byte_end":53287,"line_start":1610,"line_end":1610,"column_start":5,"column_end":28}},{"value":"/     if *i > 5 {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53292,"byte_end":53311,"line_start":1611,"line_end":1611,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53316,"byte_end":53334,"line_start":1612,"line_end":1612,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53339,"byte_end":53348,"line_start":1613,"line_end":1613,"column_start":5,"column_end":14}},{"value":"/     result = result + i;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53353,"byte_end":53381,"line_start":1614,"line_end":1614,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53386,"byte_end":53391,"line_start":1615,"line_end":1615,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53396,"byte_end":53399,"line_start":1616,"line_end":1616,"column_start":5,"column_end":8}},{"value":"/ // fold:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53404,"byte_end":53416,"line_start":1617,"line_end":1617,"column_start":5,"column_end":17}},{"value":"/ let result2 = numbers.iter().fold(0, |acc, x| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53421,"byte_end":53472,"line_start":1618,"line_end":1618,"column_start":5,"column_end":56}},{"value":"/     if *x > 5 { acc } else { acc + x }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53477,"byte_end":53519,"line_start":1619,"line_end":1619,"column_start":5,"column_end":47}},{"value":"/ });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53524,"byte_end":53531,"line_start":1620,"line_end":1620,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53536,"byte_end":53539,"line_start":1621,"line_end":1621,"column_start":5,"column_end":8}},{"value":"/ // fold_while:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53544,"byte_end":53562,"line_start":1622,"line_end":1622,"column_start":5,"column_end":23}},{"value":"/ let result3 = numbers.iter().fold_while(0, |acc, x| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53567,"byte_end":53624,"line_start":1623,"line_end":1623,"column_start":5,"column_end":62}},{"value":"/     if *x > 5 { Done(acc) } else { Continue(acc + x) }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53629,"byte_end":53687,"line_start":1624,"line_end":1624,"column_start":5,"column_end":63}},{"value":"/ }).into_inner();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53692,"byte_end":53712,"line_start":1625,"line_end":1625,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53717,"byte_end":53720,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ // they're the same","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53725,"byte_end":53748,"line_start":1627,"line_end":1627,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(result, result2);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53753,"byte_end":53785,"line_start":1628,"line_end":1628,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(result2, result3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53790,"byte_end":53823,"line_start":1629,"line_end":1629,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53828,"byte_end":53835,"line_start":1630,"line_end":1630,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53840,"byte_end":53843,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ The big difference between the computations of `result2` and `result3` is that while","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53848,"byte_end":53936,"line_start":1632,"line_end":1632,"column_start":5,"column_end":93}},{"value":"/ `fold()` called the provided closure for every item of the callee iterator,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":53941,"byte_end":54020,"line_start":1633,"line_end":1633,"column_start":5,"column_end":84}},{"value":"/ `fold_while()` actually stopped iterating as soon as it encountered `Fold::Done(_)`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54025,"byte_end":54113,"line_start":1634,"line_end":1634,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55073,"byte_end":55079,"line_start":1663,"line_end":1663,"column_start":8,"column_end":14},"name":"sorted","qualname":"::Itertools::sorted","value":"pub fn sorted(Self) -> Vec<Self::Item> where Self: Sized, Self::Item: Ord","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Collect all iterator elements into a sorted vector in ascending order.","sig":null,"attributes":[{"value":"/ Collect all iterator elements into a sorted vector in ascending order.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54556,"byte_end":54630,"line_start":1649,"line_end":1649,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54635,"byte_end":54638,"line_start":1650,"line_end":1650,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54643,"byte_end":54700,"line_start":1651,"line_end":1651,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_by()` method and returns the sorted vector.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54705,"byte_end":54765,"line_start":1652,"line_end":1652,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54770,"byte_end":54773,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54778,"byte_end":54785,"line_start":1654,"line_end":1654,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54790,"byte_end":54819,"line_start":1655,"line_end":1655,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54824,"byte_end":54827,"line_start":1656,"line_end":1656,"column_start":5,"column_end":8}},{"value":"/ // sort the letters of the text in ascending order","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54832,"byte_end":54886,"line_start":1657,"line_end":1657,"column_start":5,"column_end":59}},{"value":"/ let text = \"bdacfe\";","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54891,"byte_end":54915,"line_start":1658,"line_end":1658,"column_start":5,"column_end":29}},{"value":"/ itertools::assert_equal(text.chars().sorted(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54920,"byte_end":54970,"line_start":1659,"line_end":1659,"column_start":5,"column_end":55}},{"value":"/                         \"abcdef\".chars());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":54975,"byte_end":55021,"line_start":1660,"line_end":1660,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55026,"byte_end":55033,"line_start":1661,"line_end":1661,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55038,"byte_end":55065,"line_start":1662,"line_end":1662,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55975,"byte_end":55984,"line_start":1691,"line_end":1691,"column_start":8,"column_end":17},"name":"sorted_by","qualname":"::Itertools::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> Vec<Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Collect all iterator elements into a sorted vector.","sig":null,"attributes":[{"value":"/ Collect all iterator elements into a sorted vector.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55212,"byte_end":55267,"line_start":1670,"line_end":1670,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55272,"byte_end":55275,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55280,"byte_end":55337,"line_start":1672,"line_end":1672,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_by()` method and returns the sorted vector.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55342,"byte_end":55402,"line_start":1673,"line_end":1673,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55407,"byte_end":55410,"line_start":1674,"line_end":1674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55415,"byte_end":55422,"line_start":1675,"line_end":1675,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55427,"byte_end":55456,"line_start":1676,"line_end":1676,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55461,"byte_end":55464,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ // sort people in descending order by age","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55469,"byte_end":55514,"line_start":1678,"line_end":1678,"column_start":5,"column_end":50}},{"value":"/ let people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55519,"byte_end":55597,"line_start":1679,"line_end":1679,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55602,"byte_end":55605,"line_start":1680,"line_end":1680,"column_start":5,"column_end":8}},{"value":"/ let oldest_people_first = people","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55610,"byte_end":55646,"line_start":1681,"line_end":1681,"column_start":5,"column_end":41}},{"value":"/     .into_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55651,"byte_end":55671,"line_start":1682,"line_end":1682,"column_start":5,"column_end":25}},{"value":"/     .sorted_by(|a, b| Ord::cmp(&b.1, &a.1))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55676,"byte_end":55723,"line_start":1683,"line_end":1683,"column_start":5,"column_end":52}},{"value":"/     .into_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55728,"byte_end":55748,"line_start":1684,"line_end":1684,"column_start":5,"column_end":25}},{"value":"/     .map(|(person, _age)| person);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55753,"byte_end":55791,"line_start":1685,"line_end":1685,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55796,"byte_end":55799,"line_start":1686,"line_end":1686,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(oldest_people_first,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55804,"byte_end":55852,"line_start":1687,"line_end":1687,"column_start":5,"column_end":53}},{"value":"/                         vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55857,"byte_end":55923,"line_start":1688,"line_end":1688,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55928,"byte_end":55935,"line_start":1689,"line_end":1689,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":55940,"byte_end":55967,"line_start":1690,"line_end":1690,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56967,"byte_end":56980,"line_start":1722,"line_end":1722,"column_start":8,"column_end":21},"name":"sorted_by_key","qualname":"::Itertools::sorted_by_key","value":"pub fn sorted_by_key<K, F>(Self, F) -> Vec<Self::Item> where Self: Sized,\nK: Ord, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Collect all iterator elements into a sorted vector.","sig":null,"attributes":[{"value":"/ Collect all iterator elements into a sorted vector.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56215,"byte_end":56270,"line_start":1701,"line_end":1701,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56275,"byte_end":56278,"line_start":1702,"line_end":1702,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56283,"byte_end":56340,"line_start":1703,"line_end":1703,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_by_key()` method and returns the sorted vector.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56345,"byte_end":56409,"line_start":1704,"line_end":1704,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56414,"byte_end":56417,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56422,"byte_end":56429,"line_start":1706,"line_end":1706,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56434,"byte_end":56463,"line_start":1707,"line_end":1707,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56468,"byte_end":56471,"line_start":1708,"line_end":1708,"column_start":5,"column_end":8}},{"value":"/ // sort people in descending order by age","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56476,"byte_end":56521,"line_start":1709,"line_end":1709,"column_start":5,"column_end":50}},{"value":"/ let people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56526,"byte_end":56604,"line_start":1710,"line_end":1710,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56609,"byte_end":56612,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ let oldest_people_first = people","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56617,"byte_end":56653,"line_start":1712,"line_end":1712,"column_start":5,"column_end":41}},{"value":"/     .into_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56658,"byte_end":56678,"line_start":1713,"line_end":1713,"column_start":5,"column_end":25}},{"value":"/     .sorted_by_key(|x| -x.1)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56683,"byte_end":56715,"line_start":1714,"line_end":1714,"column_start":5,"column_end":37}},{"value":"/     .into_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56720,"byte_end":56740,"line_start":1715,"line_end":1715,"column_start":5,"column_end":25}},{"value":"/     .map(|(person, _age)| person);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56745,"byte_end":56783,"line_start":1716,"line_end":1716,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56788,"byte_end":56791,"line_start":1717,"line_end":1717,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(oldest_people_first,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56796,"byte_end":56844,"line_start":1718,"line_end":1718,"column_start":5,"column_end":53}},{"value":"/                         vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56849,"byte_end":56915,"line_start":1719,"line_end":1719,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56920,"byte_end":56927,"line_start":1720,"line_end":1720,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":56932,"byte_end":56959,"line_start":1721,"line_end":1721,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57925,"byte_end":57938,"line_start":1754,"line_end":1754,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::Itertools::partition_map","value":"pub fn partition_map<A, B, F, L, R>(Self, F) -> (A, B) where Self: Sized,\nF: Fn(Self::Item) -> Either<L, R>, A: Default + Extend<L>, B: Default +\nExtend<R>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Collect all iterator elements into one of two\n partitions. Unlike `Iterator::partition`, each partition may\n have a distinct type.","sig":null,"attributes":[{"value":"/ Collect all iterator elements into one of two","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57216,"byte_end":57265,"line_start":1733,"line_end":1733,"column_start":5,"column_end":54}},{"value":"/ partitions. Unlike `Iterator::partition`, each partition may","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57270,"byte_end":57334,"line_start":1734,"line_end":1734,"column_start":5,"column_end":69}},{"value":"/ have a distinct type.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57339,"byte_end":57364,"line_start":1735,"line_end":1735,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57369,"byte_end":57372,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57377,"byte_end":57384,"line_start":1737,"line_end":1737,"column_start":5,"column_end":12}},{"value":"/ use itertools::{Itertools, Either};","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57389,"byte_end":57428,"line_start":1738,"line_end":1738,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57433,"byte_end":57436,"line_start":1739,"line_end":1739,"column_start":5,"column_end":8}},{"value":"/ let successes_and_failures = vec![Ok(1), Err(false), Err(true), Ok(2)];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57441,"byte_end":57516,"line_start":1740,"line_end":1740,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57521,"byte_end":57524,"line_start":1741,"line_end":1741,"column_start":5,"column_end":8}},{"value":"/ let (successes, failures): (Vec<_>, Vec<_>) = successes_and_failures","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57529,"byte_end":57601,"line_start":1742,"line_end":1742,"column_start":5,"column_end":77}},{"value":"/     .into_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57606,"byte_end":57626,"line_start":1743,"line_end":1743,"column_start":5,"column_end":25}},{"value":"/     .partition_map(|r| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57631,"byte_end":57659,"line_start":1744,"line_end":1744,"column_start":5,"column_end":33}},{"value":"/         match r {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57664,"byte_end":57685,"line_start":1745,"line_end":1745,"column_start":5,"column_end":26}},{"value":"/             Ok(v) => Either::Left(v),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57690,"byte_end":57731,"line_start":1746,"line_end":1746,"column_start":5,"column_end":46}},{"value":"/             Err(v) => Either::Right(v),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57736,"byte_end":57779,"line_start":1747,"line_end":1747,"column_start":5,"column_end":48}},{"value":"/         }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57784,"byte_end":57797,"line_start":1748,"line_end":1748,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57802,"byte_end":57813,"line_start":1749,"line_end":1749,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57818,"byte_end":57821,"line_start":1750,"line_end":1750,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(successes, [1, 2]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57826,"byte_end":57860,"line_start":1751,"line_end":1751,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(failures, [false, true]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57865,"byte_end":57905,"line_start":1752,"line_end":1752,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":57910,"byte_end":57917,"line_start":1753,"line_end":1753,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59745,"byte_end":59751,"line_start":1808,"line_end":1808,"column_start":8,"column_end":14},"name":"minmax","qualname":"::Itertools::minmax","value":"pub fn minmax(Self) -> MinMaxResult<Self::Item> where Self: Sized,\nSelf::Item: PartialOrd","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return the minimum and maximum elements in the iterator.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum elements in the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":58453,"byte_end":58513,"line_start":1773,"line_end":1773,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":58518,"byte_end":58521,"line_start":1774,"line_end":1774,"column_start":5,"column_end":8}},{"value":"/ The return type `MinMaxResult` is an enum of three variants:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":58526,"byte_end":58590,"line_start":1775,"line_end":1775,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":58595,"byte_end":58598,"line_start":1776,"line_end":1776,"column_start":5,"column_end":8}},{"value":"/ - `NoElements` if the iterator is empty.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":58603,"byte_end":58647,"line_start":1777,"line_end":1777,"column_start":5,"column_end":49}},{"value":"/ - `OneElement(x)` if the iterator has exactly one element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":58652,"byte_end":58714,"line_start":1778,"line_end":1778,"column_start":5,"column_end":67}},{"value":"/ - `MinMax(x, y)` is returned otherwise, where `x <= y`. Two","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":58719,"byte_end":58782,"line_start":1779,"line_end":1779,"column_start":5,"column_end":68}},{"value":"/    values are equal if and only if there is more than one","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":58787,"byte_end":58848,"line_start":1780,"line_end":1780,"column_start":5,"column_end":66}},{"value":"/    element in the iterator and all elements are equal.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":58853,"byte_end":58911,"line_start":1781,"line_end":1781,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":58916,"byte_end":58919,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ On an iterator of length `n`, `minmax` does `1.5 * n` comparisons,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":58924,"byte_end":58994,"line_start":1783,"line_end":1783,"column_start":5,"column_end":75}},{"value":"/ and so is faster than calling `min` and `max` separately which does","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":58999,"byte_end":59070,"line_start":1784,"line_end":1784,"column_start":5,"column_end":76}},{"value":"/ `2 * n` comparisons.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59075,"byte_end":59099,"line_start":1785,"line_end":1785,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59104,"byte_end":59107,"line_start":1786,"line_end":1786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59112,"byte_end":59126,"line_start":1787,"line_end":1787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59131,"byte_end":59134,"line_start":1788,"line_end":1788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59139,"byte_end":59146,"line_start":1789,"line_end":1789,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59151,"byte_end":59180,"line_start":1790,"line_end":1790,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{NoElements, OneElement, MinMax};","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59185,"byte_end":59251,"line_start":1791,"line_end":1791,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59256,"byte_end":59259,"line_start":1792,"line_end":1792,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59264,"byte_end":59289,"line_start":1793,"line_end":1793,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().minmax(), NoElements);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59294,"byte_end":59340,"line_start":1794,"line_end":1794,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59345,"byte_end":59348,"line_start":1795,"line_end":1795,"column_start":5,"column_end":8}},{"value":"/ let a = [1];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59353,"byte_end":59369,"line_start":1796,"line_end":1796,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.iter().minmax(), OneElement(&1));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59374,"byte_end":59424,"line_start":1797,"line_end":1797,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59429,"byte_end":59432,"line_start":1798,"line_end":1798,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 4, 5];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59437,"byte_end":59465,"line_start":1799,"line_end":1799,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.iter().minmax(), MinMax(&1, &5));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59470,"byte_end":59520,"line_start":1800,"line_end":1800,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59525,"byte_end":59528,"line_start":1801,"line_end":1801,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 1, 1, 1];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59533,"byte_end":59558,"line_start":1802,"line_end":1802,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().minmax(), MinMax(&1, &1));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59563,"byte_end":59613,"line_start":1803,"line_end":1803,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59618,"byte_end":59625,"line_start":1804,"line_end":1804,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59630,"byte_end":59633,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ The elements can be floats but no particular result is guaranteed","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59638,"byte_end":59707,"line_start":1806,"line_end":1806,"column_start":5,"column_end":74}},{"value":"/ if an element is NaN.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59712,"byte_end":59737,"line_start":1807,"line_end":1807,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60447,"byte_end":60460,"line_start":1825,"line_end":1825,"column_start":8,"column_end":21},"name":"minmax_by_key","qualname":"::Itertools::minmax_by_key","value":"pub fn minmax_by_key<K, F>(Self, F) -> MinMaxResult<Self::Item> where\nSelf: Sized, K: PartialOrd, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified function.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum element of an iterator, as determined by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59915,"byte_end":59990,"line_start":1814,"line_end":1814,"column_start":5,"column_end":80}},{"value":"/ the specified function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":59995,"byte_end":60022,"line_start":1815,"line_end":1815,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60027,"byte_end":60030,"line_start":1816,"line_end":1816,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of `MinMaxResult` like for `minmax()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60035,"byte_end":60107,"line_start":1817,"line_end":1817,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60112,"byte_end":60115,"line_start":1818,"line_end":1818,"column_start":5,"column_end":8}},{"value":"/ For the minimum, the first minimal element is returned.  For the maximum,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60120,"byte_end":60197,"line_start":1819,"line_end":1819,"column_start":5,"column_end":82}},{"value":"/ the last maximal element wins.  This matches the behavior of the standard","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60202,"byte_end":60279,"line_start":1820,"line_end":1820,"column_start":5,"column_end":82}},{"value":"/ `Iterator::min()` and `Iterator::max()` methods.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60284,"byte_end":60336,"line_start":1821,"line_end":1821,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60341,"byte_end":60344,"line_start":1822,"line_end":1822,"column_start":5,"column_end":8}},{"value":"/ The keys can be floats but no particular result is guaranteed","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60349,"byte_end":60414,"line_start":1823,"line_end":1823,"column_start":5,"column_end":70}},{"value":"/ if a key is NaN.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60419,"byte_end":60439,"line_start":1824,"line_end":1824,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61098,"byte_end":61107,"line_start":1839,"line_end":1839,"column_start":8,"column_end":17},"name":"minmax_by","qualname":"::Itertools::minmax_by","value":"pub fn minmax_by<F>(Self, F) -> MinMaxResult<Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified comparison function.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum element of an iterator, as determined by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60658,"byte_end":60733,"line_start":1831,"line_end":1831,"column_start":5,"column_end":80}},{"value":"/ the specified comparison function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60738,"byte_end":60776,"line_start":1832,"line_end":1832,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60781,"byte_end":60784,"line_start":1833,"line_end":1833,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of `MinMaxResult` like for `minmax()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60789,"byte_end":60861,"line_start":1834,"line_end":1834,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60866,"byte_end":60869,"line_start":1835,"line_end":1835,"column_start":5,"column_end":8}},{"value":"/ For the minimum, the first minimal element is returned.  For the maximum,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60874,"byte_end":60951,"line_start":1836,"line_end":1836,"column_start":5,"column_end":82}},{"value":"/ the last maximal element wins.  This matches the behavior of the standard","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":60956,"byte_end":61033,"line_start":1837,"line_end":1837,"column_start":5,"column_end":82}},{"value":"/ `Iterator::min()` and `Iterator::max()` methods.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61038,"byte_end":61090,"line_start":1838,"line_end":1838,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1399},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61836,"byte_end":61841,"line_start":1863,"line_end":1863,"column_start":8,"column_end":13},"name":"equal","qualname":"::equal","value":"pub fn equal<I, J>(I, J) -> bool where I: IntoIterator, J: IntoIterator,\nI::Item: PartialEq<J::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if both iterables produce equal sequences\n (elements pairwise equal and sequences of the same length),\n `false` otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if both iterables produce equal sequences","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61439,"byte_end":61498,"line_start":1852,"line_end":1852,"column_start":1,"column_end":60}},{"value":"/ (elements pairwise equal and sequences of the same length),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61499,"byte_end":61562,"line_start":1853,"line_end":1853,"column_start":1,"column_end":64}},{"value":"/ `false` otherwise.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61563,"byte_end":61585,"line_start":1854,"line_end":1854,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61586,"byte_end":61589,"line_start":1855,"line_end":1855,"column_start":1,"column_end":4}},{"value":"/ This is an `IntoIterator` enabled function that is similar to the standard","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61590,"byte_end":61668,"line_start":1856,"line_end":1856,"column_start":1,"column_end":79}},{"value":"/ library method `Iterator::eq`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61669,"byte_end":61703,"line_start":1857,"line_end":1857,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61704,"byte_end":61707,"line_start":1858,"line_end":1858,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61708,"byte_end":61715,"line_start":1859,"line_end":1859,"column_start":1,"column_end":8}},{"value":"/ assert!(itertools::equal(vec![1, 2, 3], 1..4));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61716,"byte_end":61767,"line_start":1860,"line_end":1860,"column_start":1,"column_end":52}},{"value":"/ assert!(!itertools::equal(&[0, 0], &[0, 0, 0]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61768,"byte_end":61820,"line_start":1861,"line_end":1861,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61821,"byte_end":61828,"line_start":1862,"line_end":1862,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1402},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":62661,"byte_end":62673,"line_start":1891,"line_end":1891,"column_start":8,"column_end":20},"name":"assert_equal","qualname":"::assert_equal","value":"pub fn assert_equal<I, J>(I, J) where I: IntoIterator, J: IntoIterator,\nI::Item: fmt::Debug + PartialEq<J::Item>, J::Item: fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Assert that two iterables produce equal sequences, with the same\n semantics as *equal(a, b)*.","sig":null,"attributes":[{"value":"/ Assert that two iterables produce equal sequences, with the same","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":62279,"byte_end":62347,"line_start":1881,"line_end":1881,"column_start":1,"column_end":69}},{"value":"/ semantics as *equal(a, b)*.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":62348,"byte_end":62379,"line_start":1882,"line_end":1882,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":62380,"byte_end":62383,"line_start":1883,"line_end":1883,"column_start":1,"column_end":4}},{"value":"/ **Panics** on assertion failure with a message that shows the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":62384,"byte_end":62449,"line_start":1884,"line_end":1884,"column_start":1,"column_end":66}},{"value":"/ two iteration elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":62450,"byte_end":62477,"line_start":1885,"line_end":1885,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":62478,"byte_end":62481,"line_start":1886,"line_end":1886,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":62482,"byte_end":62495,"line_start":1887,"line_end":1887,"column_start":1,"column_end":14}},{"value":"/ assert_equal(\"exceed\".split('c'), \"excess\".split('c'));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":62496,"byte_end":62555,"line_start":1888,"line_end":1888,"column_start":1,"column_end":60}},{"value":"/ // ^PANIC: panicked at 'Failed assertion Some(\"eed\") == Some(\"ess\") for iteration 1',","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":62556,"byte_end":62645,"line_start":1889,"line_end":1889,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":62646,"byte_end":62653,"line_start":1890,"line_end":1890,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1405},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63900,"byte_end":63909,"line_start":1933,"line_end":1933,"column_start":8,"column_end":17},"name":"partition","qualname":"::partition","value":"pub fn partition<'a, A: 'a, I, F>(I, F) -> usize where I: IntoIterator<Item =\n&'a mut A>, I::IntoIter: DoubleEndedIterator, F: FnMut(&A) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Partition a sequence using predicate `pred` so that elements\n that map to `true` are placed before elements which map to `false`.","sig":null,"attributes":[{"value":"/ Partition a sequence using predicate `pred` so that elements","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63361,"byte_end":63425,"line_start":1916,"line_end":1916,"column_start":1,"column_end":65}},{"value":"/ that map to `true` are placed before elements which map to `false`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63426,"byte_end":63497,"line_start":1917,"line_end":1917,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63498,"byte_end":63501,"line_start":1918,"line_end":1918,"column_start":1,"column_end":4}},{"value":"/ The order within the partitions is arbitrary.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63502,"byte_end":63551,"line_start":1919,"line_end":1919,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63552,"byte_end":63555,"line_start":1920,"line_end":1920,"column_start":1,"column_end":4}},{"value":"/ Return the index of the split point.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63556,"byte_end":63596,"line_start":1921,"line_end":1921,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63597,"byte_end":63600,"line_start":1922,"line_end":1922,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63601,"byte_end":63608,"line_start":1923,"line_end":1923,"column_start":1,"column_end":8}},{"value":"/ use itertools::partition;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63609,"byte_end":63638,"line_start":1924,"line_end":1924,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63639,"byte_end":63642,"line_start":1925,"line_end":1925,"column_start":1,"column_end":4}},{"value":"/ # // use repeated numbers to not promise any ordering","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63643,"byte_end":63700,"line_start":1926,"line_end":1926,"column_start":1,"column_end":58}},{"value":"/ let mut data = [7, 1, 1, 7, 1, 1, 7];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63701,"byte_end":63742,"line_start":1927,"line_end":1927,"column_start":1,"column_end":42}},{"value":"/ let split_index = partition(&mut data, |elt| *elt >= 3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63743,"byte_end":63803,"line_start":1928,"line_end":1928,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63804,"byte_end":63807,"line_start":1929,"line_end":1929,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(data, [7, 7, 7, 1, 1, 1, 1]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63808,"byte_end":63852,"line_start":1930,"line_end":1930,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(split_index, 3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63853,"byte_end":63884,"line_start":1931,"line_end":1931,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":63885,"byte_end":63892,"line_start":1932,"line_end":1932,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2289},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":64830,"byte_end":64838,"line_start":1963,"line_end":1963,"column_start":5,"column_end":13},"name":"Continue","qualname":"::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[{"value":"/ Continue folding with this value","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":64789,"byte_end":64825,"line_start":1962,"line_end":1962,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2292},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":64899,"byte_end":64903,"line_start":1965,"line_end":1965,"column_start":5,"column_end":9},"name":"Done","qualname":"::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[{"value":"/ Fold is complete and will return this value","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":64847,"byte_end":64894,"line_start":1964,"line_end":1964,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2287},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":64770,"byte_end":64779,"line_start":1961,"line_end":1961,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::FoldWhile","value":"pub enum FoldWhile<T> {\n\n    /// Continue folding with this value\n    Continue(T),\n\n    /// Fold is complete and will return this value\n    Done(T),\n}","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2292}],"decl_id":null,"docs":" An enum used for controlling the execution of `.fold_while()`.","sig":null,"attributes":[{"value":"/ An enum used for controlling the execution of `.fold_while()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":64572,"byte_end":64638,"line_start":1957,"line_end":1957,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":64639,"byte_end":64642,"line_start":1958,"line_end":1958,"column_start":1,"column_end":4}},{"value":"/ See [`.fold_while()`](trait.Itertools.html#method.fold_while) for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":64643,"byte_end":64730,"line_start":1959,"line_end":1959,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":64995,"byte_end":65005,"line_start":1970,"line_end":1970,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FoldWhile<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value in the continue or done.\n","sig":null,"attributes":[{"value":"/ Return the value in the continue or done.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":64938,"byte_end":64983,"line_start":1969,"line_end":1969,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":65198,"byte_end":65205,"line_start":1977,"line_end":1977,"column_start":12,"column_end":19},"name":"is_done","qualname":"<FoldWhile<T>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if `self` is `Done`, false if it is `Continue`.\n","sig":null,"attributes":[{"value":"/ Return true if `self` is `Done`, false if it is `Continue`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":65123,"byte_end":65186,"line_start":1976,"line_end":1976,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":100080,"byte_end":100092,"line_start":49,"line_end":49,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":102198,"byte_end":102214,"line_start":116,"line_end":116,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":102862,"byte_end":102874,"line_start":145,"line_end":145,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":67412,"byte_end":67422,"line_start":64,"line_end":64,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":68833,"byte_end":68851,"line_start":120,"line_end":120,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71101,"byte_end":71108,"line_start":205,"line_end":205,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71727,"byte_end":71734,"line_start":230,"line_end":230,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":73581,"byte_end":73588,"line_start":303,"line_end":303,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":76020,"byte_end":76028,"line_start":378,"line_end":378,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":76256,"byte_end":76264,"line_start":387,"line_end":387,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":77304,"byte_end":77308,"line_start":431,"line_end":431,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":77906,"byte_end":77910,"line_start":458,"line_end":458,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":78126,"byte_end":78135,"line_start":473,"line_end":473,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":78367,"byte_end":78376,"line_start":484,"line_end":484,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":79879,"byte_end":79884,"line_start":534,"line_end":534,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80121,"byte_end":80126,"line_start":545,"line_end":545,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80932,"byte_end":80937,"line_start":577,"line_end":577,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":81775,"byte_end":81782,"line_start":608,"line_end":608,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":82307,"byte_end":82314,"line_start":630,"line_end":630,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":82582,"byte_end":82589,"line_start":642,"line_end":642,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":83049,"byte_end":83061,"line_start":666,"line_end":666,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":84295,"byte_end":84303,"line_start":708,"line_end":708,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":84472,"byte_end":84480,"line_start":717,"line_end":717,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":84867,"byte_end":84875,"line_start":737,"line_end":737,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":85508,"byte_end":85513,"line_start":762,"line_end":762,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":85877,"byte_end":85882,"line_start":783,"line_end":783,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":86015,"byte_end":86020,"line_start":790,"line_end":790,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":87229,"byte_end":87241,"line_start":834,"line_end":834,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":87578,"byte_end":87590,"line_start":847,"line_end":847,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":88689,"byte_end":88698,"line_start":889,"line_end":889,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":90007,"byte_end":90024,"line_start":940,"line_end":940,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":90276,"byte_end":90293,"line_start":956,"line_end":956,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":90411,"byte_end":90428,"line_start":962,"line_end":962,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":93156,"byte_end":93163,"line_start":1056,"line_end":1056,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":94737,"byte_end":94747,"line_start":1112,"line_end":1112,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":96038,"byte_end":96047,"line_start":1163,"line_end":1163,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":96536,"byte_end":96545,"line_start":1185,"line_end":1185,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":97383,"byte_end":97389,"line_start":1217,"line_end":1217,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":98255,"byte_end":98261,"line_start":1253,"line_end":1253,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":98367,"byte_end":98373,"line_start":1259,"line_end":1259,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/cons_tuples_impl.rs","byte_start":112786,"byte_end":112796,"line_start":51,"line_end":51,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":113621,"byte_end":113633,"line_start":16,"line_end":16,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":114296,"byte_end":114308,"line_start":47,"line_end":47,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":115987,"byte_end":115997,"line_start":109,"line_end":109,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":116933,"byte_end":116943,"line_start":155,"line_end":155,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":121188,"byte_end":121198,"line_start":49,"line_end":49,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":121947,"byte_end":121953,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":123351,"byte_end":123352,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":123640,"byte_end":123650,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":123846,"byte_end":123856,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":124898,"byte_end":124908,"line_start":76,"line_end":76,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":131686,"byte_end":131696,"line_start":262,"line_end":262,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":133508,"byte_end":133515,"line_start":319,"line_end":319,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":134722,"byte_end":134728,"line_start":365,"line_end":365,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":135638,"byte_end":135643,"line_start":401,"line_end":401,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":135814,"byte_end":135819,"line_start":410,"line_end":410,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":137651,"byte_end":137661,"line_start":474,"line_end":474,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":138647,"byte_end":138653,"line_start":516,"line_end":516,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":139412,"byte_end":139417,"line_start":549,"line_end":549,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":139576,"byte_end":139581,"line_start":558,"line_end":558,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/intersperse.rs","byte_start":140662,"byte_end":140673,"line_start":34,"line_end":34,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":141981,"byte_end":141989,"line_start":31,"line_end":31,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":142885,"byte_end":142893,"line_start":62,"line_end":62,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":145334,"byte_end":145340,"line_start":144,"line_end":144,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":145509,"byte_end":145515,"line_start":153,"line_end":153,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":147391,"byte_end":147399,"line_start":214,"line_end":214,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/merge_join.rs","byte_start":149239,"byte_end":149250,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151123,"byte_end":151135,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":155166,"byte_end":155175,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":155328,"byte_end":155337,"line_start":39,"line_end":39,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":155981,"byte_end":155990,"line_start":61,"line_end":61,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":156457,"byte_end":156466,"line_start":80,"line_end":80,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":156890,"byte_end":156899,"line_start":100,"line_end":100,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":157724,"byte_end":157732,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":158495,"byte_end":158503,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":158960,"byte_end":158968,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159864,"byte_end":159872,"line_start":23,"line_end":23,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":160192,"byte_end":160199,"line_start":38,"line_end":38,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":160616,"byte_end":160624,"line_start":57,"line_end":57,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":161579,"byte_end":161595,"line_start":97,"line_end":97,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":163859,"byte_end":163873,"line_start":13,"line_end":13,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166599,"byte_end":166607,"line_start":26,"line_end":26,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":167109,"byte_end":167117,"line_start":47,"line_end":47,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":169116,"byte_end":169122,"line_start":52,"line_end":52,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":169257,"byte_end":169263,"line_start":59,"line_end":59,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":169822,"byte_end":169828,"line_start":78,"line_end":78,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":170786,"byte_end":170793,"line_start":22,"line_end":22,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":171183,"byte_end":171190,"line_start":42,"line_end":42,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":171340,"byte_end":171347,"line_start":51,"line_end":51,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174245,"byte_end":174255,"line_start":12,"line_end":12,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175029,"byte_end":175039,"line_start":45,"line_end":45,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176708,"byte_end":176714,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177101,"byte_end":177107,"line_start":121,"line_end":121,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177796,"byte_end":177803,"line_start":150,"line_end":150,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177906,"byte_end":177913,"line_start":156,"line_end":156,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tee.rs","byte_start":179593,"byte_end":179596,"line_start":35,"line_end":35,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tee.rs","byte_start":180693,"byte_end":180696,"line_start":73,"line_end":73,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":181104,"byte_end":181115,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":181288,"byte_end":181299,"line_start":27,"line_end":27,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":181965,"byte_end":181976,"line_start":55,"line_end":55,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":182625,"byte_end":182631,"line_start":83,"line_end":83,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":182843,"byte_end":182849,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":184439,"byte_end":184451,"line_start":151,"line_end":151,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":188255,"byte_end":188263,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":189061,"byte_end":189069,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":189908,"byte_end":189914,"line_start":83,"line_end":83,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":191185,"byte_end":191191,"line_start":127,"line_end":127,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192723,"byte_end":192731,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":193010,"byte_end":193022,"line_start":54,"line_end":54,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":194258,"byte_end":194270,"line_start":88,"line_end":88,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":195181,"byte_end":195186,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":195764,"byte_end":195769,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":196684,"byte_end":196694,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":197316,"byte_end":197326,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":198147,"byte_end":198157,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61414,"byte_end":61415,"line_start":1850,"line_end":1850,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":64919,"byte_end":64928,"line_start":1968,"line_end":1968,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1412},{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":3310,"byte_end":3314,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":461}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":100080,"byte_end":100092,"line_start":49,"line_end":49,"column_start":9,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":102198,"byte_end":102214,"line_start":116,"line_end":116,"column_start":9,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/multi_product.rs","byte_start":102862,"byte_end":102874,"line_start":145,"line_end":145,"column_start":22,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1414},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":67412,"byte_end":67422,"line_start":64,"line_end":64,"column_start":25,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1429},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":68833,"byte_end":68851,"line_start":120,"line_end":120,"column_start":25,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1443},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71101,"byte_end":71108,"line_start":205,"line_end":205,"column_start":9,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":71727,"byte_end":71734,"line_start":230,"line_end":230,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":73581,"byte_end":73588,"line_start":303,"line_end":303,"column_start":25,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1467},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":76020,"byte_end":76028,"line_start":378,"line_end":378,"column_start":27,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":76256,"byte_end":76264,"line_start":387,"line_end":387,"column_start":28,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":77304,"byte_end":77308,"line_start":431,"line_end":431,"column_start":22,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":77906,"byte_end":77910,"line_start":458,"line_end":458,"column_start":31,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":78126,"byte_end":78135,"line_start":473,"line_end":473,"column_start":22,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":78367,"byte_end":78376,"line_start":484,"line_end":484,"column_start":12,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":79879,"byte_end":79884,"line_start":534,"line_end":534,"column_start":22,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80121,"byte_end":80126,"line_start":545,"line_end":545,"column_start":27,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":80932,"byte_end":80937,"line_start":577,"line_end":577,"column_start":25,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":81775,"byte_end":81782,"line_start":608,"line_end":608,"column_start":30,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":82307,"byte_end":82314,"line_start":630,"line_end":630,"column_start":25,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":82582,"byte_end":82589,"line_start":642,"line_end":642,"column_start":28,"column_end":35},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":83049,"byte_end":83061,"line_start":666,"line_end":666,"column_start":9,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":84295,"byte_end":84303,"line_start":708,"line_end":708,"column_start":36,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":280},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":84472,"byte_end":84480,"line_start":717,"line_end":717,"column_start":27,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":280},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":84867,"byte_end":84875,"line_start":737,"line_end":737,"column_start":25,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":280},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":85508,"byte_end":85513,"line_start":762,"line_end":762,"column_start":26,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":85877,"byte_end":85882,"line_start":783,"line_end":783,"column_start":24,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":86015,"byte_end":86020,"line_start":790,"line_end":790,"column_start":22,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":87229,"byte_end":87241,"line_start":834,"line_end":834,"column_start":31,"column_end":43},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":87578,"byte_end":87590,"line_start":847,"line_end":847,"column_start":29,"column_end":41},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":88689,"byte_end":88698,"line_start":889,"line_end":889,"column_start":25,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1517},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":89568,"byte_end":89573,"line_start":923,"line_end":923,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":90007,"byte_end":90024,"line_start":940,"line_end":940,"column_start":25,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":90276,"byte_end":90293,"line_start":956,"line_end":956,"column_start":21,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1536},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":90411,"byte_end":90428,"line_start":962,"line_end":962,"column_start":32,"column_end":49},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1536},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":93156,"byte_end":93163,"line_start":1056,"line_end":1056,"column_start":25,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1617},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":94737,"byte_end":94747,"line_start":1112,"line_end":1112,"column_start":34,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":96038,"byte_end":96047,"line_start":1163,"line_end":1163,"column_start":25,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":96536,"byte_end":96545,"line_start":1185,"line_end":1185,"column_start":36,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":97383,"byte_end":97389,"line_start":1217,"line_end":1217,"column_start":25,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":431},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":98255,"byte_end":98261,"line_start":1253,"line_end":1253,"column_start":34,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":431},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/adaptors/mod.rs","byte_start":98367,"byte_end":98373,"line_start":1259,"line_end":1259,"column_start":36,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":431},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/cons_tuples_impl.rs","byte_start":112786,"byte_end":112796,"line_start":51,"line_end":51,"column_start":22,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":518},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":113621,"byte_end":113633,"line_start":16,"line_end":16,"column_start":24,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":532},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":114296,"byte_end":114308,"line_start":47,"line_end":47,"column_start":22,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":532},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":115987,"byte_end":115997,"line_start":109,"line_end":109,"column_start":9,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/combinations.rs","byte_start":116933,"byte_end":116943,"line_start":155,"line_end":155,"column_start":26,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1817},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":121188,"byte_end":121198,"line_start":49,"line_end":49,"column_start":33,"column_end":43},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/format.rs","byte_start":121947,"byte_end":121953,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":123351,"byte_end":123352,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":621},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":123640,"byte_end":123650,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":123846,"byte_end":123856,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":624},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":124898,"byte_end":124908,"line_start":76,"line_end":76,"column_start":15,"column_end":25},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":131686,"byte_end":131696,"line_start":262,"line_end":262,"column_start":15,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":133508,"byte_end":133515,"line_start":319,"line_end":319,"column_start":15,"column_end":22},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":134722,"byte_end":134728,"line_start":365,"line_end":365,"column_start":32,"column_end":38},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":693},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":135638,"byte_end":135643,"line_start":401,"line_end":401,"column_start":28,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":707},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":135814,"byte_end":135819,"line_start":410,"line_end":410,"column_start":32,"column_end":37},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":707},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":137651,"byte_end":137661,"line_start":474,"line_end":474,"column_start":9,"column_end":19},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":138647,"byte_end":138653,"line_start":516,"line_end":516,"column_start":26,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":744},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":139412,"byte_end":139417,"line_start":549,"line_end":549,"column_start":22,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":754},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/groupbylazy.rs","byte_start":139576,"byte_end":139581,"line_start":558,"line_end":558,"column_start":26,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":754},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/intersperse.rs","byte_start":140662,"byte_end":140673,"line_start":34,"line_end":34,"column_start":22,"column_end":33},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1872},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":141981,"byte_end":141989,"line_start":31,"line_end":31,"column_start":9,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":142885,"byte_end":142893,"line_start":62,"line_end":62,"column_start":19,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":145334,"byte_end":145340,"line_start":144,"line_end":144,"column_start":19,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":803},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":145509,"byte_end":145515,"line_start":153,"line_end":153,"column_start":22,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":803},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/kmerge_impl.rs","byte_start":147391,"byte_end":147399,"line_start":214,"line_end":214,"column_start":25,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":820},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/merge_join.rs","byte_start":149239,"byte_end":149250,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":849},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/minmax.rs","byte_start":151123,"byte_end":151135,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":155166,"byte_end":155175,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":155328,"byte_end":155337,"line_start":39,"line_end":39,"column_start":19,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":155981,"byte_end":155990,"line_start":61,"line_end":61,"column_start":25,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1905},"to":{"krate":0,"index":919}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":156457,"byte_end":156466,"line_start":80,"line_end":80,"column_start":22,"column_end":31},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1905},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/multipeek_impl.rs","byte_start":156890,"byte_end":156899,"line_start":100,"line_end":100,"column_start":31,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1905},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":157724,"byte_end":157732,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":158495,"byte_end":158503,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/pad_tail.rs","byte_start":158960,"byte_end":158968,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159550,"byte_end":159558,"line_start":15,"line_end":15,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":5536},"to":{"krate":0,"index":919}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":159864,"byte_end":159872,"line_start":23,"line_end":23,"column_start":25,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":2,"index":33757},"to":{"krate":0,"index":919}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":160192,"byte_end":160199,"line_start":38,"line_end":38,"column_start":25,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1457},"to":{"krate":0,"index":919}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":160616,"byte_end":160624,"line_start":57,"line_end":57,"column_start":25,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1972},"to":{"krate":0,"index":919}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/peeking_take_while.rs","byte_start":161579,"byte_end":161595,"line_start":97,"line_end":97,"column_start":29,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/process_results_impl.rs","byte_start":163859,"byte_end":163873,"line_start":13,"line_end":13,"column_start":32,"column_end":46},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":952},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":166599,"byte_end":166607,"line_start":26,"line_end":26,"column_start":19,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/put_back_n_impl.rs","byte_start":167109,"byte_end":167117,"line_start":47,"line_end":47,"column_start":32,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1972},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":169116,"byte_end":169122,"line_start":52,"line_end":52,"column_start":19,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":169257,"byte_end":169263,"line_start":59,"line_end":59,"column_start":25,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/rciter_impl.rs","byte_start":169822,"byte_end":169828,"line_start":78,"line_end":78,"column_start":33,"column_end":39},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":170786,"byte_end":170793,"line_start":22,"line_end":22,"column_start":22,"column_end":29},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1013},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":171183,"byte_end":171190,"line_start":42,"line_end":42,"column_start":33,"column_end":40},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1013},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/repeatn.rs","byte_start":171340,"byte_end":171347,"line_start":51,"line_end":51,"column_start":31,"column_end":38},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1013},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":174245,"byte_end":174255,"line_start":12,"line_end":12,"column_start":24,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":175029,"byte_end":175039,"line_start":45,"line_end":45,"column_start":25,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":176708,"byte_end":176714,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1984},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177101,"byte_end":177107,"line_start":121,"line_end":121,"column_start":29,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1984},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177796,"byte_end":177803,"line_start":150,"line_end":150,"column_start":28,"column_end":35},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1993},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/sources.rs","byte_start":177906,"byte_end":177913,"line_start":156,"line_end":156,"column_start":26,"column_end":33},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1993},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tee.rs","byte_start":179593,"byte_end":179596,"line_start":35,"line_end":35,"column_start":22,"column_end":25},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1097},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tee.rs","byte_start":180693,"byte_end":180696,"line_start":73,"line_end":73,"column_start":31,"column_end":34},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1097},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":181104,"byte_end":181115,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":181288,"byte_end":181299,"line_start":27,"line_end":27,"column_start":22,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":181965,"byte_end":181976,"line_start":55,"line_end":55,"column_start":31,"column_end":42},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":182625,"byte_end":182631,"line_start":83,"line_end":83,"column_start":25,"column_end":31},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1127},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":182843,"byte_end":182849,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":184439,"byte_end":184451,"line_start":151,"line_end":151,"column_start":25,"column_end":37},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/tuple_impl.rs","byte_start":184977,"byte_end":184982,"line_start":172,"line_end":172,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1158}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":188255,"byte_end":188263,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2051},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":189061,"byte_end":189069,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2051},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":189908,"byte_end":189914,"line_start":83,"line_end":83,"column_start":22,"column_end":28},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2064},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/unique_impl.rs","byte_start":191185,"byte_end":191191,"line_start":127,"line_end":127,"column_start":24,"column_end":30},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2064},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":192723,"byte_end":192731,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":193010,"byte_end":193022,"line_start":54,"line_end":54,"column_start":32,"column_end":44},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1209},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/with_position.rs","byte_start":194258,"byte_end":194270,"line_start":88,"line_end":88,"column_start":31,"column_end":43},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1209},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":195181,"byte_end":195186,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2099},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_eq_impl.rs","byte_start":195764,"byte_end":195769,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2099},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":196684,"byte_end":196694,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":197316,"byte_end":197326,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/zip_longest.rs","byte_start":198147,"byte_end":198157,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":7988,"byte_end":7996,"line_start":278,"line_end":278,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":5536},"to":{"krate":0,"index":1271}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":61414,"byte_end":61415,"line_start":1850,"line_end":1850,"column_start":31,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1398},"to":{"krate":0,"index":1271}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.6/src/lib.rs","byte_start":64919,"byte_end":64928,"line_start":1968,"line_end":1968,"column_start":9,"column_end":18},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2287},"to":{"krate":4294967295,"index":4294967295}}]}