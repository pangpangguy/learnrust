{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0","program":"/home/pangpangguy/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rayon","--edition=2018","/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=0fe53f5fbb48fa39","-C","extra-filename=-0fe53f5fbb48fa39","--out-dir","/home/pangpangguy/Ensimag/ProjetRust/learnrust/rustTDTP/TD3/bin_packing/target/rls/debug/deps","-L","dependency=/home/pangpangguy/Ensimag/ProjetRust/learnrust/rustTDTP/TD3/bin_packing/target/rls/debug/deps","--extern","crossbeam_deque=/home/pangpangguy/Ensimag/ProjetRust/learnrust/rustTDTP/TD3/bin_packing/target/rls/debug/deps/libcrossbeam_deque-75cd91114ea6b38a.rmeta","--extern","either=/home/pangpangguy/Ensimag/ProjetRust/learnrust/rustTDTP/TD3/bin_packing/target/rls/debug/deps/libeither-ade283f5b14fd6d4.rmeta","--extern","rayon_core=/home/pangpangguy/Ensimag/ProjetRust/learnrust/rustTDTP/TD3/bin_packing/target/rls/debug/deps/librayon_core-e2017775584c4a72.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pangpangguy/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pangpangguy/Ensimag/ProjetRust/learnrust/rustTDTP/TD3/bin_packing/target/rls/debug/deps/librayon-0fe53f5fbb48fa39.rmeta"},"prelude":{"crate_id":{"name":"rayon","disambiguator":[1082723412698925423,3460046300264068824]},"crate_root":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src","external_crates":[{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","num":18,"id":{"name":"either","disambiguator":[7265889331445279260,11230398538538721025]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":19,"id":{"name":"crossbeam_deque","disambiguator":[1342443596676418841,9267643729997076799]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":20,"id":{"name":"crossbeam_epoch","disambiguator":[15444995420598344546,12640437418447903704]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":21,"id":{"name":"cfg_if","disambiguator":[10021299859095236603,9970654228449935443]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":22,"id":{"name":"maybe_uninit","disambiguator":[10922732309434712432,8105429422995239737]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":23,"id":{"name":"crossbeam_utils","disambiguator":[1211761586436744447,1710077541475292438]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":24,"id":{"name":"lazy_static","disambiguator":[4038955093903438243,10998562936998939215]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":25,"id":{"name":"memoffset","disambiguator":[16621810611307535510,14827697539032685538]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":26,"id":{"name":"scopeguard","disambiguator":[6745301356711570827,8805850024978740077]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","num":27,"id":{"name":"rayon_core","disambiguator":[15253993056592606851,5885315463505957174]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","num":28,"id":{"name":"crossbeam_queue","disambiguator":[16979348844596138475,14029638029558853146]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","num":29,"id":{"name":"num_cpus","disambiguator":[12817939563347820286,1190008211573774942]}},{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","num":30,"id":{"name":"libc","disambiguator":[11353261926527561750,10873152352476810761]}}],"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":0,"byte_end":4621,"line_start":1,"line_end":121,"column_start":1,"column_end":41}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":161},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":26451,"byte_end":26457,"line_start":84,"line_end":84,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5311},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27178,"byte_end":27188,"line_start":101,"line_end":101,"column_start":28,"column_end":38},"alias_span":null,"name":"IterBridge","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27190,"byte_end":27204,"line_start":101,"line_end":101,"column_start":40,"column_end":54},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5320},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27271,"byte_end":27276,"line_start":106,"line_end":106,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5341},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27312,"byte_end":27318,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5351},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27373,"byte_end":27382,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5360},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27418,"byte_end":27424,"line_start":113,"line_end":113,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5369},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27468,"byte_end":27477,"line_start":115,"line_end":115,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5378},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27517,"byte_end":27524,"line_start":117,"line_end":117,"column_start":25,"column_end":32},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5387},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27562,"byte_end":27569,"line_start":119,"line_end":119,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5396},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27653,"byte_end":27657,"line_start":124,"line_end":124,"column_start":22,"column_end":26},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5408},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27659,"byte_end":27667,"line_start":124,"line_end":124,"column_start":28,"column_end":36},"alias_span":null,"name":"FoldWith","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5431},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27709,"byte_end":27716,"line_start":126,"line_end":126,"column_start":26,"column_end":33},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5446},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27718,"byte_end":27729,"line_start":126,"line_end":126,"column_start":35,"column_end":46},"alias_span":null,"name":"TryFoldWith","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5458},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27811,"byte_end":27815,"line_start":131,"line_end":131,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":1517},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27856,"byte_end":27861,"line_start":133,"line_end":133,"column_start":26,"column_end":31},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5468},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27863,"byte_end":27868,"line_start":133,"line_end":133,"column_start":33,"column_end":38},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5477},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27901,"byte_end":27905,"line_start":135,"line_end":135,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5487},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27935,"byte_end":27938,"line_start":137,"line_end":137,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5508},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27979,"byte_end":27986,"line_start":139,"line_end":139,"column_start":26,"column_end":33},"alias_span":null,"name":"MapInit","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5496},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27988,"byte_end":27995,"line_start":139,"line_end":139,"column_start":35,"column_end":42},"alias_span":null,"name":"MapWith","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5520},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28026,"byte_end":28029,"line_start":141,"line_end":141,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5533},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28065,"byte_end":28070,"line_start":143,"line_end":143,"column_start":23,"column_end":28},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":5545},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28110,"byte_end":28118,"line_start":145,"line_end":145,"column_start":25,"column_end":33},"alias_span":null,"name":"MultiZip","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6424},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28162,"byte_end":28172,"line_start":147,"line_end":147,"column_start":27,"column_end":37},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6437},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28234,"byte_end":28252,"line_start":149,"line_end":149,"column_start":36,"column_end":54},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6449},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28298,"byte_end":28309,"line_start":151,"line_end":151,"column_start":28,"column_end":39},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6459},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28345,"byte_end":28351,"line_start":153,"line_end":153,"column_start":23,"column_end":29},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6481},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28392,"byte_end":28395,"line_start":157,"line_end":157,"column_start":20,"column_end":23},"alias_span":null,"name":"Rev","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6500},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28426,"byte_end":28432,"line_start":159,"line_end":159,"column_start":21,"column_end":27},"alias_span":null,"name":"MaxLen","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6490},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28434,"byte_end":28440,"line_start":159,"line_end":159,"column_start":29,"column_end":35},"alias_span":null,"name":"MinLen","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6510},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28478,"byte_end":28484,"line_start":162,"line_end":162,"column_start":23,"column_end":29},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6519},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28520,"byte_end":28526,"line_start":164,"line_end":164,"column_start":23,"column_end":29},"alias_span":null,"name":"Copied","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6528},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28588,"byte_end":28595,"line_start":170,"line_end":170,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6537},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28639,"byte_end":28648,"line_start":172,"line_end":172,"column_start":27,"column_end":36},"alias_span":null,"name":"PanicFuse","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6553},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28692,"byte_end":28701,"line_start":174,"line_end":174,"column_start":27,"column_end":36},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":3298},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28761,"byte_end":28767,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6562},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28769,"byte_end":28775,"line_start":178,"line_end":178,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":3319},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28801,"byte_end":28808,"line_start":179,"line_end":179,"column_start":24,"column_end":31},"alias_span":null,"name":"repeatn","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6571},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28810,"byte_end":28817,"line_start":179,"line_end":179,"column_start":33,"column_end":40},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":3566},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28854,"byte_end":28859,"line_start":182,"line_end":182,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":3568},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28861,"byte_end":28866,"line_start":182,"line_end":182,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":3608},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28900,"byte_end":28904,"line_start":184,"line_end":184,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":6581},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28906,"byte_end":28910,"line_start":184,"line_end":184,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":0,"index":3918},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380198,"byte_end":380218,"line_start":5,"line_end":5,"column_start":22,"column_end":42},"alias_span":null,"name":"FromParallelIterator","value":"","parent":{"krate":0,"index":4006}},{"kind":"Use","ref_id":{"krate":0,"index":3856},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380241,"byte_end":380264,"line_start":6,"line_end":6,"column_start":22,"column_end":45},"alias_span":null,"name":"IndexedParallelIterator","value":"","parent":{"krate":0,"index":4006}},{"kind":"Use","ref_id":{"krate":0,"index":3626},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380287,"byte_end":380307,"line_start":7,"line_end":7,"column_start":22,"column_end":42},"alias_span":null,"name":"IntoParallelIterator","value":"","parent":{"krate":0,"index":4006}},{"kind":"Use","ref_id":{"krate":0,"index":3630},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380330,"byte_end":380353,"line_start":8,"line_end":8,"column_start":22,"column_end":45},"alias_span":null,"name":"IntoParallelRefIterator","value":"","parent":{"krate":0,"index":4006}},{"kind":"Use","ref_id":{"krate":0,"index":3641},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380376,"byte_end":380402,"line_start":9,"line_end":9,"column_start":22,"column_end":48},"alias_span":null,"name":"IntoParallelRefMutIterator","value":"","parent":{"krate":0,"index":4006}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380425,"byte_end":380439,"line_start":10,"line_end":10,"column_start":22,"column_end":36},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":4006}},{"kind":"Use","ref_id":{"krate":0,"index":3922},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380462,"byte_end":380476,"line_start":11,"line_end":11,"column_start":22,"column_end":36},"alias_span":null,"name":"ParallelExtend","value":"","parent":{"krate":0,"index":4006}},{"kind":"Use","ref_id":{"krate":0,"index":3652},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380499,"byte_end":380515,"line_start":12,"line_end":12,"column_start":22,"column_end":38},"alias_span":null,"name":"ParallelIterator","value":"","parent":{"krate":0,"index":4006}},{"kind":"Use","ref_id":{"krate":0,"index":4270},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380539,"byte_end":380552,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"ParallelSlice","value":"","parent":{"krate":0,"index":4006}},{"kind":"Use","ref_id":{"krate":0,"index":4280},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380576,"byte_end":380592,"line_start":14,"line_end":14,"column_start":23,"column_end":39},"alias_span":null,"name":"ParallelSliceMut","value":"","parent":{"krate":0,"index":4006}},{"kind":"Use","ref_id":{"krate":0,"index":4544},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380614,"byte_end":380628,"line_start":15,"line_end":15,"column_start":21,"column_end":35},"alias_span":null,"name":"ParallelString","value":"","parent":{"krate":0,"index":4006}},{"kind":"Use","ref_id":{"krate":27,"index":846},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4234,"byte_end":4243,"line_start":112,"line_end":112,"column_start":21,"column_end":30},"alias_span":null,"name":"FnContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":237},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4265,"byte_end":4278,"line_start":113,"line_end":113,"column_start":21,"column_end":34},"alias_span":null,"name":"ThreadBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":518},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4300,"byte_end":4310,"line_start":114,"line_end":114,"column_start":21,"column_end":31},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":834},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4332,"byte_end":4352,"line_start":115,"line_end":115,"column_start":21,"column_end":41},"alias_span":null,"name":"ThreadPoolBuildError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":607},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4374,"byte_end":4391,"line_start":116,"line_end":116,"column_start":21,"column_end":38},"alias_span":null,"name":"ThreadPoolBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":606},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4414,"byte_end":4433,"line_start":117,"line_end":117,"column_start":22,"column_end":41},"alias_span":null,"name":"current_num_threads","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":557},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4435,"byte_end":4455,"line_start":117,"line_end":117,"column_start":43,"column_end":63},"alias_span":null,"name":"current_thread_index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":100},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4479,"byte_end":4483,"line_start":118,"line_end":118,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":110},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4485,"byte_end":4497,"line_start":118,"line_end":118,"column_start":28,"column_end":40},"alias_span":null,"name":"join_context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":400},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4521,"byte_end":4526,"line_start":119,"line_end":119,"column_start":22,"column_end":27},"alias_span":null,"name":"scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":386},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4528,"byte_end":4533,"line_start":119,"line_end":119,"column_start":29,"column_end":34},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":407},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4557,"byte_end":4567,"line_start":120,"line_end":120,"column_start":22,"column_end":32},"alias_span":null,"name":"scope_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":389},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4569,"byte_end":4578,"line_start":120,"line_end":120,"column_start":34,"column_end":43},"alias_span":null,"name":"ScopeFifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":487},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4602,"byte_end":4607,"line_start":121,"line_end":121,"column_start":22,"column_end":27},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":494},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4609,"byte_end":4619,"line_start":121,"line_end":121,"column_start":29,"column_end":39},"alias_span":null,"name":"spawn_fifo","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":0,"byte_end":4621,"line_start":1,"line_end":121,"column_start":1,"column_end":41},"name":"","qualname":"::","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":11},{"krate":0,"index":46},{"krate":0,"index":137},{"krate":0,"index":3948},{"krate":0,"index":4006},{"krate":0,"index":4018},{"krate":0,"index":4041},{"krate":0,"index":4056},{"krate":0,"index":4096},{"krate":0,"index":4537},{"krate":0,"index":4769},{"krate":0,"index":4827},{"krate":0,"index":4829},{"krate":0,"index":4856},{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870},{"krate":0,"index":4871},{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876},{"krate":0,"index":4877},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4884},{"krate":0,"index":4885},{"krate":0,"index":4886}],"decl_id":null,"docs":" Data-parallelism library that makes it easy to convert sequential\n computations into parallel","sig":null,"attributes":[{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":53,"byte_end":92,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":93,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"deny(unreachable_pub)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":116,"byte_end":141,"line_start":4,"line_end":4,"column_start":1,"column_end":26}},{"value":"/ Data-parallelism library that makes it easy to convert sequential","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":143,"byte_end":212,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ computations into parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":213,"byte_end":243,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":244,"byte_end":247,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Rayon is lightweight and convenient for introducing parallelism into existing","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":248,"byte_end":329,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/ code. It guarantees data-race free executions and takes advantage of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":330,"byte_end":402,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ parallelism when sensible, based on work-load at runtime.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":403,"byte_end":464,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":465,"byte_end":468,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # How to use Rayon","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":469,"byte_end":491,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":492,"byte_end":495,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ There are two ways to use Rayon:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":496,"byte_end":532,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":533,"byte_end":536,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - **High-level parallel constructs** are the simplest way to use Rayon and also","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":537,"byte_end":620,"line_start":17,"line_end":17,"column_start":1,"column_end":84}},{"value":"/   typically the most efficient.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":621,"byte_end":656,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/   - [Parallel iterators][iter module] make it easy to convert a sequential iterator to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":657,"byte_end":747,"line_start":19,"line_end":19,"column_start":1,"column_end":91}},{"value":"/     execute in parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":748,"byte_end":776,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/     - The [`ParallelIterator`] trait defines general methods for all parallel iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":777,"byte_end":869,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/     - The [`IndexedParallelIterator`] trait adds methods for iterators that support random","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":870,"byte_end":964,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/       access.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":965,"byte_end":982,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/   - The [`par_sort`] method sorts `&mut [T]` slices (or vectors) in parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":983,"byte_end":1064,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"/   - [`par_extend`] can be used to efficiently grow collections with items produced","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1065,"byte_end":1151,"line_start":25,"line_end":25,"column_start":1,"column_end":87}},{"value":"/     by a parallel iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1152,"byte_end":1183,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ - **Custom tasks** let you divide your work into parallel tasks yourself.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1184,"byte_end":1261,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/   - [`join`] is used to subdivide a task into two pieces.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1262,"byte_end":1323,"line_start":28,"line_end":28,"column_start":1,"column_end":62}},{"value":"/   - [`scope`] creates a scope within which you can create any number of parallel tasks.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1324,"byte_end":1415,"line_start":29,"line_end":29,"column_start":1,"column_end":92}},{"value":"/   - [`ThreadPoolBuilder`] can be used to create your own thread pools or customize","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1416,"byte_end":1502,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/     the global one.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1503,"byte_end":1526,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1527,"byte_end":1530,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [iter module]: iter/index.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1531,"byte_end":1565,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/ [`join`]: fn.join.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1566,"byte_end":1592,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/ [`scope`]: fn.scope.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1593,"byte_end":1621,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ [`par_sort`]: slice/trait.ParallelSliceMut.html#method.par_sort","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1622,"byte_end":1689,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"/ [`par_extend`]: iter/trait.ParallelExtend.html#tymethod.par_extend","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1690,"byte_end":1760,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ [`ThreadPoolBuilder`]: struct.ThreadPoolBuilder.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1761,"byte_end":1817,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1818,"byte_end":1821,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Basic usage and the Rayon prelude","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1822,"byte_end":1861,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1862,"byte_end":1865,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ First, you will need to add `rayon` to your `Cargo.toml`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1866,"byte_end":1927,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1928,"byte_end":1931,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Next, to use parallel iterators or the other high-level methods,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":1932,"byte_end":2000,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ you need to import several traits. Those traits are bundled into","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2001,"byte_end":2069,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ the module [`rayon::prelude`]. It is recommended that you import","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2070,"byte_end":2138,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ all of these traits at once by adding `use rayon::prelude::*` at","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2139,"byte_end":2207,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/ the top of each module that uses Rayon methods.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2208,"byte_end":2259,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2260,"byte_end":2263,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ These traits give you access to the `par_iter` method which provides","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2264,"byte_end":2336,"line_start":50,"line_end":50,"column_start":1,"column_end":73}},{"value":"/ parallel implementations of many iterative functions such as [`map`],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2337,"byte_end":2410,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ [`for_each`], [`filter`], [`fold`], and [more].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2411,"byte_end":2462,"line_start":52,"line_end":52,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2463,"byte_end":2466,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`rayon::prelude`]: prelude/index.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2467,"byte_end":2509,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ [`map`]: iter/trait.ParallelIterator.html#method.map","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2510,"byte_end":2566,"line_start":55,"line_end":55,"column_start":1,"column_end":57}},{"value":"/ [`for_each`]: iter/trait.ParallelIterator.html#method.for_each","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2567,"byte_end":2633,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/ [`filter`]: iter/trait.ParallelIterator.html#method.filter","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2634,"byte_end":2696,"line_start":57,"line_end":57,"column_start":1,"column_end":63}},{"value":"/ [`fold`]: iter/trait.ParallelIterator.html#method.fold","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2697,"byte_end":2755,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/ [more]: iter/trait.ParallelIterator.html#provided-methods","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2756,"byte_end":2817,"line_start":59,"line_end":59,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: iter/trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2818,"byte_end":2876,"line_start":60,"line_end":60,"column_start":1,"column_end":59}},{"value":"/ [`IndexedParallelIterator`]: iter/trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2877,"byte_end":2949,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2950,"byte_end":2953,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Crate Layout","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2954,"byte_end":2972,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2973,"byte_end":2976,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Rayon extends many of the types found in the standard library with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":2977,"byte_end":3047,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/ parallel iterator implementations. The modules in the `rayon`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3048,"byte_end":3113,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ crate mirror [`std`] itself: so, e.g., the `option` module in","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3114,"byte_end":3179,"line_start":67,"line_end":67,"column_start":1,"column_end":66}},{"value":"/ Rayon contains parallel iterators for the `Option` type, which is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3180,"byte_end":3249,"line_start":68,"line_end":68,"column_start":1,"column_end":70}},{"value":"/ found in [the `option` module of `std`]. Similarly, the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3250,"byte_end":3309,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/ `collections` module in Rayon offers parallel iterator types for","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3310,"byte_end":3378,"line_start":70,"line_end":70,"column_start":1,"column_end":69}},{"value":"/ [the `collections` from `std`]. You will rarely need to access","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3379,"byte_end":3445,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/ these submodules unless you need to name iterator types","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3446,"byte_end":3505,"line_start":72,"line_end":72,"column_start":1,"column_end":60}},{"value":"/ explicitly.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3506,"byte_end":3521,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3522,"byte_end":3525,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [the `option` module of `std`]: https://doc.rust-lang.org/std/option/index.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3526,"byte_end":3609,"line_start":75,"line_end":75,"column_start":1,"column_end":84}},{"value":"/ [the `collections` from `std`]: https://doc.rust-lang.org/std/collections/index.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3610,"byte_end":3698,"line_start":76,"line_end":76,"column_start":1,"column_end":89}},{"value":"/ [`std`]: https://doc.rust-lang.org/std/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3699,"byte_end":3742,"line_start":77,"line_end":77,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3743,"byte_end":3746,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Other questions?","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3747,"byte_end":3769,"line_start":79,"line_end":79,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3770,"byte_end":3773,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ See [the Rayon FAQ][faq].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3774,"byte_end":3803,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3804,"byte_end":3807,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [faq]: https://github.com/rayon-rs/rayon/blob/master/FAQ.md","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":3808,"byte_end":3871,"line_start":83,"line_end":83,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/private.rs","byte_start":7137,"byte_end":7150,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"/ If this type is pub but not publicly reachable, third parties","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/private.rs","byte_start":6965,"byte_end":7030,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ can't name it and can't implement traits using it.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/private.rs","byte_start":7031,"byte_end":7085,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/private.rs","byte_start":7086,"byte_end":7125,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":46},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":62},{"krate":0,"index":72},{"krate":0,"index":81},{"krate":0,"index":94},{"krate":0,"index":106},{"krate":0,"index":115}],"decl_id":null,"docs":" Parallel iterator types for [standard collections][std::collections]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [standard collections][std::collections]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":11700,"byte_end":11772,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":11773,"byte_end":11776,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":11777,"byte_end":11855,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":11856,"byte_end":11894,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":11895,"byte_end":11898,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::collections]: https://doc.rust-lang.org/stable/std/collections/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":11899,"byte_end":11972,"line_start":6,"line_end":6,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":48},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::collections::binary_heap","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":4887},{"krate":0,"index":4893},{"krate":0,"index":4890},{"krate":0,"index":53},{"krate":0,"index":4903},{"krate":0,"index":4896},{"krate":0,"index":4909},{"krate":0,"index":4913},{"krate":0,"index":58},{"krate":0,"index":4917},{"krate":0,"index":4932},{"krate":0,"index":4924}],"decl_id":null,"docs":" This module contains the parallel iterator types for heaps\n (`BinaryHeap<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for heaps","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":12676,"byte_end":12738,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/ (`BinaryHeap<T>`). You will rarely need to interact with it directly","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":12739,"byte_end":12811,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":12812,"byte_end":12871,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4887},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13052,"byte_end":13060,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::binary_heap::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4889}],"decl_id":null,"docs":" Parallel iterator over a binary heap\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a binary heap","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":12976,"byte_end":13016,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4909},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13526,"byte_end":13530,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::binary_heap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4912}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a binary heap\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a binary heap","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13431,"byte_end":13497,"line_start":34,"line_end":34,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":62},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_map","qualname":"::collections::btree_map","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":4939},{"krate":0,"index":4943},{"krate":0,"index":4947},{"krate":0,"index":4954},{"krate":0,"index":4961},{"krate":0,"index":4966},{"krate":0,"index":67},{"krate":0,"index":4971},{"krate":0,"index":4979},{"krate":0,"index":4987},{"krate":0,"index":4992},{"krate":0,"index":4997},{"krate":0,"index":5005}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree maps\n (`BTreeMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for B-Tree maps","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":13966,"byte_end":14034,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ (`BTreeMap<K, V>`). You will rarely need to interact with it directly","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":14035,"byte_end":14108,"line_start":2,"line_end":2,"column_start":1,"column_end":74}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":14109,"byte_end":14168,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4939},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":14360,"byte_end":14368,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4942}],"decl_id":null,"docs":" Parallel iterator over a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a B-Tree map","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":14271,"byte_end":14310,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4961},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":14703,"byte_end":14707,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4965}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a B-Tree map","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":14609,"byte_end":14674,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4987},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":15244,"byte_end":15251,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::btree_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4991}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a B-Tree map","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":15153,"byte_end":15215,"line_start":52,"line_end":52,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":72},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_set","qualname":"::collections::btree_set","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":5013},{"krate":0,"index":5016},{"krate":0,"index":5019},{"krate":0,"index":5025},{"krate":0,"index":5031},{"krate":0,"index":5035},{"krate":0,"index":77},{"krate":0,"index":5039},{"krate":0,"index":5046}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree sets\n (`BTreeSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for B-Tree sets","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":15552,"byte_end":15620,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ (`BTreeSet<T>`). You will rarely need to interact with it directly","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":15621,"byte_end":15691,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":15692,"byte_end":15751,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5013},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":15943,"byte_end":15951,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5015}],"decl_id":null,"docs":" Parallel iterator over a B-Tree set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a B-Tree set","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":15854,"byte_end":15893,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5031},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":16240,"byte_end":16244,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5034}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a B-Tree set","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":16146,"byte_end":16211,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":81},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_map","qualname":"::collections::hash_map","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":7253},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":5053},{"krate":0,"index":5057},{"krate":0,"index":5061},{"krate":0,"index":5069},{"krate":0,"index":5076},{"krate":0,"index":5081},{"krate":0,"index":89},{"krate":0,"index":5086},{"krate":0,"index":5095},{"krate":0,"index":5103},{"krate":0,"index":5108},{"krate":0,"index":5113},{"krate":0,"index":5122}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash maps\n (`HashMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for hash maps","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":16673,"byte_end":16739,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ (`HashMap<K, V>`). You will rarely need to interact with it directly","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":16740,"byte_end":16812,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":16813,"byte_end":16872,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5053},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":17097,"byte_end":17105,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5056}],"decl_id":null,"docs":" Parallel iterator over a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a hash map","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":17010,"byte_end":17047,"line_start":13,"line_end":13,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5076},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":17474,"byte_end":17478,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5080}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a hash map","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":17382,"byte_end":17445,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5103},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":18055,"byte_end":18062,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hash_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5107}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a hash map","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":17966,"byte_end":18026,"line_start":53,"line_end":53,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":94},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_set","qualname":"::collections::hash_set","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":7267},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":5130},{"krate":0,"index":5133},{"krate":0,"index":5136},{"krate":0,"index":5143},{"krate":0,"index":5149},{"krate":0,"index":5153},{"krate":0,"index":102},{"krate":0,"index":5157},{"krate":0,"index":5165}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash sets\n (`HashSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for hash sets","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":18399,"byte_end":18465,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ (`HashSet<T>`). You will rarely need to interact with it directly","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":18466,"byte_end":18535,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":18536,"byte_end":18595,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5130},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":18820,"byte_end":18828,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5132}],"decl_id":null,"docs":" Parallel iterator over a hash set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a hash set","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":18733,"byte_end":18770,"line_start":13,"line_end":13,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5149},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":19151,"byte_end":19155,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5152}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a hash set","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":19059,"byte_end":19122,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":106},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linked_list","qualname":"::collections::linked_list","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":5172},{"krate":0,"index":5178},{"krate":0,"index":5175},{"krate":0,"index":5181},{"krate":0,"index":5187},{"krate":0,"index":5193},{"krate":0,"index":5197},{"krate":0,"index":111},{"krate":0,"index":5201},{"krate":0,"index":5208},{"krate":0,"index":5215},{"krate":0,"index":5219},{"krate":0,"index":5223},{"krate":0,"index":5230}],"decl_id":null,"docs":" This module contains the parallel iterator types for linked lists\n (`LinkedList<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for linked lists","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":19620,"byte_end":19689,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ (`LinkedList<T>`). You will rarely need to interact with it directly","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":19690,"byte_end":19762,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":19763,"byte_end":19822,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5172},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":20003,"byte_end":20011,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5174}],"decl_id":null,"docs":" Parallel iterator over a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a linked list","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":19927,"byte_end":19967,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5193},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":20285,"byte_end":20289,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5196}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a linked list","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":20190,"byte_end":20256,"line_start":28,"line_end":28,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5215},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":20734,"byte_end":20741,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::linked_list::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5218}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a linked list","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":20642,"byte_end":20705,"line_start":52,"line_end":52,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":115},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec_deque","qualname":"::collections::vec_deque","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":5237},{"krate":0,"index":5243},{"krate":0,"index":5240},{"krate":0,"index":5246},{"krate":0,"index":5259},{"krate":0,"index":5252},{"krate":0,"index":5265},{"krate":0,"index":5269},{"krate":0,"index":121},{"krate":0,"index":125},{"krate":0,"index":5281},{"krate":0,"index":5273},{"krate":0,"index":5288},{"krate":0,"index":5292},{"krate":0,"index":131},{"krate":0,"index":5304},{"krate":0,"index":5296}],"decl_id":null,"docs":" This module contains the parallel iterator types for double-ended queues\n (`VecDeque<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for double-ended queues","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":20967,"byte_end":21043,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ (`VecDeque<T>`). You will rarely need to interact with it directly","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":21044,"byte_end":21114,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":21115,"byte_end":21174,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5237},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":21378,"byte_end":21386,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::vec_deque::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5239}],"decl_id":null,"docs":" Parallel iterator over a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a double-ended queue","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":21295,"byte_end":21342,"line_start":13,"line_end":13,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5265},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":21673,"byte_end":21677,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::vec_deque::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5268}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a double-ended queue","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":21571,"byte_end":21644,"line_start":29,"line_end":29,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5288},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":22360,"byte_end":22367,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::vec_deque::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5291}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a double-ended queue","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":22261,"byte_end":22331,"line_start":60,"line_end":60,"column_start":1,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":137},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":294},{"krate":0,"index":354},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":564},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":955},{"krate":0,"index":993},{"krate":0,"index":1079},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1353},{"krate":0,"index":1384},{"krate":0,"index":1451},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2454},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2803},{"krate":0,"index":2852},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3293},{"krate":0,"index":3359},{"krate":0,"index":3555},{"krate":0,"index":3556},{"krate":0,"index":3557},{"krate":0,"index":3558},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3561},{"krate":0,"index":3602},{"krate":0,"index":3603},{"krate":0,"index":3604},{"krate":0,"index":3605},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3630},{"krate":0,"index":3635},{"krate":0,"index":3641},{"krate":0,"index":3646},{"krate":0,"index":3652},{"krate":0,"index":3851},{"krate":0,"index":3856},{"krate":0,"index":3918},{"krate":0,"index":3922},{"krate":0,"index":3926}],"decl_id":null,"docs":" Traits for writing parallel programs using an iterator-style interface","sig":null,"attributes":[{"value":"/ Traits for writing parallel programs using an iterator-style interface","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":22837,"byte_end":22911,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":22912,"byte_end":22915,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":22916,"byte_end":22994,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":22995,"byte_end":23038,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23039,"byte_end":23042,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Parallel iterators make it easy to write iterator-like chains that","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23043,"byte_end":23113,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ execute in parallel: typically all you have to do is convert the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23114,"byte_end":23182,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ first `.iter()` (or `iter_mut()`, `into_iter()`, etc) method into","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23183,"byte_end":23252,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `par_iter()` (or `par_iter_mut()`, `into_par_iter()`, etc). For","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23253,"byte_end":23320,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ example, to compute the sum of the squares of a sequence of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23321,"byte_end":23384,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ integers, one might write:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23385,"byte_end":23415,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23416,"byte_end":23419,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23420,"byte_end":23431,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23432,"byte_end":23458,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ fn sum_of_squares(input: &[i32]) -> i32 {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23459,"byte_end":23504,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/     input.par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23505,"byte_end":23529,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/          .map(|i| i * i)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23530,"byte_end":23558,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/          .sum()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23559,"byte_end":23578,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23579,"byte_end":23584,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23585,"byte_end":23592,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23593,"byte_end":23596,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Or, to increment all the integers in a slice, you could write:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23597,"byte_end":23663,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23664,"byte_end":23667,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23668,"byte_end":23679,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23680,"byte_end":23706,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ fn increment_all(input: &mut [i32]) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23707,"byte_end":23748,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/     input.par_iter_mut()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23749,"byte_end":23777,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/          .for_each(|p| *p += 1);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23778,"byte_end":23814,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23815,"byte_end":23820,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23821,"byte_end":23828,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23829,"byte_end":23832,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To use parallel iterators, first import the traits by adding","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23833,"byte_end":23897,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ something like `use rayon::prelude::*` to your module. You can","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23898,"byte_end":23964,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"/ then call `par_iter`, `par_iter_mut`, or `into_par_iter` to get a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":23965,"byte_end":24034,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ parallel iterator. Like a [regular iterator][], parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24035,"byte_end":24095,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/ iterators work by first constructing a computation and then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24096,"byte_end":24159,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/ executing it.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24160,"byte_end":24177,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24178,"byte_end":24181,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In addition to `par_iter()` and friends, some types offer other","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24182,"byte_end":24249,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/ ways to create (or consume) parallel iterators:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24250,"byte_end":24301,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24302,"byte_end":24305,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - Slices (`&[T]`, `&mut [T]`) offer methods like `par_split` and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24306,"byte_end":24374,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/   `par_windows`, as well as various parallel sorting","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24375,"byte_end":24431,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/   operations. See [the `ParallelSlice` trait] for the full list.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24432,"byte_end":24500,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ - Strings (`&str`) offer methods like `par_split` and `par_lines`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24501,"byte_end":24571,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/   See [the `ParallelString` trait] for the full list.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24572,"byte_end":24629,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/ - Various collections offer [`par_extend`], which grows a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24630,"byte_end":24691,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/   collection given a parallel iterator. (If you don't have a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24692,"byte_end":24756,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/   collection to extend, you can use [`collect()`] to create a new","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24757,"byte_end":24826,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/   one from scratch.)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24827,"byte_end":24851,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24852,"byte_end":24855,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [the `ParallelSlice` trait]: ../slice/trait.ParallelSlice.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24856,"byte_end":24922,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ [the `ParallelString` trait]: ../str/trait.ParallelString.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24923,"byte_end":24989,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/ [`par_extend`]: trait.ParallelExtend.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":24990,"byte_end":25035,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/ [`collect()`]: trait.ParallelIterator.html#method.collect","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25036,"byte_end":25097,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25098,"byte_end":25101,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ To see the full range of methods available on parallel iterators,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25102,"byte_end":25171,"line_start":57,"line_end":57,"column_start":1,"column_end":70}},{"value":"/ check out the [`ParallelIterator`] and [`IndexedParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25172,"byte_end":25242,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/ traits.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25243,"byte_end":25254,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25255,"byte_end":25258,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If you'd like to build a custom parallel iterator, or to write your own","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25259,"byte_end":25334,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ combinator, then check out the [split] function and the [plumbing] module.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25335,"byte_end":25413,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25414,"byte_end":25417,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [regular iterator]: http://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25418,"byte_end":25495,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25496,"byte_end":25549,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25550,"byte_end":25617,"line_start":66,"line_end":66,"column_start":1,"column_end":68}},{"value":"/ [split]: fn.split.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25618,"byte_end":25644,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ [plumbing]: plumbing/index.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25645,"byte_end":25680,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25681,"byte_end":25684,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Note: Several of the `ParallelIterator` methods rely on a `Try` trait which","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25685,"byte_end":25764,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ has been deliberately obscured from the public API.  This trait is intended","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25765,"byte_end":25844,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/ to mirror the unstable `std::ops::Try` with implementations for `Option` and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25845,"byte_end":25925,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ `Result`, where `Some`/`Ok` values will let those iterators continue, but","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":25926,"byte_end":26003,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ `None`/`Err` values will exit early.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":26004,"byte_end":26044,"line_start":74,"line_end":74,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":26045,"byte_end":26048,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A note about object safety: It is currently _not_ possible to wrap","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":26049,"byte_end":26119,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ a `ParallelIterator` (or any trait that depends on it) using a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":26120,"byte_end":26186,"line_start":77,"line_end":77,"column_start":1,"column_end":67}},{"value":"/ `Box<dyn ParallelIterator>` or other kind of dynamic allocation,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":26187,"byte_end":26255,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/ because `ParallelIterator` is **not object-safe**.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":26256,"byte_end":26310,"line_start":79,"line_end":79,"column_start":1,"column_end":55}},{"value":"/ (This keeps the implementation simpler and allows extra optimizations.)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":26311,"byte_end":26386,"line_start":80,"line_end":80,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":168},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118336,"byte_end":118350,"line_start":46,"line_end":46,"column_start":11,"column_end":25},"name":"ParallelBridge","qualname":"::iter::par_bridge::ParallelBridge","value":"ParallelBridge: Sized","parent":null,"children":[{"krate":0,"index":169}],"decl_id":null,"docs":" Conversion trait to convert an `Iterator` to a `ParallelIterator`.","sig":null,"attributes":[{"value":"/ Conversion trait to convert an `Iterator` to a `ParallelIterator`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117072,"byte_end":117142,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117143,"byte_end":117146,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This creates a \"bridge\" from a sequential iterator to a parallel one, by distributing its items","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117147,"byte_end":117246,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ across the Rayon thread pool. This has the advantage of being able to parallelize just about","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117247,"byte_end":117343,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ anything, but the resulting `ParallelIterator` can be less efficient than if you started with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117344,"byte_end":117441,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ `par_iter` instead. However, it can still be useful for iterators that are difficult to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117442,"byte_end":117533,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ parallelize by other means, like channels or file or network I/O.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117534,"byte_end":117603,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117604,"byte_end":117607,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The resulting iterator is not guaranteed to keep the order of the original iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117608,"byte_end":117696,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117697,"byte_end":117700,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117701,"byte_end":117715,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117716,"byte_end":117719,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ To use this trait, take an existing `Iterator` and call `par_bridge` on it. After that, you can","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117720,"byte_end":117819,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ use any of the `ParallelIterator` methods:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117820,"byte_end":117866,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117867,"byte_end":117870,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117871,"byte_end":117878,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use rayon::iter::ParallelBridge;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117879,"byte_end":117915,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ use rayon::prelude::ParallelIterator;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117916,"byte_end":117957,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117958,"byte_end":117991,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117992,"byte_end":117995,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let rx = {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":117996,"byte_end":118010,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/     let (tx, rx) = channel();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118011,"byte_end":118044,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118045,"byte_end":118048,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"one!\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118049,"byte_end":118073,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/     tx.send(\"two!\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118074,"byte_end":118098,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/     tx.send(\"three!\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118099,"byte_end":118125,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118126,"byte_end":118129,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     rx","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118130,"byte_end":118140,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118141,"byte_end":118147,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118148,"byte_end":118151,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut output: Vec<&'static str> = rx.into_iter().par_bridge().collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118152,"byte_end":118230,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ output.sort_unstable();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118231,"byte_end":118258,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118259,"byte_end":118262,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&*output, &[\"one!\", \"three!\", \"two!\"]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118263,"byte_end":118317,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118318,"byte_end":118325,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118431,"byte_end":118441,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"par_bridge","qualname":"::iter::par_bridge::ParallelBridge::par_bridge","value":"pub fn par_bridge(Self) -> IterBridge<Self>","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Create a bridge from this type to a `ParallelIterator`.\n","sig":null,"attributes":[{"value":"/ Create a bridge from this type to a `ParallelIterator`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118364,"byte_end":118423,"line_start":47,"line_end":47,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5311},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118940,"byte_end":118950,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"IterBridge","qualname":"::iter::par_bridge::IterBridge","value":"IterBridge {  }","parent":null,"children":[{"krate":0,"index":5313}],"decl_id":null,"docs":" `IterBridge` is a parallel iterator that wraps a sequential iterator.","sig":null,"attributes":[{"value":"/ `IterBridge` is a parallel iterator that wraps a sequential iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118634,"byte_end":118707,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118708,"byte_end":118711,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This type is created when using the `par_bridge` method on `ParallelBridge`. See the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118712,"byte_end":118800,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/ [`ParallelBridge`] documentation for details.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118801,"byte_end":118850,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118851,"byte_end":118854,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`ParallelBridge`]: trait.ParallelBridge.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118855,"byte_end":118904,"line_start":65,"line_end":65,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5320},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":124154,"byte_end":124159,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Chain","qualname":"::iter::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5323},{"krate":0,"index":5324}],"decl_id":null,"docs":" `Chain` is an iterator that joins `b` after `a` in one continuous iterator.\n This struct is created by the [`chain()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Chain` is an iterator that joins `b` after `a` in one continuous iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":123772,"byte_end":123851,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ This struct is created by the [`chain()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":123852,"byte_end":123928,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":123929,"byte_end":123932,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`chain()`]: trait.ParallelIterator.html#method.chain","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":123933,"byte_end":123990,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":123991,"byte_end":124044,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":124045,"byte_end":124118,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5341},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141410,"byte_end":141416,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::iter::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":5343},{"krate":0,"index":5344}],"decl_id":null,"docs":" `Chunks` is an iterator that groups elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Chunks` is an iterator that groups elements of an underlying iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":140997,"byte_end":141072,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141073,"byte_end":141076,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`chunks()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141077,"byte_end":141161,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141162,"byte_end":141165,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`chunks()`]: trait.IndexedParallelIterator.html#method.chunks","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141166,"byte_end":141232,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141233,"byte_end":141300,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141301,"byte_end":141374,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5351},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162837,"byte_end":162846,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::iter::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5353}],"decl_id":null,"docs":" `Enumerate` is an iterator that returns the current count along with the element.\n This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Enumerate` is an iterator that returns the current count along with the element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162409,"byte_end":162494,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/ This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162495,"byte_end":162582,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162583,"byte_end":162586,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`enumerate()`]: trait.IndexedParallelIterator.html#method.enumerate","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162587,"byte_end":162659,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162660,"byte_end":162727,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162728,"byte_end":162801,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5360},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166272,"byte_end":166278,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Filter","qualname":"::iter::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5363},{"krate":0,"index":5364}],"decl_id":null,"docs":" `Filter` takes a predicate `filter_op` and filters out elements that match.\n This struct is created by the [`filter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Filter` takes a predicate `filter_op` and filters out elements that match.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":165894,"byte_end":165973,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ This struct is created by the [`filter()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":165974,"byte_end":166051,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166052,"byte_end":166055,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`filter()`]: trait.ParallelIterator.html#method.filter","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166056,"byte_end":166115,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166116,"byte_end":166169,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166170,"byte_end":166243,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5369},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169810,"byte_end":169819,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::iter::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5372},{"krate":0,"index":5373}],"decl_id":null,"docs":" `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.\n This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169408,"byte_end":169498,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169499,"byte_end":169581,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169582,"byte_end":169585,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`filter_map()`]: trait.ParallelIterator.html#method.filter_map","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169586,"byte_end":169653,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169654,"byte_end":169707,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169708,"byte_end":169781,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5378},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173509,"byte_end":173516,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::iter::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":5381},{"krate":0,"index":5382}],"decl_id":null,"docs":" `FlatMap` maps each element to an iterator, then flattens these iterators together.\n This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FlatMap` maps each element to an iterator, then flattens these iterators together.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173117,"byte_end":173204,"line_start":6,"line_end":6,"column_start":1,"column_end":88}},{"value":"/ This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173205,"byte_end":173284,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173285,"byte_end":173288,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`flat_map()`]: trait.ParallelIterator.html#method.flat_map","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173289,"byte_end":173352,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173353,"byte_end":173406,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173407,"byte_end":173480,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5387},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177560,"byte_end":177567,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::iter::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5389}],"decl_id":null,"docs":" `Flatten` turns each element to an iterator, then flattens these iterators\n together. This struct is created by the [`flatten()`] method on\n [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `Flatten` turns each element to an iterator, then flattens these iterators","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177158,"byte_end":177236,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ together. This struct is created by the [`flatten()`] method on","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177237,"byte_end":177304,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177305,"byte_end":177330,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177331,"byte_end":177334,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`flatten()`]: trait.ParallelIterator.html#method.flatten","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177335,"byte_end":177396,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177397,"byte_end":177450,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177451,"byte_end":177524,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5396},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178986,"byte_end":178990,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Fold","qualname":"::iter::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5402}],"decl_id":null,"docs":" `Fold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Fold` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178601,"byte_end":178693,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ This struct is created by the [`fold()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178694,"byte_end":178769,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178770,"byte_end":178773,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`fold()`]: trait.ParallelIterator.html#method.fold","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178774,"byte_end":178829,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178830,"byte_end":178883,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178884,"byte_end":178957,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5408},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":183105,"byte_end":183113,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"FoldWith","qualname":"::iter::fold::FoldWith","value":"FoldWith {  }","parent":null,"children":[{"krate":0,"index":5412},{"krate":0,"index":5413},{"krate":0,"index":5414}],"decl_id":null,"docs":" `FoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FoldWith` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":182701,"byte_end":182797,"line_start":197,"line_end":197,"column_start":1,"column_end":97}},{"value":"/ This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":182798,"byte_end":182878,"line_start":198,"line_end":198,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":182879,"byte_end":182882,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`fold_with()`]: trait.ParallelIterator.html#method.fold_with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":182883,"byte_end":182948,"line_start":200,"line_end":200,"column_start":1,"column_end":66}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":182949,"byte_end":183002,"line_start":201,"line_end":201,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":183003,"byte_end":183076,"line_start":202,"line_end":202,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":1079},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"plumbing","qualname":"::iter::plumbing","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1089},{"krate":0,"index":1098},{"krate":0,"index":1106},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1121},{"krate":0,"index":5420},{"krate":0,"index":5423},{"krate":0,"index":5422},{"krate":0,"index":1126},{"krate":0,"index":5425},{"krate":0,"index":5429},{"krate":0,"index":5428},{"krate":0,"index":1129},{"krate":0,"index":1132},{"krate":0,"index":1145},{"krate":0,"index":1153},{"krate":0,"index":1156}],"decl_id":null,"docs":" Traits and functions used to implement parallel iteration.  These are\n low-level details -- users of parallel iterators should not need to\n interact with them directly.  See [the `plumbing` README][r] for a high-level overview.","sig":null,"attributes":[{"value":"/ Traits and functions used to implement parallel iteration.  These are","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":192841,"byte_end":192914,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ low-level details -- users of parallel iterators should not need to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":192915,"byte_end":192986,"line_start":2,"line_end":2,"column_start":1,"column_end":72}},{"value":"/ interact with them directly.  See [the `plumbing` README][r] for a high-level overview.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":192987,"byte_end":193078,"line_start":3,"line_end":3,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193079,"byte_end":193082,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193083,"byte_end":193165,"line_start":5,"line_end":5,"column_start":1,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":1084},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193622,"byte_end":193638,"line_start":20,"line_end":20,"column_start":11,"column_end":27},"name":"ProducerCallback","qualname":"::iter::plumbing::ProducerCallback","value":"ProducerCallback<T>","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087}],"decl_id":null,"docs":" The `ProducerCallback` trait is a kind of generic closure,\n [analogous to `FnOnce`][FnOnce]. See [the corresponding section in\n the plumbing README][r] for more details.","sig":null,"attributes":[{"value":"/ The `ProducerCallback` trait is a kind of generic closure,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193261,"byte_end":193323,"line_start":14,"line_end":14,"column_start":1,"column_end":63}},{"value":"/ [analogous to `FnOnce`][FnOnce]. See [the corresponding section in","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193324,"byte_end":193394,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ the plumbing README][r] for more details.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193395,"byte_end":193440,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193441,"byte_end":193444,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md#producer-callback","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193445,"byte_end":193545,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ [FnOnce]: https://doc.rust-lang.org/std/ops/trait.FnOnce.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193546,"byte_end":193611,"line_start":19,"line_end":19,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1086},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193871,"byte_end":193877,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::iter::plumbing::ProducerCallback::Output","value":"type Output;","parent":{"krate":0,"index":1084},"children":[],"decl_id":null,"docs":" The type of value returned by this callback. Analogous to\n [`Output` from the `FnOnce` trait][Output].","sig":null,"attributes":[{"value":"/ The type of value returned by this callback. Analogous to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193648,"byte_end":193709,"line_start":21,"line_end":21,"column_start":5,"column_end":66}},{"value":"/ [`Output` from the `FnOnce` trait][Output].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193714,"byte_end":193761,"line_start":22,"line_end":22,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193766,"byte_end":193769,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ [Output]: https://doc.rust-lang.org/std/ops/trait.FnOnce.html#associatedtype.Output","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193774,"byte_end":193861,"line_start":24,"line_end":24,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194095,"byte_end":194103,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"callback","qualname":"::iter::plumbing::ProducerCallback::callback","value":"pub fn callback<P>(Self, P) -> Self::Output where P: Producer<Item = T>","parent":{"krate":0,"index":1084},"children":[],"decl_id":null,"docs":" Invokes the callback with the given producer as argument. The\n key point of this trait is that this method is generic over\n `P`, and hence implementors must be defined for any producer.\n","sig":null,"attributes":[{"value":"/ Invokes the callback with the given producer as argument. The","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193884,"byte_end":193949,"line_start":27,"line_end":27,"column_start":5,"column_end":70}},{"value":"/ key point of this trait is that this method is generic over","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193954,"byte_end":194017,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"/ `P`, and hence implementors must be defined for any producer.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194022,"byte_end":194087,"line_start":29,"line_end":29,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":1089},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195577,"byte_end":195585,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Producer","qualname":"::iter::plumbing::Producer","value":"Producer: Send + Sized","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"decl_id":null,"docs":" A `Producer` is effectively a \"splittable `IntoIterator`\". That\n is, a producer is a value which can be converted into an iterator\n at any time: at that point, it simply produces items on demand,\n like any iterator. But what makes a `Producer` special is that,\n *before* we convert to an iterator, we can also **split** it at a\n particular point using the `split_at` method. This will yield up\n two producers, one producing the items before that point, and one\n producing the items after that point (these two producers can then\n independently be split further, or be converted into iterators).\n In Rayon, this splitting is used to divide between threads.\n See [the `plumbing` README][r] for further details.","sig":null,"attributes":[{"value":"/ A `Producer` is effectively a \"splittable `IntoIterator`\". That","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194186,"byte_end":194253,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ is, a producer is a value which can be converted into an iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194254,"byte_end":194323,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ at any time: at that point, it simply produces items on demand,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194324,"byte_end":194391,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ like any iterator. But what makes a `Producer` special is that,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194392,"byte_end":194459,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/ *before* we convert to an iterator, we can also **split** it at a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194460,"byte_end":194529,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ particular point using the `split_at` method. This will yield up","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194530,"byte_end":194598,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ two producers, one producing the items before that point, and one","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194599,"byte_end":194668,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"/ producing the items after that point (these two producers can then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194669,"byte_end":194739,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ independently be split further, or be converted into iterators).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194740,"byte_end":194808,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ In Rayon, this splitting is used to divide between threads.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194809,"byte_end":194872,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/ See [the `plumbing` README][r] for further details.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194873,"byte_end":194928,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194929,"byte_end":194932,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that each producer will always produce a fixed number of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194933,"byte_end":194998,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"/ items N. However, this number N is not queryable through the API;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194999,"byte_end":195068,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ the consumer is expected to track it.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195069,"byte_end":195110,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195111,"byte_end":195114,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ NB. You might expect `Producer` to extend the `IntoIterator`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195115,"byte_end":195179,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ trait.  However, [rust-lang/rust#20671][20671] prevents us from","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195180,"byte_end":195247,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/ declaring the DoubleEndedIterator and ExactSizeIterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195248,"byte_end":195307,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ constraints on a required IntoIterator trait, so we inline","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195308,"byte_end":195370,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/ IntoIterator here until that issue is fixed.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195371,"byte_end":195419,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195420,"byte_end":195423,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195424,"byte_end":195506,"line_start":57,"line_end":57,"column_start":1,"column_end":83}},{"value":"/ [20671]: https://github.com/rust-lang/rust/issues/20671","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195507,"byte_end":195566,"line_start":58,"line_end":58,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1090},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195722,"byte_end":195726,"line_start":62,"line_end":62,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::Producer::Item","value":"type Item;","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":" The type of item that will be produced by this producer once\n it is converted into an iterator.\n","sig":null,"attributes":[{"value":"/ The type of item that will be produced by this producer once","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195606,"byte_end":195670,"line_start":60,"line_end":60,"column_start":5,"column_end":69}},{"value":"/ it is converted into an iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195675,"byte_end":195712,"line_start":61,"line_end":61,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":1091},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195783,"byte_end":195791,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"name":"IntoIter","qualname":"::iter::plumbing::Producer::IntoIter","value":"type IntoIter: Iterator<Item = Self::Item> + DoubleEndedIterator + ExactSizeIterator;","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":" The type of iterator we will become.\n","sig":null,"attributes":[{"value":"/ The type of iterator we will become.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195733,"byte_end":195773,"line_start":64,"line_end":64,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195974,"byte_end":195983,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"into_iter","qualname":"::iter::plumbing::Producer::into_iter","value":"pub fn into_iter(Self) -> Self::IntoIter","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":" Convert `self` into an iterator; at this point, no more parallel splits\n are possible.\n","sig":null,"attributes":[{"value":"/ Convert `self` into an iterator; at this point, no more parallel splits","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195869,"byte_end":195944,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ are possible.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195949,"byte_end":195966,"line_start":68,"line_end":68,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196586,"byte_end":196593,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"min_len","qualname":"::iter::plumbing::Producer::min_len","value":"pub fn min_len(&Self) -> usize","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":" The minimum number of items that we will process\n sequentially. Defaults to 1, which means that we will split\n all the way down to a single item. This can be raised higher\n using the [`with_min_len`] method, which will force us to\n create sequential tasks at a larger granularity. Note that\n Rayon automatically normally attempts to adjust the size of\n parallel splits to reduce overhead, so this should not be\n needed.","sig":null,"attributes":[{"value":"/ The minimum number of items that we will process","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196014,"byte_end":196066,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/ sequentially. Defaults to 1, which means that we will split","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196071,"byte_end":196134,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/ all the way down to a single item. This can be raised higher","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196139,"byte_end":196203,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ using the [`with_min_len`] method, which will force us to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196208,"byte_end":196269,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/ create sequential tasks at a larger granularity. Note that","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196274,"byte_end":196336,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/ Rayon automatically normally attempts to adjust the size of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196341,"byte_end":196404,"line_start":76,"line_end":76,"column_start":5,"column_end":68}},{"value":"/ parallel splits to reduce overhead, so this should not be","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196409,"byte_end":196470,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/ needed.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196475,"byte_end":196486,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196491,"byte_end":196494,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ [`with_min_len`]: ../trait.IndexedParallelIterator.html#method.with_min_len","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196499,"byte_end":196578,"line_start":80,"line_end":80,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197158,"byte_end":197165,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"max_len","qualname":"::iter::plumbing::Producer::max_len","value":"pub fn max_len(&Self) -> usize","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":" The maximum number of items that we will process\n sequentially. Defaults to MAX, which means that we can choose\n not to split at all. This can be lowered using the\n [`with_max_len`] method, which will force us to create more\n parallel tasks. Note that Rayon automatically normally\n attempts to adjust the size of parallel splits to reduce\n overhead, so this should not be needed.","sig":null,"attributes":[{"value":"/ The maximum number of items that we will process","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196633,"byte_end":196685,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/ sequentially. Defaults to MAX, which means that we can choose","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196690,"byte_end":196755,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"/ not to split at all. This can be lowered using the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196760,"byte_end":196814,"line_start":87,"line_end":87,"column_start":5,"column_end":59}},{"value":"/ [`with_max_len`] method, which will force us to create more","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196819,"byte_end":196882,"line_start":88,"line_end":88,"column_start":5,"column_end":68}},{"value":"/ parallel tasks. Note that Rayon automatically normally","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196887,"byte_end":196945,"line_start":89,"line_end":89,"column_start":5,"column_end":63}},{"value":"/ attempts to adjust the size of parallel splits to reduce","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196950,"byte_end":197010,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ overhead, so this should not be needed.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197015,"byte_end":197058,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197063,"byte_end":197066,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`with_max_len`]: ../trait.IndexedParallelIterator.html#method.with_max_len","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197071,"byte_end":197150,"line_start":93,"line_end":93,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197353,"byte_end":197361,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Producer::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":" Split into two producers; one produces items `0..index`, the\n other `index..N`. Index must be less than or equal to `N`.\n","sig":null,"attributes":[{"value":"/ Split into two producers; one produces items `0..index`, the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197214,"byte_end":197278,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ other `index..N`. Index must be less than or equal to `N`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197283,"byte_end":197345,"line_start":99,"line_end":99,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197628,"byte_end":197637,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::Producer::fold_with","value":"pub fn fold_with<F>(Self, F) -> F where F: Folder<Self::Item>","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).","sig":null,"attributes":[{"value":"/ Iterate the producer, feeding each element to `folder`, and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197404,"byte_end":197467,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/ stop when the folder is full (or all elements have been consumed).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197472,"byte_end":197542,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197547,"byte_end":197550,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The provided implementation is sufficient for most iterables.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197555,"byte_end":197620,"line_start":105,"line_end":105,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":1098},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198585,"byte_end":198593,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::iter::plumbing::Consumer","value":"Consumer<Item>: Send + Sized","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105}],"decl_id":null,"docs":" A consumer is effectively a [generalized \"fold\" operation][fold],\n and in fact each consumer will eventually be converted into a\n [`Folder`]. What makes a consumer special is that, like a\n [`Producer`], it can be **split** into multiple consumers using\n the `split_at` method. When a consumer is split, it produces two\n consumers, as well as a **reducer**. The two consumers can be fed\n items independently, and when they are done the reducer is used to\n combine their two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[{"value":"/ A consumer is effectively a [generalized \"fold\" operation][fold],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197765,"byte_end":197834,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ and in fact each consumer will eventually be converted into a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197835,"byte_end":197900,"line_start":115,"line_end":115,"column_start":1,"column_end":66}},{"value":"/ [`Folder`]. What makes a consumer special is that, like a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197901,"byte_end":197962,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ [`Producer`], it can be **split** into multiple consumers using","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197963,"byte_end":198030,"line_start":117,"line_end":117,"column_start":1,"column_end":68}},{"value":"/ the `split_at` method. When a consumer is split, it produces two","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198031,"byte_end":198099,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ consumers, as well as a **reducer**. The two consumers can be fed","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198100,"byte_end":198169,"line_start":119,"line_end":119,"column_start":1,"column_end":70}},{"value":"/ items independently, and when they are done the reducer is used to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198170,"byte_end":198240,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/ combine their two results into one. See [the `plumbing`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198241,"byte_end":198300,"line_start":121,"line_end":121,"column_start":1,"column_end":60}},{"value":"/ README][r] for further details.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198301,"byte_end":198336,"line_start":122,"line_end":122,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198337,"byte_end":198340,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198341,"byte_end":198423,"line_start":124,"line_end":124,"column_start":1,"column_end":83}},{"value":"/ [fold]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198424,"byte_end":198502,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ [`Folder`]: trait.Folder.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198503,"byte_end":198536,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/ [`Producer`]: trait.Producer.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198537,"byte_end":198574,"line_start":127,"line_end":127,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1100},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198694,"byte_end":198700,"line_start":130,"line_end":130,"column_start":10,"column_end":16},"name":"Folder","qualname":"::iter::plumbing::Consumer::Folder","value":"type Folder: Folder<Item, Result = Self::Result>;","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" The type of folder that this consumer can be converted into.\n","sig":null,"attributes":[{"value":"/ The type of folder that this consumer can be converted into.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198620,"byte_end":198684,"line_start":129,"line_end":129,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1101},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198821,"byte_end":198828,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"name":"Reducer","qualname":"::iter::plumbing::Consumer::Reducer","value":"type Reducer: Reducer<Self::Result>;","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" The type of reducer that is produced if this consumer is split.\n","sig":null,"attributes":[{"value":"/ The type of reducer that is produced if this consumer is split.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198744,"byte_end":198811,"line_start":132,"line_end":132,"column_start":5,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":1102},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198934,"byte_end":198940,"line_start":136,"line_end":136,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Consumer::Result","value":"type Result: Send;","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" The type of result that this consumer will ultimately produce.\n","sig":null,"attributes":[{"value":"/ The type of result that this consumer will ultimately produce.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198858,"byte_end":198924,"line_start":135,"line_end":135,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199176,"byte_end":199184,"line_start":142,"line_end":142,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Consumer::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self, Self::Reducer)","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Divide the consumer into two consumers, one processing items\n `0..index` and one processing items from `index..`. Also\n produces a reducer that can be used to reduce the results at\n the end.\n","sig":null,"attributes":[{"value":"/ Divide the consumer into two consumers, one processing items","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198953,"byte_end":199017,"line_start":138,"line_end":138,"column_start":5,"column_end":69}},{"value":"/ `0..index` and one processing items from `index..`. Also","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199022,"byte_end":199082,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ produces a reducer that can be used to reduce the results at","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199087,"byte_end":199151,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/ the end.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199156,"byte_end":199168,"line_start":141,"line_end":141,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199370,"byte_end":199381,"line_start":146,"line_end":146,"column_start":8,"column_end":19},"name":"into_folder","qualname":"::iter::plumbing::Consumer::into_folder","value":"pub fn into_folder(Self) -> Self::Folder","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Convert the consumer into a folder that can consume items\n sequentially, eventually producing a final result.\n","sig":null,"attributes":[{"value":"/ Convert the consumer into a folder that can consume items","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199242,"byte_end":199303,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/ sequentially, eventually producing a final result.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199308,"byte_end":199362,"line_start":145,"line_end":145,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199540,"byte_end":199544,"line_start":150,"line_end":150,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Consumer::full","value":"pub fn full(&Self) -> bool","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Hint whether this `Consumer` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[{"value":"/ Hint whether this `Consumer` would like to stop processing","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199410,"byte_end":199472,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/ further items, e.g. if a search has been completed.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199477,"byte_end":199532,"line_start":149,"line_end":149,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1106},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199907,"byte_end":199913,"line_start":159,"line_end":159,"column_start":11,"column_end":17},"name":"Folder","qualname":"::iter::plumbing::Folder","value":"Folder<Item>: Sized","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1113}],"decl_id":null,"docs":" The `Folder` trait encapsulates [the standard fold\n operation][fold].  It can be fed many items using the `consume`\n method. At the end, once all items have been consumed, it can then\n be converted (using `complete`) into a final value.","sig":null,"attributes":[{"value":"/ The `Folder` trait encapsulates [the standard fold","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199564,"byte_end":199618,"line_start":153,"line_end":153,"column_start":1,"column_end":55}},{"value":"/ operation][fold].  It can be fed many items using the `consume`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199619,"byte_end":199686,"line_start":154,"line_end":154,"column_start":1,"column_end":68}},{"value":"/ method. At the end, once all items have been consumed, it can then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199687,"byte_end":199757,"line_start":155,"line_end":155,"column_start":1,"column_end":71}},{"value":"/ be converted (using `complete`) into a final value.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199758,"byte_end":199813,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199814,"byte_end":199817,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [fold]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199818,"byte_end":199896,"line_start":158,"line_end":158,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":1108},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200013,"byte_end":200019,"line_start":161,"line_end":161,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Folder::Result","value":"type Result;","parent":{"krate":0,"index":1106},"children":[],"decl_id":null,"docs":" The type of result that will ultimately be produced by the folder.\n","sig":null,"attributes":[{"value":"/ The type of result that will ultimately be produced by the folder.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199933,"byte_end":200003,"line_start":160,"line_end":160,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200088,"byte_end":200095,"line_start":164,"line_end":164,"column_start":8,"column_end":15},"name":"consume","qualname":"::iter::plumbing::Folder::consume","value":"pub fn consume(Self, Item) -> Self","parent":{"krate":0,"index":1106},"children":[],"decl_id":null,"docs":" Consume next item and return new sequential state.\n","sig":null,"attributes":[{"value":"/ Consume next item and return new sequential state.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200026,"byte_end":200080,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200524,"byte_end":200536,"line_start":174,"line_end":174,"column_start":8,"column_end":20},"name":"consume_iter","qualname":"::iter::plumbing::Folder::consume_iter","value":"pub fn consume_iter<I>(Self, I) -> Self where I: IntoIterator<Item = Item>","parent":{"krate":0,"index":1106},"children":[],"decl_id":null,"docs":" Consume items from the iterator until full, and return new sequential state.","sig":null,"attributes":[{"value":"/ Consume items from the iterator until full, and return new sequential state.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200128,"byte_end":200208,"line_start":166,"line_end":166,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200213,"byte_end":200216,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This method is **optional**. The default simply iterates over","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200221,"byte_end":200286,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ `iter`, invoking `consume` and checking after each iteration","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200291,"byte_end":200355,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ whether `full` returns false.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200360,"byte_end":200393,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200398,"byte_end":200401,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The main reason to override it is if you can provide a more","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200406,"byte_end":200469,"line_start":172,"line_end":172,"column_start":5,"column_end":68}},{"value":"/ specialized, efficient implementation.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200474,"byte_end":200516,"line_start":173,"line_end":173,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200844,"byte_end":200852,"line_start":188,"line_end":188,"column_start":8,"column_end":16},"name":"complete","qualname":"::iter::plumbing::Folder::complete","value":"pub fn complete(Self) -> Self::Result","parent":{"krate":0,"index":1106},"children":[],"decl_id":null,"docs":" Finish consuming items, produce final result.\n","sig":null,"attributes":[{"value":"/ Finish consuming items, produce final result.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200787,"byte_end":200836,"line_start":187,"line_end":187,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201009,"byte_end":201013,"line_start":192,"line_end":192,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Folder::full","value":"pub fn full(&Self) -> bool","parent":{"krate":0,"index":1106},"children":[],"decl_id":null,"docs":" Hint whether this `Folder` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[{"value":"/ Hint whether this `Folder` would like to stop processing","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200881,"byte_end":200941,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/ further items, e.g. if a search has been completed.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200946,"byte_end":201001,"line_start":191,"line_end":191,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1114},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201443,"byte_end":201450,"line_start":202,"line_end":202,"column_start":11,"column_end":18},"name":"Reducer","qualname":"::iter::plumbing::Reducer","value":"Reducer<Result>","parent":null,"children":[{"krate":0,"index":1116}],"decl_id":null,"docs":" The reducer is the final step of a `Consumer` -- after a consumer\n has been split into two parts, and each of those parts has been\n fully processed, we are left with two results. The reducer is then\n used to combine those two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[{"value":"/ The reducer is the final step of a `Consumer` -- after a consumer","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201033,"byte_end":201102,"line_start":195,"line_end":195,"column_start":1,"column_end":70}},{"value":"/ has been split into two parts, and each of those parts has been","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201103,"byte_end":201170,"line_start":196,"line_end":196,"column_start":1,"column_end":68}},{"value":"/ fully processed, we are left with two results. The reducer is then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201171,"byte_end":201241,"line_start":197,"line_end":197,"column_start":1,"column_end":71}},{"value":"/ used to combine those two results into one. See [the `plumbing`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201242,"byte_end":201309,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ README][r] for further details.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201310,"byte_end":201345,"line_start":199,"line_end":199,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201346,"byte_end":201349,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201350,"byte_end":201432,"line_start":201,"line_end":201,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201551,"byte_end":201557,"line_start":205,"line_end":205,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::plumbing::Reducer::reduce","value":"pub fn reduce(Self, Result, Result) -> Result","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Reduce two final results into one; this is executed after a\n split.\n","sig":null,"attributes":[{"value":"/ Reduce two final results into one; this is executed after a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201465,"byte_end":201528,"line_start":203,"line_end":203,"column_start":5,"column_end":68}},{"value":"/ split.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201533,"byte_end":201543,"line_start":204,"line_end":204,"column_start":5,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1117},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201919,"byte_end":201936,"line_start":213,"line_end":213,"column_start":11,"column_end":28},"name":"UnindexedConsumer","qualname":"::iter::plumbing::UnindexedConsumer","value":"UnindexedConsumer<I>: Consumer<I>","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120}],"decl_id":null,"docs":" A stateless consumer can be freely copied. These consumers can be\n used like regular consumers, but they also support a\n `split_off_left` method that does not take an index to split, but\n simply splits at some arbitrary point (`for_each`, for example,\n produces an unindexed consumer).\n","sig":null,"attributes":[{"value":"/ A stateless consumer can be freely copied. These consumers can be","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201607,"byte_end":201676,"line_start":208,"line_end":208,"column_start":1,"column_end":70}},{"value":"/ used like regular consumers, but they also support a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201677,"byte_end":201733,"line_start":209,"line_end":209,"column_start":1,"column_end":57}},{"value":"/ `split_off_left` method that does not take an index to split, but","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201734,"byte_end":201803,"line_start":210,"line_end":210,"column_start":1,"column_end":70}},{"value":"/ simply splits at some arbitrary point (`for_each`, for example,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201804,"byte_end":201871,"line_start":211,"line_end":211,"column_start":1,"column_end":68}},{"value":"/ produces an unindexed consumer).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201872,"byte_end":201908,"line_start":212,"line_end":212,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202412,"byte_end":202426,"line_start":221,"line_end":221,"column_start":8,"column_end":22},"name":"split_off_left","qualname":"::iter::plumbing::UnindexedConsumer::split_off_left","value":"pub fn split_off_left(&Self) -> Self","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" Splits off a \"left\" consumer and returns it. The `self`\n consumer should then be used to consume the \"right\" portion of\n the data. (The ordering matters for methods like find_first --\n values produced by the returned value are given precedence\n over values produced by `self`.) Once the left and right\n halves have been fully consumed, you should reduce the results\n with the result of `to_reducer`.\n","sig":null,"attributes":[{"value":"/ Splits off a \"left\" consumer and returns it. The `self`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201959,"byte_end":202018,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/ consumer should then be used to consume the \"right\" portion of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202023,"byte_end":202089,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/ the data. (The ordering matters for methods like find_first --","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202094,"byte_end":202160,"line_start":216,"line_end":216,"column_start":5,"column_end":71}},{"value":"/ values produced by the returned value are given precedence","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202165,"byte_end":202227,"line_start":217,"line_end":217,"column_start":5,"column_end":67}},{"value":"/ over values produced by `self`.) Once the left and right","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202232,"byte_end":202292,"line_start":218,"line_end":218,"column_start":5,"column_end":65}},{"value":"/ halves have been fully consumed, you should reduce the results","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202297,"byte_end":202363,"line_start":219,"line_end":219,"column_start":5,"column_end":71}},{"value":"/ with the result of `to_reducer`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202368,"byte_end":202404,"line_start":220,"line_end":220,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202548,"byte_end":202558,"line_start":225,"line_end":225,"column_start":8,"column_end":18},"name":"to_reducer","qualname":"::iter::plumbing::UnindexedConsumer::to_reducer","value":"pub fn to_reducer(&Self) -> Self::Reducer","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" Creates a reducer that can be used to combine the results from\n a split consumer.\n","sig":null,"attributes":[{"value":"/ Creates a reducer that can be used to combine the results from","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202448,"byte_end":202514,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"/ a split consumer.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202519,"byte_end":202540,"line_start":224,"line_end":224,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":1121},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203035,"byte_end":203052,"line_start":236,"line_end":236,"column_start":11,"column_end":28},"name":"UnindexedProducer","qualname":"::iter::plumbing::UnindexedProducer","value":"UnindexedProducer: Send + Sized","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124}],"decl_id":null,"docs":" A variant on `Producer` which does not know its exact length or\n cannot represent it in a `usize`. These producers act like\n ordinary producers except that they cannot be told to split at a\n particular point. Instead, you just ask them to split 'somewhere'.","sig":null,"attributes":[{"value":"/ A variant on `Producer` which does not know its exact length or","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202587,"byte_end":202654,"line_start":228,"line_end":228,"column_start":1,"column_end":68}},{"value":"/ cannot represent it in a `usize`. These producers act like","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202655,"byte_end":202717,"line_start":229,"line_end":229,"column_start":1,"column_end":63}},{"value":"/ ordinary producers except that they cannot be told to split at a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202718,"byte_end":202786,"line_start":230,"line_end":230,"column_start":1,"column_end":69}},{"value":"/ particular point. Instead, you just ask them to split 'somewhere'.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202787,"byte_end":202857,"line_start":231,"line_end":231,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202858,"byte_end":202861,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ (In principle, `Producer` could extend this trait; however, it","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202862,"byte_end":202928,"line_start":233,"line_end":233,"column_start":1,"column_end":67}},{"value":"/ does not because to do so would require producers to carry their","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202929,"byte_end":202997,"line_start":234,"line_end":234,"column_start":1,"column_end":69}},{"value":"/ own length with them.)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202998,"byte_end":203024,"line_start":235,"line_end":235,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":1122},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203130,"byte_end":203134,"line_start":238,"line_end":238,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::UnindexedProducer::Item","value":"type Item;","parent":{"krate":0,"index":1121},"children":[],"decl_id":null,"docs":" The type of item returned by this producer.\n","sig":null,"attributes":[{"value":"/ The type of item returned by this producer.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203073,"byte_end":203120,"line_start":237,"line_end":237,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203223,"byte_end":203228,"line_start":241,"line_end":241,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::plumbing::UnindexedProducer::split","value":"pub fn split(Self) -> (Self, Option<Self>)","parent":{"krate":0,"index":1121},"children":[],"decl_id":null,"docs":" Split midway into a new producer if possible, otherwise return `None`.\n","sig":null,"attributes":[{"value":"/ Split midway into a new producer if possible, otherwise return `None`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203141,"byte_end":203215,"line_start":240,"line_end":240,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203411,"byte_end":203420,"line_start":245,"line_end":245,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::UnindexedProducer::fold_with","value":"pub fn fold_with<F>(Self, F) -> F where F: Folder<Self::Item>","parent":{"krate":0,"index":1121},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).\n","sig":null,"attributes":[{"value":"/ Iterate the producer, feeding each element to `folder`, and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203265,"byte_end":203328,"line_start":243,"line_end":243,"column_start":5,"column_end":68}},{"value":"/ stop when the folder is full (or all elements have been consumed).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203333,"byte_end":203403,"line_start":244,"line_end":244,"column_start":5,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":1132},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207239,"byte_end":207245,"line_start":351,"line_end":351,"column_start":8,"column_end":14},"name":"bridge","qualname":"::iter::plumbing::bridge","value":"pub fn bridge<I, C>(I, C) -> C::Result where I: IndexedParallelIterator,\nC: Consumer<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a parallel iterator to a\n consumer. It will convert the `par_iter` into a producer P and\n then pull items from P and feed them to `consumer`, splitting and\n creating parallel threads as needed.","sig":null,"attributes":[{"value":"/ This helper function is used to \"connect\" a parallel iterator to a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":206660,"byte_end":206730,"line_start":340,"line_end":340,"column_start":1,"column_end":71}},{"value":"/ consumer. It will convert the `par_iter` into a producer P and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":206731,"byte_end":206797,"line_start":341,"line_end":341,"column_start":1,"column_end":67}},{"value":"/ then pull items from P and feed them to `consumer`, splitting and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":206798,"byte_end":206867,"line_start":342,"line_end":342,"column_start":1,"column_end":70}},{"value":"/ creating parallel threads as needed.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":206868,"byte_end":206908,"line_start":343,"line_end":343,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":206909,"byte_end":206912,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ This is useful when you are implementing your own parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":206913,"byte_end":206975,"line_start":345,"line_end":345,"column_start":1,"column_end":63}},{"value":"/ iterators: it is often used as the definition of the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":206976,"byte_end":207032,"line_start":346,"line_end":346,"column_start":1,"column_end":57}},{"value":"/ [`drive_unindexed`] or [`drive`] methods.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207033,"byte_end":207078,"line_start":347,"line_end":347,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207079,"byte_end":207082,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ [`drive_unindexed`]: ../trait.ParallelIterator.html#tymethod.drive_unindexed","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207083,"byte_end":207163,"line_start":349,"line_end":349,"column_start":1,"column_end":81}},{"value":"/ [`drive`]: ../trait.IndexedParallelIterator.html#tymethod.drive","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207164,"byte_end":207231,"line_start":350,"line_end":350,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1145},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":208491,"byte_end":208515,"line_start":391,"line_end":391,"column_start":8,"column_end":32},"name":"bridge_producer_consumer","qualname":"::iter::plumbing::bridge_producer_consumer","value":"pub fn bridge_producer_consumer<P, C>(usize, P, C) -> C::Result where\nP: Producer, C: Consumer<P::Item>","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a producer and a\n consumer. You may prefer to call [`bridge`], which wraps this\n function. This function will draw items from `producer` and feed\n them to `consumer`, splitting and creating parallel tasks when\n needed.","sig":null,"attributes":[{"value":"/ This helper function is used to \"connect\" a producer and a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207853,"byte_end":207915,"line_start":378,"line_end":378,"column_start":1,"column_end":63}},{"value":"/ consumer. You may prefer to call [`bridge`], which wraps this","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207916,"byte_end":207981,"line_start":379,"line_end":379,"column_start":1,"column_end":66}},{"value":"/ function. This function will draw items from `producer` and feed","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207982,"byte_end":208050,"line_start":380,"line_end":380,"column_start":1,"column_end":69}},{"value":"/ them to `consumer`, splitting and creating parallel tasks when","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":208051,"byte_end":208117,"line_start":381,"line_end":381,"column_start":1,"column_end":67}},{"value":"/ needed.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":208118,"byte_end":208129,"line_start":382,"line_end":382,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":208130,"byte_end":208133,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ This is useful when you are implementing your own parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":208134,"byte_end":208196,"line_start":384,"line_end":384,"column_start":1,"column_end":63}},{"value":"/ iterators: it is often used as the definition of the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":208197,"byte_end":208253,"line_start":385,"line_end":385,"column_start":1,"column_end":57}},{"value":"/ [`drive_unindexed`] or [`drive`] methods.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":208254,"byte_end":208299,"line_start":386,"line_end":386,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":208300,"byte_end":208303,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ [`bridge`]: fn.bridge.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":208304,"byte_end":208334,"line_start":388,"line_end":388,"column_start":1,"column_end":31}},{"value":"/ [`drive_unindexed`]: ../trait.ParallelIterator.html#tymethod.drive_unindexed","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":208335,"byte_end":208415,"line_start":389,"line_end":389,"column_start":1,"column_end":81}},{"value":"/ [`drive`]: ../trait.IndexedParallelIterator.html#tymethod.drive","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":208416,"byte_end":208483,"line_start":390,"line_end":390,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1153},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":210291,"byte_end":210307,"line_start":446,"line_end":446,"column_start":8,"column_end":24},"name":"bridge_unindexed","qualname":"::iter::plumbing::bridge_unindexed","value":"pub fn bridge_unindexed<P, C>(P, C) -> C::Result where P: UnindexedProducer,\nC: UnindexedConsumer<P::Item>","parent":null,"children":[],"decl_id":null,"docs":" A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","sig":null,"attributes":[{"value":"/ A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":210122,"byte_end":210212,"line_start":443,"line_end":443,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":210213,"byte_end":210216,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ [`bridge_producer_consumer`]: fn.bridge_producer_consumer.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":210217,"byte_end":210283,"line_start":445,"line_end":445,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5431},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212588,"byte_end":212595,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::iter::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":5436},{"krate":0,"index":5437},{"krate":0,"index":5438},{"krate":0,"index":5439}],"decl_id":null,"docs":" `TryFold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `TryFold` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212188,"byte_end":212283,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212284,"byte_end":212363,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212364,"byte_end":212367,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`try_fold()`]: trait.ParallelIterator.html#method.try_fold","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212368,"byte_end":212431,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212432,"byte_end":212485,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212486,"byte_end":212559,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5446},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216549,"byte_end":216560,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"TryFoldWith","qualname":"::iter::try_fold::TryFoldWith","value":"TryFoldWith {  }","parent":null,"children":[{"krate":0,"index":5450},{"krate":0,"index":5451},{"krate":0,"index":5452}],"decl_id":null,"docs":" `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216130,"byte_end":216229,"line_start":183,"line_end":183,"column_start":1,"column_end":100}},{"value":"/ This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216230,"byte_end":216314,"line_start":184,"line_end":184,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216315,"byte_end":216318,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ [`try_fold_with()`]: trait.ParallelIterator.html#method.try_fold_with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216319,"byte_end":216392,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216393,"byte_end":216446,"line_start":187,"line_end":187,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216447,"byte_end":216520,"line_start":188,"line_end":188,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5458},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221794,"byte_end":221798,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Skip","qualname":"::iter::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":5460},{"krate":0,"index":5461}],"decl_id":null,"docs":" `Skip` is an iterator that skips over the first `n` elements.\n This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Skip` is an iterator that skips over the first `n` elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221401,"byte_end":221466,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221467,"byte_end":221549,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221550,"byte_end":221553,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`skip()`]: trait.IndexedParallelIterator.html#method.skip","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221554,"byte_end":221616,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221617,"byte_end":221684,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221685,"byte_end":221758,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1517},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233711,"byte_end":233716,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::splitter::split","value":"pub fn split<D, S>(D, S) -> Split<D, S> where D: Send, S: Fn(D) ->\n(D, Option<D>) + Sync","parent":null,"children":[],"decl_id":null,"docs":" The `split` function takes arbitrary data and a closure that knows how to\n split it, and turns this into a `ParallelIterator`.","sig":null,"attributes":[{"value":"/ The `split` function takes arbitrary data and a closure that knows how to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":229827,"byte_end":229904,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ split it, and turns this into a `ParallelIterator`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":229905,"byte_end":229960,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":229961,"byte_end":229964,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":229965,"byte_end":229979,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":229980,"byte_end":229983,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ As a simple example, Rayon can recursively split ranges of indices","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":229984,"byte_end":230054,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230055,"byte_end":230058,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230059,"byte_end":230066,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use rayon::iter;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230067,"byte_end":230087,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230088,"byte_end":230114,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use std::ops::Range;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230115,"byte_end":230139,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230140,"byte_end":230143,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230144,"byte_end":230147,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // We define a range of indices as follows","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230148,"byte_end":230194,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ type Range1D = Range<usize>;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230195,"byte_end":230227,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230228,"byte_end":230231,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Splitting it in two can be done like this","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230232,"byte_end":230280,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ fn split_range1(r: Range1D) -> (Range1D, Option<Range1D>) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230281,"byte_end":230344,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/     // We are mathematically unable to split the range if there is only","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230345,"byte_end":230420,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/     // one point inside of it, but we could stop splitting before that.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230421,"byte_end":230496,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/     if r.end - r.start <= 1 { return (r, None); }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230497,"byte_end":230550,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230551,"byte_end":230554,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     // Here, our range is considered large enough to be splittable","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230555,"byte_end":230625,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/     let midpoint = r.start + (r.end - r.start) / 2;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230626,"byte_end":230681,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/     (r.start..midpoint, Some(midpoint..r.end))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230682,"byte_end":230732,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230733,"byte_end":230738,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230739,"byte_end":230742,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // By using iter::split, Rayon will split the range until it has enough work","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230743,"byte_end":230823,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ // to feed the CPU cores, then give us the resulting sub-ranges","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230824,"byte_end":230891,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ iter::split(0..4096, split_range1).for_each(|sub_range| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230892,"byte_end":230953,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/     // As our initial range had a power-of-two size, the final sub-ranges","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":230954,"byte_end":231031,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/     // should have power-of-two sizes too","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231032,"byte_end":231077,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/     assert!((sub_range.end - sub_range.start).is_power_of_two());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231078,"byte_end":231147,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231148,"byte_end":231155,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231156,"byte_end":231163,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231164,"byte_end":231167,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This recursive splitting can be extended to two or three dimensions,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231168,"byte_end":231240,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ to reproduce a classic \"block-wise\" parallelization scheme of graphics and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231241,"byte_end":231319,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ numerical simulations:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231320,"byte_end":231346,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231347,"byte_end":231350,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231351,"byte_end":231358,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ # use rayon::iter;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231359,"byte_end":231381,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/ # use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231382,"byte_end":231410,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ # use std::ops::Range;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231411,"byte_end":231437,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ # type Range1D = Range<usize>;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231438,"byte_end":231472,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ # fn split_range1(r: Range1D) -> (Range1D, Option<Range1D>) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231473,"byte_end":231538,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/ #     if r.end - r.start <= 1 { return (r, None); }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231539,"byte_end":231594,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/ #     let midpoint = r.start + (r.end - r.start) / 2;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231595,"byte_end":231652,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/ #     (r.start..midpoint, Some(midpoint..r.end))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231653,"byte_end":231705,"line_start":54,"line_end":54,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231706,"byte_end":231713,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231714,"byte_end":231719,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ // A two-dimensional range of indices can be built out of two 1D ones","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231720,"byte_end":231793,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ struct Range2D {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231794,"byte_end":231814,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/     // Range of horizontal indices","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231815,"byte_end":231853,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/     pub rx: Range1D,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231854,"byte_end":231878,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231879,"byte_end":231882,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     // Range of vertical indices","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231883,"byte_end":231919,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/     pub ry: Range1D,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231920,"byte_end":231944,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231945,"byte_end":231950,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231951,"byte_end":231954,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // We want to recursively split them by the largest dimension until we have","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":231955,"byte_end":232034,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ // enough sub-ranges to feed our mighty multi-core CPU. This function","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232035,"byte_end":232108,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ // carries out one such split.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232109,"byte_end":232143,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ fn split_range2(r2: Range2D) -> (Range2D, Option<Range2D>) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232144,"byte_end":232208,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/     // Decide on which axis (horizontal/vertical) the range should be split","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232209,"byte_end":232288,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/     let width = r2.rx.end - r2.rx.start;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232289,"byte_end":232333,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     let height = r2.ry.end - r2.ry.start;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232334,"byte_end":232379,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/     if width >= height {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232380,"byte_end":232408,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/         // This is a wide range, split it on the horizontal axis","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232409,"byte_end":232477,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/         let (split_rx, ry) = (split_range1(r2.rx), r2.ry);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232478,"byte_end":232540,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/         let out1 = Range2D {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232541,"byte_end":232573,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/             rx: split_rx.0,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232574,"byte_end":232605,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/             ry: ry.clone(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232606,"byte_end":232637,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"/         };","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232638,"byte_end":232652,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/         let out2 = split_rx.1.map(|rx| Range2D { rx, ry });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232653,"byte_end":232716,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/         (out1, out2)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232717,"byte_end":232741,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/     } else {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232742,"byte_end":232758,"line_start":82,"line_end":82,"column_start":1,"column_end":17}},{"value":"/         // This is a tall range, split it on the vertical axis","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232759,"byte_end":232825,"line_start":83,"line_end":83,"column_start":1,"column_end":67}},{"value":"/         let (rx, split_ry) = (r2.rx, split_range1(r2.ry));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232826,"byte_end":232888,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/         let out1 = Range2D {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232889,"byte_end":232921,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/             rx: rx.clone(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232922,"byte_end":232953,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/             ry: split_ry.0,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232954,"byte_end":232985,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/         };","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":232986,"byte_end":233000,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/         let out2 = split_ry.1.map(|ry| Range2D { rx, ry, });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233001,"byte_end":233065,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/         (out1, out2)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233066,"byte_end":233090,"line_start":90,"line_end":90,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233091,"byte_end":233100,"line_start":91,"line_end":91,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233101,"byte_end":233106,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233107,"byte_end":233110,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // Again, rayon can handle the recursive splitting for us","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233111,"byte_end":233172,"line_start":94,"line_end":94,"column_start":1,"column_end":62}},{"value":"/ let range = Range2D { rx: 0..800, ry: 0..600 };","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233173,"byte_end":233224,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/ iter::split(range, split_range2).for_each(|sub_range| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233225,"byte_end":233284,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/     // If the sub-ranges were indeed split by the largest dimension, then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233285,"byte_end":233362,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/     // if no dimension was twice larger than the other initially, this","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233363,"byte_end":233437,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/     // property will remain true in the final sub-ranges.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233438,"byte_end":233499,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/     let width = sub_range.rx.end - sub_range.rx.start;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233500,"byte_end":233558,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/     let height = sub_range.ry.end - sub_range.ry.start;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233559,"byte_end":233618,"line_start":101,"line_end":101,"column_start":1,"column_end":60}},{"value":"/     assert!((width / 2 <= height) && (height / 2 <= width));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233619,"byte_end":233683,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233684,"byte_end":233691,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233692,"byte_end":233699,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233700,"byte_end":233703,"line_start":105,"line_end":105,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":5468},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234053,"byte_end":234058,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Split","qualname":"::iter::splitter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":5471},{"krate":0,"index":5472}],"decl_id":null,"docs":" `Split` is a parallel iterator using arbitrary data and a splitting function.\n This struct is created by the [`split()`] function.","sig":null,"attributes":[{"value":"/ `Split` is a parallel iterator using arbitrary data and a splitting function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233852,"byte_end":233933,"line_start":114,"line_end":114,"column_start":1,"column_end":82}},{"value":"/ This struct is created by the [`split()`] function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233934,"byte_end":233989,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233990,"byte_end":233993,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`split()`]: fn.split.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233994,"byte_end":234024,"line_start":117,"line_end":117,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5477},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235732,"byte_end":235736,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::iter::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":5479},{"krate":0,"index":5480}],"decl_id":null,"docs":" `Take` is an iterator that iterates over the first `n` elements.\n This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Take` is an iterator that iterates over the first `n` elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235336,"byte_end":235404,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235405,"byte_end":235487,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235488,"byte_end":235491,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`take()`]: trait.IndexedParallelIterator.html#method.take","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235492,"byte_end":235554,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235555,"byte_end":235622,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235623,"byte_end":235696,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5487},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237760,"byte_end":237763,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Map","qualname":"::iter::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5490},{"krate":0,"index":5491}],"decl_id":null,"docs":" `Map` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Map` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237386,"byte_end":237466,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237467,"byte_end":237470,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237471,"byte_end":237545,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237546,"byte_end":237549,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`map()`]: trait.ParallelIterator.html#method.map","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237550,"byte_end":237603,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237604,"byte_end":237657,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237658,"byte_end":237731,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5496},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243737,"byte_end":243744,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"MapWith","qualname":"::iter::map_with::MapWith","value":"MapWith {  }","parent":null,"children":[{"krate":0,"index":5500},{"krate":0,"index":5501},{"krate":0,"index":5502}],"decl_id":null,"docs":" `MapWith` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `MapWith` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243344,"byte_end":243428,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243429,"byte_end":243432,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map_with()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243433,"byte_end":243512,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243513,"byte_end":243516,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`map_with()`]: trait.ParallelIterator.html#method.map_with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243517,"byte_end":243580,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243581,"byte_end":243634,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243635,"byte_end":243708,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5508},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251804,"byte_end":251811,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"MapInit","qualname":"::iter::map_with::MapInit","value":"MapInit {  }","parent":null,"children":[{"krate":0,"index":5512},{"krate":0,"index":5513},{"krate":0,"index":5514}],"decl_id":null,"docs":" `MapInit` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `MapInit` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251411,"byte_end":251495,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251496,"byte_end":251499,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map_init()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251500,"byte_end":251579,"line_start":340,"line_end":340,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251580,"byte_end":251583,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ [`map_init()`]: trait.ParallelIterator.html#method.map_init","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251584,"byte_end":251647,"line_start":342,"line_end":342,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251648,"byte_end":251701,"line_start":343,"line_end":343,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251702,"byte_end":251775,"line_start":344,"line_end":344,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5520},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":257988,"byte_end":257991,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Zip","qualname":"::iter::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":5523},{"krate":0,"index":5524}],"decl_id":null,"docs":" `Zip` is an iterator that zips up `a` and `b` into a single iterator\n of pairs. This struct is created by the [`zip()`] method on\n [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Zip` is an iterator that zips up `a` and `b` into a single iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":257577,"byte_end":257649,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ of pairs. This struct is created by the [`zip()`] method on","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":257650,"byte_end":257713,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ [`IndexedParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":257714,"byte_end":257745,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":257746,"byte_end":257749,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`zip()`]: trait.IndexedParallelIterator.html#method.zip","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":257750,"byte_end":257810,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":257811,"byte_end":257878,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":257879,"byte_end":257952,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5533},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":261977,"byte_end":261982,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::iter::zip_eq::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":5536}],"decl_id":null,"docs":" An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal\n length simultaneously.","sig":null,"attributes":[{"value":"/ An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":261482,"byte_end":261567,"line_start":4,"line_end":4,"column_start":1,"column_end":86}},{"value":"/ length simultaneously.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":261568,"byte_end":261594,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":261595,"byte_end":261598,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`zip_eq`] method on [`IndexedParallelIterator`],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":261599,"byte_end":261682,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ see its documentation for more information.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":261683,"byte_end":261730,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":261731,"byte_end":261734,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`zip_eq`]: trait.IndexedParallelIterator.html#method.zip_eq","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":261735,"byte_end":261799,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":261800,"byte_end":261867,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":261868,"byte_end":261941,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5545},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265650,"byte_end":265658,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"MultiZip","qualname":"::iter::multizip::MultiZip","value":"MultiZip {  }","parent":null,"children":[{"krate":0,"index":5547}],"decl_id":null,"docs":" `MultiZip` is an iterator that zips up a tuple of parallel iterators to\n produce tuples of their items.","sig":null,"attributes":[{"value":"/ `MultiZip` is an iterator that zips up a tuple of parallel iterators to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263234,"byte_end":263309,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ produce tuples of their items.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263310,"byte_end":263344,"line_start":5,"line_end":5,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263345,"byte_end":263348,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It is created by calling `into_par_iter()` on a tuple of types that","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263349,"byte_end":263420,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ implement `IntoParallelIterator`, or `par_iter()`/`par_iter_mut()` with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263421,"byte_end":263496,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ types that are iterable by reference.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263497,"byte_end":263538,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263539,"byte_end":263542,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The implementation currently support tuples up to length 12.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263543,"byte_end":263607,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263608,"byte_end":263611,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263612,"byte_end":263626,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263627,"byte_end":263630,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263631,"byte_end":263638,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263639,"byte_end":263665,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263666,"byte_end":263669,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // This will iterate `r` by mutable reference, like `par_iter_mut()`, while","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263670,"byte_end":263749,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ // ranges are all iterated by value like `into_par_iter()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263750,"byte_end":263813,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/ // Note that the zipped iterator is only as long as the shortest input.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263814,"byte_end":263889,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ let mut r = vec![0; 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263890,"byte_end":263917,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"/ (&mut r, 1..10, 10..100, 100..1000).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263918,"byte_end":263973,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/     .for_each(|(r, x, y, z)| *r = x * y + z);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":263974,"byte_end":264023,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264024,"byte_end":264027,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&r, &[1 * 10 + 100, 2 * 11 + 101, 3 * 12 + 102]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264028,"byte_end":264092,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264093,"byte_end":264100,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264101,"byte_end":264104,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For a group that should all be iterated by reference, you can use a tuple reference.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264105,"byte_end":264193,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264194,"byte_end":264197,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264198,"byte_end":264205,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264206,"byte_end":264232,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264233,"byte_end":264236,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let xs: Vec<_> = (1..10).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264237,"byte_end":264276,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ let ys: Vec<_> = (10..100).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264277,"byte_end":264318,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ let zs: Vec<_> = (100..1000).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264319,"byte_end":264362,"line_start":35,"line_end":35,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264363,"byte_end":264366,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Reference each input separately with `IntoParallelIterator`:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264367,"byte_end":264434,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ let r1: Vec<_> = (&xs, &ys, &zs).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264435,"byte_end":264487,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/     .map(|(x, y, z)| x * y + z)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264488,"byte_end":264523,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/     .collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264524,"byte_end":264543,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264544,"byte_end":264547,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Reference them all together with `IntoParallelRefIterator`:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264548,"byte_end":264614,"line_start":42,"line_end":42,"column_start":1,"column_end":67}},{"value":"/ let r2: Vec<_> = (xs, ys, zs).par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264615,"byte_end":264659,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/     .map(|(x, y, z)| x * y + z)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264660,"byte_end":264695,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/     .collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264696,"byte_end":264715,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264716,"byte_end":264719,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r1, r2);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264720,"byte_end":264743,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264744,"byte_end":264751,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264752,"byte_end":264755,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Mutable references to a tuple will work similarly.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264756,"byte_end":264810,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264811,"byte_end":264814,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264815,"byte_end":264822,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264823,"byte_end":264849,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264850,"byte_end":264853,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut xs: Vec<_> = (1..4).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264854,"byte_end":264896,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ let mut ys: Vec<_> = (-4..-1).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264897,"byte_end":264941,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ let mut zs = vec![0; 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264942,"byte_end":264970,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264971,"byte_end":264974,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Mutably reference each input separately with `IntoParallelIterator`:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":264975,"byte_end":265050,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ (&mut xs, &mut ys, &mut zs).into_par_iter().for_each(|(x, y, z)| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265051,"byte_end":265121,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/     *z += *x + *y;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265122,"byte_end":265144,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/     std::mem::swap(x, y);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265145,"byte_end":265174,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265175,"byte_end":265182,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265183,"byte_end":265186,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(xs, (vec![-4, -3, -2]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265187,"byte_end":265226,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(ys, (vec![1, 2, 3]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265227,"byte_end":265263,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(zs, (vec![-3, -1, 1]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265264,"byte_end":265302,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265303,"byte_end":265306,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // Mutably reference them all together with `IntoParallelRefMutIterator`:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265307,"byte_end":265384,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ let mut tuple = (xs, ys, zs);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265385,"byte_end":265418,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/ tuple.par_iter_mut().for_each(|(x, y, z)| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265419,"byte_end":265466,"line_start":71,"line_end":71,"column_start":1,"column_end":48}},{"value":"/     *z += *x + *y;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265467,"byte_end":265489,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/     std::mem::swap(x, y);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265490,"byte_end":265519,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265520,"byte_end":265527,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265528,"byte_end":265531,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple, (vec![1, 2, 3], vec![-4, -3, -2], vec![-6, -2, 2]));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265532,"byte_end":265606,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265607,"byte_end":265614,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6424},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272685,"byte_end":272695,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::iter::interleave::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":6427},{"krate":0,"index":6428}],"decl_id":null,"docs":" `Interleave` is an iterator that interleaves elements of iterators\n `i` and `j` in one continuous iterator. This struct is created by\n the [`interleave()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Interleave` is an iterator that interleaves elements of iterators","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272225,"byte_end":272295,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ `i` and `j` in one continuous iterator. This struct is created by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272296,"byte_end":272365,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ the [`interleave()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272366,"byte_end":272428,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272429,"byte_end":272432,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`interleave()`]: trait.IndexedParallelIterator.html#method.interleave","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272433,"byte_end":272507,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272508,"byte_end":272575,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272576,"byte_end":272649,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6437},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281695,"byte_end":281713,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::iter::interleave_shortest::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":6440}],"decl_id":null,"docs":" `InterleaveShortest` is an iterator that works similarly to\n `Interleave`, but this version stops returning elements once one\n of the iterators run out.","sig":null,"attributes":[{"value":"/ `InterleaveShortest` is an iterator that works similarly to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281151,"byte_end":281214,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"/ `Interleave`, but this version stops returning elements once one","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281215,"byte_end":281283,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ of the iterators run out.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281284,"byte_end":281313,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281314,"byte_end":281317,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`interleave_shortest()`] method on","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281318,"byte_end":281387,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ [`IndexedParallelIterator`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281388,"byte_end":281420,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281421,"byte_end":281424,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`interleave_shortest()`]: trait.IndexedParallelIterator.html#method.interleave_shortest","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281425,"byte_end":281517,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281518,"byte_end":281585,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281586,"byte_end":281659,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6449},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":283931,"byte_end":283942,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::iter::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":6451},{"krate":0,"index":6452}],"decl_id":null,"docs":" `Intersperse` is an iterator that inserts a particular item between each\n item of the adapted iterator.  This struct is created by the\n [`intersperse()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Intersperse` is an iterator that inserts a particular item between each","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":283499,"byte_end":283575,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ item of the adapted iterator.  This struct is created by the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":283576,"byte_end":283640,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/ [`intersperse()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":283641,"byte_end":283693,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":283694,"byte_end":283697,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`intersperse()`]: trait.ParallelIterator.html#method.intersperse","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":283698,"byte_end":283767,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":283768,"byte_end":283821,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":283822,"byte_end":283895,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6459},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294160,"byte_end":294166,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Update","qualname":"::iter::update::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":6462},{"krate":0,"index":6463}],"decl_id":null,"docs":" `Update` is an iterator that mutates the elements of an\n underlying iterator before they are yielded.","sig":null,"attributes":[{"value":"/ `Update` is an iterator that mutates the elements of an","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":293749,"byte_end":293808,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/ underlying iterator before they are yielded.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":293809,"byte_end":293857,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":293858,"byte_end":293861,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`update()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":293862,"byte_end":293939,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":293940,"byte_end":293943,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`update()`]: trait.ParallelIterator.html#method.update","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":293944,"byte_end":294003,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294004,"byte_end":294057,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294058,"byte_end":294131,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6481},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302868,"byte_end":302871,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Rev","qualname":"::iter::rev::Rev","value":"Rev {  }","parent":null,"children":[{"krate":0,"index":6483}],"decl_id":null,"docs":" `Rev` is an iterator that produces elements in reverse order. This struct\n is created by the [`rev()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Rev` is an iterator that produces elements in reverse order. This struct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302478,"byte_end":302555,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ is created by the [`rev()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302556,"byte_end":302625,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302626,"byte_end":302629,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`rev()`]: trait.IndexedParallelIterator.html#method.rev","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302630,"byte_end":302690,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302691,"byte_end":302758,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302759,"byte_end":302832,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6490},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305697,"byte_end":305703,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"MinLen","qualname":"::iter::len::MinLen","value":"MinLen {  }","parent":null,"children":[{"krate":0,"index":6492},{"krate":0,"index":6493}],"decl_id":null,"docs":" `MinLen` is an iterator that imposes a minimum length on iterator splits.\n This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `MinLen` is an iterator that imposes a minimum length on iterator splits.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305283,"byte_end":305360,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305361,"byte_end":305446,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305447,"byte_end":305450,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`min_len()`]: trait.IndexedParallelIterator.html#method.min_len","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305451,"byte_end":305519,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305520,"byte_end":305587,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305588,"byte_end":305661,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6500},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308781,"byte_end":308787,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"MaxLen","qualname":"::iter::len::MaxLen","value":"MaxLen {  }","parent":null,"children":[{"krate":0,"index":6502},{"krate":0,"index":6503}],"decl_id":null,"docs":" `MaxLen` is an iterator that imposes a maximum length on iterator splits.\n This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `MaxLen` is an iterator that imposes a maximum length on iterator splits.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308367,"byte_end":308444,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/ This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308445,"byte_end":308530,"line_start":140,"line_end":140,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308531,"byte_end":308534,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`max_len()`]: trait.IndexedParallelIterator.html#method.max_len","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308535,"byte_end":308603,"line_start":142,"line_end":142,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308604,"byte_end":308671,"line_start":143,"line_end":143,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308672,"byte_end":308745,"line_start":144,"line_end":144,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6510},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311895,"byte_end":311901,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Cloned","qualname":"::iter::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":6512}],"decl_id":null,"docs":" `Cloned` is an iterator that clones the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Cloned` is an iterator that clones the elements of an underlying iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311506,"byte_end":311585,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311586,"byte_end":311589,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`cloned()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311590,"byte_end":311667,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311668,"byte_end":311671,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`cloned()`]: trait.ParallelIterator.html#method.cloned","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311672,"byte_end":311731,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311732,"byte_end":311785,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311786,"byte_end":311859,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6519},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316846,"byte_end":316852,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Copied","qualname":"::iter::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":6521}],"decl_id":null,"docs":" `Copied` is an iterator that copies the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Copied` is an iterator that copies the elements of an underlying iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316457,"byte_end":316536,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316537,"byte_end":316540,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`copied()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316541,"byte_end":316618,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316619,"byte_end":316622,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`copied()`]: trait.ParallelIterator.html#method.copied","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316623,"byte_end":316682,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316683,"byte_end":316736,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316737,"byte_end":316810,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6528},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326257,"byte_end":326264,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::iter::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":6531},{"krate":0,"index":6532}],"decl_id":null,"docs":" `Inspect` is an iterator that calls a function with a reference to each\n element before yielding it.","sig":null,"attributes":[{"value":"/ `Inspect` is an iterator that calls a function with a reference to each","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":325844,"byte_end":325919,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ element before yielding it.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":325920,"byte_end":325951,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":325952,"byte_end":325955,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`inspect()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":325956,"byte_end":326034,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326035,"byte_end":326038,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`inspect()`]: trait.ParallelIterator.html#method.inspect","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326039,"byte_end":326100,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326101,"byte_end":326154,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326155,"byte_end":326228,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6537},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332417,"byte_end":332426,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"PanicFuse","qualname":"::iter::panic_fuse::PanicFuse","value":"PanicFuse {  }","parent":null,"children":[{"krate":0,"index":6539}],"decl_id":null,"docs":" `PanicFuse` is an adaptor that wraps an iterator with a fuse in case\n of panics, to halt all threads as soon as possible.","sig":null,"attributes":[{"value":"/ `PanicFuse` is an adaptor that wraps an iterator with a fuse in case","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":331967,"byte_end":332039,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ of panics, to halt all threads as soon as possible.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332040,"byte_end":332095,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332096,"byte_end":332099,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`panic_fuse()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332100,"byte_end":332181,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332182,"byte_end":332185,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`panic_fuse()`]: trait.ParallelIterator.html#method.panic_fuse","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332186,"byte_end":332253,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332254,"byte_end":332307,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332308,"byte_end":332381,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6553},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340100,"byte_end":340109,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::iter::while_some::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":6555}],"decl_id":null,"docs":" `WhileSome` is an iterator that yields the `Some` elements of an iterator,\n halting as soon as any `None` is produced.","sig":null,"attributes":[{"value":"/ `WhileSome` is an iterator that yields the `Some` elements of an iterator,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":339653,"byte_end":339731,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ halting as soon as any `None` is produced.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":339732,"byte_end":339778,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":339779,"byte_end":339782,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`while_some()`] method on [`ParallelIterator`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":339783,"byte_end":339864,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":339865,"byte_end":339868,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`while_some()`]: trait.ParallelIterator.html#method.while_some","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":339869,"byte_end":339936,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":339937,"byte_end":339990,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":339991,"byte_end":340064,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6562},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353264,"byte_end":353270,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::iter::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":6564}],"decl_id":null,"docs":" Iterator adaptor for [the `repeat()` function](fn.repeat.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `repeat()` function](fn.repeat.html).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353161,"byte_end":353228,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":3298},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353822,"byte_end":353828,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::iter::repeat::repeat","value":"pub fn repeat<T: Clone + Send>(T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that endlessly repeats `elt` (by\n cloning it). Note that this iterator has \"infinite\" length, so\n typically you would want to use `zip` or `take` or some other\n means to shorten it, or consider using\n [the `repeatn()` function](fn.repeatn.html) instead.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that endlessly repeats `elt` (by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353309,"byte_end":353373,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/ cloning it). Note that this iterator has \"infinite\" length, so","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353374,"byte_end":353440,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/ typically you would want to use `zip` or `take` or some other","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353441,"byte_end":353506,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ means to shorten it, or consider using","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353507,"byte_end":353549,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ [the `repeatn()` function](fn.repeatn.html) instead.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353550,"byte_end":353606,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353607,"byte_end":353610,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353611,"byte_end":353625,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353626,"byte_end":353629,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353630,"byte_end":353637,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353638,"byte_end":353664,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::repeat;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353665,"byte_end":353693,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ let x: Vec<(i32, i32)> = repeat(22).zip(0..3).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353694,"byte_end":353754,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(x, vec![(22, 0), (22, 1), (22, 2)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353755,"byte_end":353806,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353807,"byte_end":353814,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354225,"byte_end":354229,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"take","qualname":"<Repeat<T>>::take","value":"pub fn take(Self, usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Take only `n` repeats of the element, similar to the general\n [`take()`](trait.IndexedParallelIterator.html#method.take).","sig":null,"attributes":[{"value":"/ Take only `n` repeats of the element, similar to the general","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353951,"byte_end":354015,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/ [`take()`](trait.IndexedParallelIterator.html#method.take).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354020,"byte_end":354083,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354088,"byte_end":354091,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The resulting `RepeatN` is an `IndexedParallelIterator`, allowing","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354096,"byte_end":354165,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"/ more functionality than `Repeat` alone.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354170,"byte_end":354213,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3303},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354489,"byte_end":354492,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"zip","qualname":"<Repeat<T>>::zip","value":"pub fn zip<Z>(Self, Z) -> Zip<RepeatN<T>, Z::Iter> where\nZ: IntoParallelIterator, Z::Iter: IndexedParallelIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate tuples repeating the element with items from another\n iterator, similar to the general\n [`zip()`](trait.IndexedParallelIterator.html#method.zip).\n","sig":null,"attributes":[{"value":"/ Iterate tuples repeating the element with items from another","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354306,"byte_end":354370,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/ iterator, similar to the general","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354375,"byte_end":354411,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ [`zip()`](trait.IndexedParallelIterator.html#method.zip).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354416,"byte_end":354477,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6571},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355761,"byte_end":355768,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::iter::repeat::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":6573},{"krate":0,"index":6574}],"decl_id":null,"docs":" Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355656,"byte_end":355725,"line_start":101,"line_end":101,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3319},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356133,"byte_end":356140,"line_start":119,"line_end":119,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::iter::repeat::repeatn","value":"pub fn repeatn<T: Clone + Send>(T, usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces `n` repeats of `elt`\n (by cloning it).","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces `n` repeats of `elt`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355825,"byte_end":355891,"line_start":108,"line_end":108,"column_start":1,"column_end":67}},{"value":"/ (by cloning it).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355892,"byte_end":355912,"line_start":109,"line_end":109,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355913,"byte_end":355916,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355917,"byte_end":355931,"line_start":111,"line_end":111,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355932,"byte_end":355935,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355936,"byte_end":355943,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355944,"byte_end":355970,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::repeatn;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355971,"byte_end":356000,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ let x: Vec<(i32, i32)> = repeatn(22, 3).zip(0..3).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356001,"byte_end":356065,"line_start":116,"line_end":116,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(x, vec![(22, 0), (22, 1), (22, 2)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356066,"byte_end":356117,"line_start":117,"line_end":117,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356118,"byte_end":356125,"line_start":118,"line_end":118,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":3364},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":358977,"byte_end":358981,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Left","qualname":"::iter::unzip::UnzipOp::Left","value":"type Left: Send;","parent":{"krate":0,"index":3362},"children":[],"decl_id":null,"docs":" The type of item expected by the left consumer.\n","sig":null,"attributes":[{"value":"/ The type of item expected by the left consumer.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":358916,"byte_end":358967,"line_start":8,"line_end":8,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":3365},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":359056,"byte_end":359061,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Right","qualname":"::iter::unzip::UnzipOp::Right","value":"type Right: Send;","parent":{"krate":0,"index":3362},"children":[],"decl_id":null,"docs":" The type of item expected by the right consumer.\n","sig":null,"attributes":[{"value":"/ The type of item expected by the right consumer.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":358994,"byte_end":359046,"line_start":11,"line_end":11,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":3566},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371216,"byte_end":371221,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"empty","qualname":"::iter::empty::empty","value":"pub fn empty<T: Send>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces nothing.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces nothing.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":370798,"byte_end":370852,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":370853,"byte_end":370856,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This admits no parallelism on its own, but it could be used for code that","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":370857,"byte_end":370934,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ deals with generic parallel iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":370935,"byte_end":370977,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":370978,"byte_end":370981,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":370982,"byte_end":370996,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":370997,"byte_end":371000,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371001,"byte_end":371008,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371009,"byte_end":371035,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::empty;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371036,"byte_end":371063,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371064,"byte_end":371067,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let pi = (0..1234).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371068,"byte_end":371106,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/     .chain(empty())","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371107,"byte_end":371130,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/     .chain(1234..10_000);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371131,"byte_end":371160,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371161,"byte_end":371164,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pi.count(), 10_000);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371165,"byte_end":371200,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371201,"byte_end":371208,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3568},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371374,"byte_end":371379,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"Empty","qualname":"::iter::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3570}],"decl_id":null,"docs":" Iterator adaptor for [the `empty()` function](fn.empty.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `empty()` function](fn.empty.html).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371297,"byte_end":371362,"line_start":30,"line_end":30,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":3608},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373561,"byte_end":373565,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"once","qualname":"::iter::once::once","value":"pub fn once<T: Send>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces an element exactly once.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":372919,"byte_end":372989,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":372990,"byte_end":372993,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This admits no parallelism on its own, but it could be chained to existing","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":372994,"byte_end":373072,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ parallel iterators to extend their contents, or otherwise used for any code","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373073,"byte_end":373152,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ that deals with generic parallel iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373153,"byte_end":373200,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373201,"byte_end":373204,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373205,"byte_end":373219,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373220,"byte_end":373223,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373224,"byte_end":373231,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373232,"byte_end":373258,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::once;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373259,"byte_end":373285,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373286,"byte_end":373289,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let pi = (0..1234).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373290,"byte_end":373328,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/     .chain(once(-1))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373329,"byte_end":373353,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/     .chain(1234..10_000);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373354,"byte_end":373383,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373384,"byte_end":373387,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pi.clone().count(), 10_001);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373388,"byte_end":373431,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(pi.clone().filter(|&x| x < 0).count(), 1);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373432,"byte_end":373489,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(pi.position_any(|x| x < 0), Some(1234));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373490,"byte_end":373545,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373546,"byte_end":373553,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6581},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373717,"byte_end":373721,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Once","qualname":"::iter::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":6583}],"decl_id":null,"docs":" Iterator adaptor for [the `once()` function](fn.once.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `once()` function](fn.once.html).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373618,"byte_end":373681,"line_start":28,"line_end":28,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":3626},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29386,"byte_end":29406,"line_start":197,"line_end":197,"column_start":11,"column_end":31},"name":"IntoParallelIterator","qualname":"::iter::IntoParallelIterator","value":"IntoParallelIterator","parent":null,"children":[{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629}],"decl_id":null,"docs":" `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28938,"byte_end":29017,"line_start":189,"line_end":189,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29018,"byte_end":29021,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ By implementing `IntoParallelIterator` for a type, you define how it will","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29022,"byte_end":29099,"line_start":191,"line_end":191,"column_start":1,"column_end":78}},{"value":"/ transformed into an iterator. This is a parallel version of the standard","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29100,"byte_end":29176,"line_start":192,"line_end":192,"column_start":1,"column_end":77}},{"value":"/ library's [`std::iter::IntoIterator`] trait.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29177,"byte_end":29225,"line_start":193,"line_end":193,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29226,"byte_end":29229,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29230,"byte_end":29283,"line_start":195,"line_end":195,"column_start":1,"column_end":54}},{"value":"/ [`std::iter::IntoIterator`]: https://doc.rust-lang.org/std/iter/trait.IntoIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29284,"byte_end":29375,"line_start":196,"line_end":196,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":3627},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29475,"byte_end":29479,"line_start":199,"line_end":199,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3626},"children":[],"decl_id":null,"docs":" The parallel iterator type that will be created.\n","sig":null,"attributes":[{"value":"/ The parallel iterator type that will be created.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29413,"byte_end":29465,"line_start":198,"line_end":198,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":3628},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29594,"byte_end":29598,"line_start":202,"line_end":202,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":3626},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29523,"byte_end":29584,"line_start":201,"line_end":201,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30249,"byte_end":30262,"line_start":226,"line_end":226,"column_start":8,"column_end":21},"name":"into_par_iter","qualname":"::iter::IntoParallelIterator::into_par_iter","value":"pub fn into_par_iter(Self) -> Self::Iter","parent":{"krate":0,"index":3626},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[{"value":"/ Converts `self` into a parallel iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29611,"byte_end":29656,"line_start":204,"line_end":204,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29661,"byte_end":29664,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29669,"byte_end":29683,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29688,"byte_end":29691,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29696,"byte_end":29703,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29708,"byte_end":29734,"line_start":209,"line_end":209,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29739,"byte_end":29742,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ println!(\"counting in parallel:\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29747,"byte_end":29785,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ (0..100).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29790,"byte_end":29818,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/     .for_each(|i| println!(\"{}\", i));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29823,"byte_end":29864,"line_start":213,"line_end":213,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29869,"byte_end":29876,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29881,"byte_end":29884,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This conversion is often implicit for arguments to methods like [`zip`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29889,"byte_end":29965,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29970,"byte_end":29973,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29978,"byte_end":29985,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29990,"byte_end":30016,"line_start":219,"line_end":219,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30021,"byte_end":30024,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = (0..5).into_par_iter().zip(5..10).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30029,"byte_end":30093,"line_start":221,"line_end":221,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(v, [(0, 5), (1, 6), (2, 7), (3, 8), (4, 9)]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30098,"byte_end":30158,"line_start":222,"line_end":222,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30163,"byte_end":30170,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30175,"byte_end":30178,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`zip`]: trait.IndexedParallelIterator.html#method.zip","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30183,"byte_end":30241,"line_start":225,"line_end":225,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":3630},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30851,"byte_end":30874,"line_start":242,"line_end":242,"column_start":11,"column_end":34},"name":"IntoParallelRefIterator","qualname":"::iter::IntoParallelRefIterator","value":"IntoParallelRefIterator<'data>","parent":null,"children":[{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634}],"decl_id":null,"docs":" `IntoParallelRefIterator` implements the conversion to a\n [`ParallelIterator`], providing shared references to the data.","sig":null,"attributes":[{"value":"/ `IntoParallelRefIterator` implements the conversion to a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30287,"byte_end":30347,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ [`ParallelIterator`], providing shared references to the data.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30348,"byte_end":30414,"line_start":230,"line_end":230,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30415,"byte_end":30418,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ This is a parallel version of the `iter()` method","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30419,"byte_end":30472,"line_start":232,"line_end":232,"column_start":1,"column_end":54}},{"value":"/ defined by various collections.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30473,"byte_end":30508,"line_start":233,"line_end":233,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30509,"byte_end":30512,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30513,"byte_end":30556,"line_start":235,"line_end":235,"column_start":1,"column_end":44}},{"value":"/ `for I where &I: IntoParallelIterator`. In most cases, users","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30557,"byte_end":30621,"line_start":236,"line_end":236,"column_start":1,"column_end":65}},{"value":"/ will want to implement [`IntoParallelIterator`] rather than implement","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30622,"byte_end":30695,"line_start":237,"line_end":237,"column_start":1,"column_end":74}},{"value":"/ this trait directly.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30696,"byte_end":30720,"line_start":238,"line_end":238,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30721,"byte_end":30724,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30725,"byte_end":30778,"line_start":240,"line_end":240,"column_start":1,"column_end":54}},{"value":"/ [`IntoParallelIterator`]: trait.IntoParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30779,"byte_end":30840,"line_start":241,"line_end":241,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":3632},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30958,"byte_end":30962,"line_start":244,"line_end":244,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":" The type of the parallel iterator that will be returned.\n","sig":null,"attributes":[{"value":"/ The type of the parallel iterator that will be returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30888,"byte_end":30948,"line_start":243,"line_end":243,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":3633},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31138,"byte_end":31142,"line_start":248,"line_end":248,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This will typically be an `&'data T` reference type.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31006,"byte_end":31067,"line_start":246,"line_end":246,"column_start":5,"column_end":66}},{"value":"/ This will typically be an `&'data T` reference type.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31072,"byte_end":31128,"line_start":247,"line_end":247,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31632,"byte_end":31640,"line_start":265,"line_end":265,"column_start":8,"column_end":16},"name":"par_iter","qualname":"::iter::IntoParallelRefIterator::par_iter","value":"pub fn par_iter(&'data Self) -> Self::Iter","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[{"value":"/ Converts `self` into a parallel iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31163,"byte_end":31208,"line_start":250,"line_end":250,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31213,"byte_end":31216,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31221,"byte_end":31235,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31240,"byte_end":31243,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31248,"byte_end":31255,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31260,"byte_end":31286,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31291,"byte_end":31294,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = (0..100).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31299,"byte_end":31338,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(v.par_iter().sum::<i32>(), 100 * 99 / 2);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31343,"byte_end":31399,"line_start":258,"line_end":258,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31404,"byte_end":31407,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ // `v.par_iter()` is shorthand for `(&v).into_par_iter()`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31412,"byte_end":31474,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/ // producing the exact same references.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31479,"byte_end":31522,"line_start":261,"line_end":261,"column_start":5,"column_end":48}},{"value":"/ assert!(v.par_iter().zip(&v)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31527,"byte_end":31559,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/          .all(|(a, b)| std::ptr::eq(a, b)));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31564,"byte_end":31612,"line_start":263,"line_end":263,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31617,"byte_end":31624,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3641},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32560,"byte_end":32586,"line_start":293,"line_end":293,"column_start":11,"column_end":37},"name":"IntoParallelRefMutIterator","qualname":"::iter::IntoParallelRefMutIterator","value":"IntoParallelRefMutIterator<'data>","parent":null,"children":[{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3645}],"decl_id":null,"docs":" `IntoParallelRefMutIterator` implements the conversion to a\n [`ParallelIterator`], providing mutable references to the data.","sig":null,"attributes":[{"value":"/ `IntoParallelRefMutIterator` implements the conversion to a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31984,"byte_end":32047,"line_start":280,"line_end":280,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`], providing mutable references to the data.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32048,"byte_end":32115,"line_start":281,"line_end":281,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32116,"byte_end":32119,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ This is a parallel version of the `iter_mut()` method","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32120,"byte_end":32177,"line_start":283,"line_end":283,"column_start":1,"column_end":58}},{"value":"/ defined by various collections.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32178,"byte_end":32213,"line_start":284,"line_end":284,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32214,"byte_end":32217,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32218,"byte_end":32261,"line_start":286,"line_end":286,"column_start":1,"column_end":44}},{"value":"/ `for I where &mut I: IntoParallelIterator`. In most cases, users","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32262,"byte_end":32330,"line_start":287,"line_end":287,"column_start":1,"column_end":69}},{"value":"/ will want to implement [`IntoParallelIterator`] rather than implement","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32331,"byte_end":32404,"line_start":288,"line_end":288,"column_start":1,"column_end":74}},{"value":"/ this trait directly.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32405,"byte_end":32429,"line_start":289,"line_end":289,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32430,"byte_end":32433,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32434,"byte_end":32487,"line_start":291,"line_end":291,"column_start":1,"column_end":54}},{"value":"/ [`IntoParallelIterator`]: trait.IntoParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32488,"byte_end":32549,"line_start":292,"line_end":292,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":3643},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32656,"byte_end":32660,"line_start":295,"line_end":295,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefMutIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3641},"children":[],"decl_id":null,"docs":" The type of iterator that will be created.\n","sig":null,"attributes":[{"value":"/ The type of iterator that will be created.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32600,"byte_end":32646,"line_start":294,"line_end":294,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":3644},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32812,"byte_end":32816,"line_start":299,"line_end":299,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefMutIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":3641},"children":[],"decl_id":null,"docs":" The type of item that will be produced; this is typically an\n `&'data mut T` reference.\n","sig":null,"attributes":[{"value":"/ The type of item that will be produced; this is typically an","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32704,"byte_end":32768,"line_start":297,"line_end":297,"column_start":5,"column_end":69}},{"value":"/ `&'data mut T` reference.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32773,"byte_end":32802,"line_start":298,"line_end":298,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33130,"byte_end":33142,"line_start":312,"line_end":312,"column_start":8,"column_end":20},"name":"par_iter_mut","qualname":"::iter::IntoParallelRefMutIterator::par_iter_mut","value":"pub fn par_iter_mut(&'data mut Self) -> Self::Iter","parent":{"krate":0,"index":3641},"children":[],"decl_id":null,"docs":" Creates the parallel iterator from `self`.","sig":null,"attributes":[{"value":"/ Creates the parallel iterator from `self`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32837,"byte_end":32883,"line_start":301,"line_end":301,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32888,"byte_end":32891,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32896,"byte_end":32910,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32915,"byte_end":32918,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32923,"byte_end":32930,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32935,"byte_end":32961,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32966,"byte_end":32969,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0usize; 5];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32974,"byte_end":33006,"line_start":308,"line_end":308,"column_start":5,"column_end":37}},{"value":"/ v.par_iter_mut().enumerate().for_each(|(i, x)| *x = i);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33011,"byte_end":33070,"line_start":309,"line_end":309,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(v, [0, 1, 2, 3, 4]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33075,"byte_end":33110,"line_start":310,"line_end":310,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33115,"byte_end":33122,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3652},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34119,"byte_end":34135,"line_start":341,"line_end":341,"column_start":11,"column_end":27},"name":"ParallelIterator","qualname":"::iter::ParallelIterator","value":"ParallelIterator: Sized + Send","parent":null,"children":[{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3656},{"krate":0,"index":3659},{"krate":0,"index":3663},{"krate":0,"index":3668},{"krate":0,"index":3674},{"krate":0,"index":3681},{"krate":0,"index":3684},{"krate":0,"index":3687},{"krate":0,"index":3691},{"krate":0,"index":3696},{"krate":0,"index":3699},{"krate":0,"index":3702},{"krate":0,"index":3704},{"krate":0,"index":3706},{"krate":0,"index":3708},{"krate":0,"index":3711},{"krate":0,"index":3714},{"krate":0,"index":3715},{"krate":0,"index":3718},{"krate":0,"index":3730},{"krate":0,"index":3734},{"krate":0,"index":3737},{"krate":0,"index":3741},{"krate":0,"index":3744},{"krate":0,"index":3749},{"krate":0,"index":3753},{"krate":0,"index":3755},{"krate":0,"index":3757},{"krate":0,"index":3758},{"krate":0,"index":3765},{"krate":0,"index":3777},{"krate":0,"index":3778},{"krate":0,"index":3785},{"krate":0,"index":3797},{"krate":0,"index":3799},{"krate":0,"index":3801},{"krate":0,"index":3803},{"krate":0,"index":3805},{"krate":0,"index":3810},{"krate":0,"index":3815},{"krate":0,"index":3820},{"krate":0,"index":3822},{"krate":0,"index":3824},{"krate":0,"index":3827},{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3832},{"krate":0,"index":3837},{"krate":0,"index":3841},{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3850}],"decl_id":null,"docs":" Parallel version of the standard iterator trait.","sig":null,"attributes":[{"value":"/ Parallel version of the standard iterator trait.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33513,"byte_end":33565,"line_start":327,"line_end":327,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33566,"byte_end":33569,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ The combinators on this trait are available on **all** parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33570,"byte_end":33637,"line_start":329,"line_end":329,"column_start":1,"column_end":68}},{"value":"/ iterators.  Additional methods can be found on the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33638,"byte_end":33692,"line_start":330,"line_end":330,"column_start":1,"column_end":55}},{"value":"/ [`IndexedParallelIterator`] trait: those methods are only","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33693,"byte_end":33754,"line_start":331,"line_end":331,"column_start":1,"column_end":62}},{"value":"/ available for parallel iterators where the number of items is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33755,"byte_end":33820,"line_start":332,"line_end":332,"column_start":1,"column_end":66}},{"value":"/ known in advance (so, e.g., after invoking `filter`, those methods","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33821,"byte_end":33891,"line_start":333,"line_end":333,"column_start":1,"column_end":71}},{"value":"/ become unavailable).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33892,"byte_end":33916,"line_start":334,"line_end":334,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33917,"byte_end":33920,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ For examples of using parallel iterators, see [the docs on the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33921,"byte_end":33987,"line_start":336,"line_end":336,"column_start":1,"column_end":67}},{"value":"/ `iter` module][iter].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33988,"byte_end":34013,"line_start":337,"line_end":337,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34014,"byte_end":34017,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ [iter]: index.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34018,"byte_end":34040,"line_start":339,"line_end":339,"column_start":1,"column_end":23}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34041,"byte_end":34108,"line_start":340,"line_end":340,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":3653},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34401,"byte_end":34405,"line_start":347,"line_end":347,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" The type of item that this parallel iterator produces.\n For example, if you use the [`for_each`] method, this is the type of\n item that your closure will be invoked with.","sig":null,"attributes":[{"value":"/ The type of item that this parallel iterator produces.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34156,"byte_end":34214,"line_start":342,"line_end":342,"column_start":5,"column_end":63}},{"value":"/ For example, if you use the [`for_each`] method, this is the type of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34219,"byte_end":34291,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/ item that your closure will be invoked with.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34296,"byte_end":34344,"line_start":344,"line_end":344,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34349,"byte_end":34352,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`for_each`]: #method.for_each","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34357,"byte_end":34391,"line_start":346,"line_end":346,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34661,"byte_end":34669,"line_start":358,"line_end":358,"column_start":8,"column_end":16},"name":"for_each","qualname":"::iter::ParallelIterator::for_each","value":"pub fn for_each<OP>(Self, OP) where OP: Fn(Self::Item) -> () + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Executes `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on each item produced by the iterator, in parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34418,"byte_end":34487,"line_start":349,"line_end":349,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34492,"byte_end":34495,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34500,"byte_end":34514,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34519,"byte_end":34522,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34527,"byte_end":34534,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34539,"byte_end":34565,"line_start":354,"line_end":354,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34570,"byte_end":34573,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ (0..100).into_par_iter().for_each(|x| println!(\"{:?}\", x));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34578,"byte_end":34641,"line_start":356,"line_end":356,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34646,"byte_end":34653,"line_start":357,"line_end":357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35504,"byte_end":35517,"line_start":388,"line_end":388,"column_start":8,"column_end":21},"name":"for_each_with","qualname":"::iter::ParallelIterator::for_each_with","value":"pub fn for_each_with<OP, T>(Self, T, OP) where OP: Fn(&mut T, Self::Item) ->\n() + Sync + Send, T: Send + Clone","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Executes `OP` on the given `init` value with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on the given `init` value with each item produced by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34795,"byte_end":34865,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/ the iterator, in parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34870,"byte_end":34900,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34905,"byte_end":34908,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The `init` value will be cloned only as needed to be paired with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34913,"byte_end":34981,"line_start":368,"line_end":368,"column_start":5,"column_end":73}},{"value":"/ the group of items in each rayon job.  It does not require the type","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34986,"byte_end":35057,"line_start":369,"line_end":369,"column_start":5,"column_end":76}},{"value":"/ to be `Sync`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35062,"byte_end":35079,"line_start":370,"line_end":370,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35084,"byte_end":35087,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35092,"byte_end":35106,"line_start":372,"line_end":372,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35111,"byte_end":35114,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35119,"byte_end":35126,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35131,"byte_end":35164,"line_start":375,"line_end":375,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35169,"byte_end":35195,"line_start":376,"line_end":376,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35200,"byte_end":35203,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35208,"byte_end":35247,"line_start":378,"line_end":378,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35252,"byte_end":35255,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter().for_each_with(sender, |s, x| s.send(x).unwrap());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35260,"byte_end":35336,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35341,"byte_end":35344,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let mut res: Vec<_> = receiver.iter().collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35349,"byte_end":35401,"line_start":382,"line_end":382,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35406,"byte_end":35409,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ res.sort();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35414,"byte_end":35429,"line_start":384,"line_end":384,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35434,"byte_end":35437,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&res[..], &[0, 1, 2, 3, 4])","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35442,"byte_end":35484,"line_start":386,"line_end":386,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35489,"byte_end":35496,"line_start":387,"line_end":387,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3659},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36485,"byte_end":36498,"line_start":422,"line_end":422,"column_start":8,"column_end":21},"name":"for_each_init","qualname":"::iter::ParallelIterator::for_each_init","value":"pub fn for_each_init<OP, INIT, T>(Self, INIT, OP) where\nOP: Fn(&mut T, Self::Item) -> () + Sync + Send, INIT: Fn() -> T + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Executes `OP` on a value returned by `init` with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on a value returned by `init` with each item produced by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35692,"byte_end":35766,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ the iterator, in parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35771,"byte_end":35801,"line_start":397,"line_end":397,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35806,"byte_end":35809,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ The `init` function will be called only as needed for a value to be","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35814,"byte_end":35885,"line_start":399,"line_end":399,"column_start":5,"column_end":76}},{"value":"/ paired with the group of items in each rayon job.  There is no","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35890,"byte_end":35956,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/ constraint on that returned type at all!","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35961,"byte_end":36005,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36010,"byte_end":36013,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36018,"byte_end":36032,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36037,"byte_end":36040,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36045,"byte_end":36052,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36057,"byte_end":36075,"line_start":406,"line_end":406,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36080,"byte_end":36106,"line_start":407,"line_end":407,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36111,"byte_end":36114,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0u8; 1_000_000];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36119,"byte_end":36156,"line_start":409,"line_end":409,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36161,"byte_end":36164,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ v.par_chunks_mut(1000)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36169,"byte_end":36195,"line_start":411,"line_end":411,"column_start":5,"column_end":31}},{"value":"/     .for_each_init(","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36200,"byte_end":36223,"line_start":412,"line_end":412,"column_start":5,"column_end":28}},{"value":"/         || rand::thread_rng(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36228,"byte_end":36262,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/         |rng, chunk| rng.fill(chunk),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36267,"byte_end":36308,"line_start":414,"line_end":414,"column_start":5,"column_end":46}},{"value":"/     );","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36313,"byte_end":36323,"line_start":415,"line_end":415,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36328,"byte_end":36331,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36336,"byte_end":36389,"line_start":417,"line_end":417,"column_start":5,"column_end":58}},{"value":"/ for i in 0u8..=255 {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36394,"byte_end":36418,"line_start":418,"line_end":418,"column_start":5,"column_end":29}},{"value":"/     assert!(v.contains(&i));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36423,"byte_end":36455,"line_start":419,"line_end":419,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36460,"byte_end":36465,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36470,"byte_end":36477,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37601,"byte_end":37613,"line_start":450,"line_end":450,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::iter::ParallelIterator::try_for_each","value":"pub fn try_for_each<OP, R>(Self, OP) -> R where OP: Fn(Self::Item) -> R +\nSync + Send, R: Try<Ok = ()> + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on each item produced by the iterator, in parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36696,"byte_end":36776,"line_start":430,"line_end":430,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36781,"byte_end":36784,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ If the `OP` returns `Result::Err` or `Option::None`, we will attempt to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36789,"byte_end":36864,"line_start":432,"line_end":432,"column_start":5,"column_end":80}},{"value":"/ stop processing the rest of the items in the iterator as soon as","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36869,"byte_end":36937,"line_start":433,"line_end":433,"column_start":5,"column_end":73}},{"value":"/ possible, and we will return that terminating value.  Otherwise, we will","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36942,"byte_end":37018,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ return an empty `Result::Ok(())` or `Option::Some(())`.  If there are","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37023,"byte_end":37096,"line_start":435,"line_end":435,"column_start":5,"column_end":78}},{"value":"/ multiple errors in parallel, it is not specified which will be returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37101,"byte_end":37177,"line_start":436,"line_end":436,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37182,"byte_end":37185,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37190,"byte_end":37204,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37209,"byte_end":37212,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37217,"byte_end":37224,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37229,"byte_end":37255,"line_start":441,"line_end":441,"column_start":5,"column_end":31}},{"value":"/ use std::io::{self, Write};","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37260,"byte_end":37291,"line_start":442,"line_end":442,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37296,"byte_end":37299,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ // This will stop iteration early if there's any write error, like","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37304,"byte_end":37374,"line_start":444,"line_end":444,"column_start":5,"column_end":75}},{"value":"/ // having piped output get closed on the other end.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37379,"byte_end":37434,"line_start":445,"line_end":445,"column_start":5,"column_end":60}},{"value":"/ (0..100).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37439,"byte_end":37467,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/     .try_for_each(|x| writeln!(io::stdout(), \"{:?}\", x))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37472,"byte_end":37532,"line_start":447,"line_end":447,"column_start":5,"column_end":65}},{"value":"/     .expect(\"expected no write errors\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37537,"byte_end":37581,"line_start":448,"line_end":448,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37586,"byte_end":37593,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38722,"byte_end":38739,"line_start":489,"line_end":489,"column_start":8,"column_end":25},"name":"try_for_each_with","qualname":"::iter::ParallelIterator::try_for_each_with","value":"pub fn try_for_each_with<OP, T, R>(Self, T, OP) -> R where\nOP: Fn(&mut T, Self::Item) -> R + Sync + Send, T: Send + Clone, R: Try<Ok =\n()> + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on the given `init` value with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on the given `init` value with each item","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37887,"byte_end":37956,"line_start":462,"line_end":462,"column_start":5,"column_end":74}},{"value":"/ produced by the iterator, in parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37961,"byte_end":38003,"line_start":463,"line_end":463,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38008,"byte_end":38011,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`for_each_with()`] and the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38016,"byte_end":38085,"line_start":465,"line_end":465,"column_start":5,"column_end":74}},{"value":"/ failure semantics of [`try_for_each()`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38090,"byte_end":38134,"line_start":466,"line_end":466,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38139,"byte_end":38142,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [`for_each_with()`]: #method.for_each_with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38147,"byte_end":38193,"line_start":468,"line_end":468,"column_start":5,"column_end":51}},{"value":"/ [`try_for_each()`]: #method.try_for_each","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38198,"byte_end":38242,"line_start":469,"line_end":469,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38247,"byte_end":38250,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38255,"byte_end":38269,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38274,"byte_end":38277,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38282,"byte_end":38289,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38294,"byte_end":38327,"line_start":474,"line_end":474,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38332,"byte_end":38358,"line_start":475,"line_end":475,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38363,"byte_end":38366,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38371,"byte_end":38410,"line_start":477,"line_end":477,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38415,"byte_end":38418,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38423,"byte_end":38449,"line_start":479,"line_end":479,"column_start":5,"column_end":31}},{"value":"/     .try_for_each_with(sender, |s, x| s.send(x))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38454,"byte_end":38506,"line_start":480,"line_end":480,"column_start":5,"column_end":57}},{"value":"/     .expect(\"expected no send errors\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38511,"byte_end":38554,"line_start":481,"line_end":481,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38559,"byte_end":38562,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ let mut res: Vec<_> = receiver.iter().collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38567,"byte_end":38619,"line_start":483,"line_end":483,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38624,"byte_end":38627,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ res.sort();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38632,"byte_end":38647,"line_start":485,"line_end":485,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38652,"byte_end":38655,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&res[..], &[0, 1, 2, 3, 4])","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38660,"byte_end":38702,"line_start":487,"line_end":487,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38707,"byte_end":38714,"line_start":488,"line_end":488,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39963,"byte_end":39980,"line_start":531,"line_end":531,"column_start":8,"column_end":25},"name":"try_for_each_init","qualname":"::iter::ParallelIterator::try_for_each_init","value":"pub fn try_for_each_init<OP, INIT, T, R>(Self, INIT, OP) -> R where\nOP: Fn(&mut T, Self::Item) -> R + Sync + Send, INIT: Fn() -> T + Sync + Send,\nR: Try<Ok = ()> + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on a value returned by `init` with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on a value returned by `init` with each item","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39069,"byte_end":39142,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ produced by the iterator, in parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39147,"byte_end":39189,"line_start":503,"line_end":503,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39194,"byte_end":39197,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`for_each_init()`] and the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39202,"byte_end":39271,"line_start":505,"line_end":505,"column_start":5,"column_end":74}},{"value":"/ failure semantics of [`try_for_each()`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39276,"byte_end":39320,"line_start":506,"line_end":506,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39325,"byte_end":39328,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [`for_each_init()`]: #method.for_each_init","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39333,"byte_end":39379,"line_start":508,"line_end":508,"column_start":5,"column_end":51}},{"value":"/ [`try_for_each()`]: #method.try_for_each","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39384,"byte_end":39428,"line_start":509,"line_end":509,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39433,"byte_end":39436,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39441,"byte_end":39455,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39460,"byte_end":39463,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39468,"byte_end":39475,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39480,"byte_end":39498,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39503,"byte_end":39529,"line_start":515,"line_end":515,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39534,"byte_end":39537,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0u8; 1_000_000];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39542,"byte_end":39579,"line_start":517,"line_end":517,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39584,"byte_end":39587,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ v.par_chunks_mut(1000)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39592,"byte_end":39618,"line_start":519,"line_end":519,"column_start":5,"column_end":31}},{"value":"/     .try_for_each_init(","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39623,"byte_end":39650,"line_start":520,"line_end":520,"column_start":5,"column_end":32}},{"value":"/         || rand::thread_rng(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39655,"byte_end":39689,"line_start":521,"line_end":521,"column_start":5,"column_end":39}},{"value":"/         |rng, chunk| rng.try_fill(chunk),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39694,"byte_end":39739,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/     )","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39744,"byte_end":39753,"line_start":523,"line_end":523,"column_start":5,"column_end":14}},{"value":"/     .expect(\"expected no rand errors\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39758,"byte_end":39801,"line_start":524,"line_end":524,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39806,"byte_end":39809,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39814,"byte_end":39867,"line_start":526,"line_end":526,"column_start":5,"column_end":58}},{"value":"/ for i in 0u8..=255 {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39872,"byte_end":39896,"line_start":527,"line_end":527,"column_start":5,"column_end":29}},{"value":"/     assert!(v.contains(&i));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39901,"byte_end":39933,"line_start":528,"line_end":528,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39938,"byte_end":39943,"line_start":529,"line_end":529,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39948,"byte_end":39955,"line_start":530,"line_end":530,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3681},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40590,"byte_end":40595,"line_start":555,"line_end":555,"column_start":8,"column_end":13},"name":"count","qualname":"::iter::ParallelIterator::count","value":"pub fn count(Self) -> usize","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Counts the number of items in this parallel iterator.","sig":null,"attributes":[{"value":"/ Counts the number of items in this parallel iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40333,"byte_end":40390,"line_start":544,"line_end":544,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40395,"byte_end":40398,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40403,"byte_end":40417,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40422,"byte_end":40425,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40430,"byte_end":40437,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40442,"byte_end":40468,"line_start":549,"line_end":549,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40473,"byte_end":40476,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let count = (0..100).into_par_iter().count();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40481,"byte_end":40530,"line_start":551,"line_end":551,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40535,"byte_end":40538,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 100);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40543,"byte_end":40570,"line_start":553,"line_end":553,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40575,"byte_end":40582,"line_start":554,"line_end":554,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3684},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41104,"byte_end":41107,"line_start":577,"line_end":577,"column_start":8,"column_end":11},"name":"map","qualname":"::iter::ParallelIterator::map","value":"pub fn map<F, R>(Self, F) -> Map<Self, F> where F: Fn(Self::Item) -> R +\nSync + Send, R: Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator, producing a new\n iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator, producing a new","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40712,"byte_end":40779,"line_start":563,"line_end":563,"column_start":5,"column_end":72}},{"value":"/ iterator with the results.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40784,"byte_end":40814,"line_start":564,"line_end":564,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40819,"byte_end":40822,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40827,"byte_end":40841,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40846,"byte_end":40849,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40854,"byte_end":40861,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40866,"byte_end":40892,"line_start":569,"line_end":569,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40897,"byte_end":40900,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..5).into_par_iter().map(|x| x * 2);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40905,"byte_end":40966,"line_start":571,"line_end":571,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40971,"byte_end":40974,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ let doubles: Vec<_> = par_iter.collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40979,"byte_end":41024,"line_start":573,"line_end":573,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41029,"byte_end":41032,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&doubles[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41037,"byte_end":41084,"line_start":575,"line_end":575,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41089,"byte_end":41096,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3687},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42450,"byte_end":42458,"line_start":614,"line_end":614,"column_start":8,"column_end":16},"name":"map_with","qualname":"::iter::ParallelIterator::map_with","value":"pub fn map_with<F, T, R>(Self, T, F) -> MapWith<Self, T, F> where\nF: Fn(&mut T, Self::Item) -> R + Sync + Send, T: Send + Clone, R: Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Applies `map_op` to the given `init` value with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to the given `init` value with each item of this","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41268,"byte_end":41337,"line_start":585,"line_end":585,"column_start":5,"column_end":74}},{"value":"/ iterator, producing a new iterator with the results.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41342,"byte_end":41398,"line_start":586,"line_end":586,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41403,"byte_end":41406,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ The `init` value will be cloned only as needed to be paired with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41411,"byte_end":41479,"line_start":588,"line_end":588,"column_start":5,"column_end":73}},{"value":"/ the group of items in each rayon job.  It does not require the type","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41484,"byte_end":41555,"line_start":589,"line_end":589,"column_start":5,"column_end":76}},{"value":"/ to be `Sync`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41560,"byte_end":41577,"line_start":590,"line_end":590,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41582,"byte_end":41585,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41590,"byte_end":41604,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41609,"byte_end":41612,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41617,"byte_end":41624,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41629,"byte_end":41662,"line_start":595,"line_end":595,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41667,"byte_end":41693,"line_start":596,"line_end":596,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41698,"byte_end":41701,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41706,"byte_end":41745,"line_start":598,"line_end":598,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41750,"byte_end":41753,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ let a: Vec<_> = (0..5)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41758,"byte_end":41784,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/                 .into_par_iter()            // iterating over i32","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41789,"byte_end":41858,"line_start":601,"line_end":601,"column_start":5,"column_end":74}},{"value":"/                 .map_with(sender, |s, x| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41863,"byte_end":41909,"line_start":602,"line_end":602,"column_start":5,"column_end":51}},{"value":"/                     s.send(x).unwrap();     // sending i32 values through the channel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41914,"byte_end":42003,"line_start":603,"line_end":603,"column_start":5,"column_end":94}},{"value":"/                     x                       // returning i32","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42008,"byte_end":42072,"line_start":604,"line_end":604,"column_start":5,"column_end":69}},{"value":"/                 })","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42077,"byte_end":42099,"line_start":605,"line_end":605,"column_start":5,"column_end":27}},{"value":"/                 .collect();                 // collecting the returned values into a vector","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42104,"byte_end":42199,"line_start":606,"line_end":606,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42204,"byte_end":42207,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ let mut b: Vec<_> = receiver.iter()         // iterating over the values in the channel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42212,"byte_end":42303,"line_start":608,"line_end":608,"column_start":5,"column_end":96}},{"value":"/                             .collect();     // and collecting them","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42308,"byte_end":42378,"line_start":609,"line_end":609,"column_start":5,"column_end":75}},{"value":"/ b.sort();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42383,"byte_end":42396,"line_start":610,"line_end":610,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42401,"byte_end":42404,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42409,"byte_end":42430,"line_start":612,"line_end":612,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42435,"byte_end":42442,"line_start":613,"line_end":613,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3691},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43641,"byte_end":43649,"line_start":651,"line_end":651,"column_start":8,"column_end":16},"name":"map_init","qualname":"::iter::ParallelIterator::map_init","value":"pub fn map_init<F, INIT, T, R>(Self, INIT, F) -> MapInit<Self, INIT, F> where\nF: Fn(&mut T, Self::Item) -> R + Sync + Send, INIT: Fn() -> T + Sync + Send,\nR: Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Applies `map_op` to a value returned by `init` with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to a value returned by `init` with each item of this","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42681,"byte_end":42754,"line_start":623,"line_end":623,"column_start":5,"column_end":78}},{"value":"/ iterator, producing a new iterator with the results.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42759,"byte_end":42815,"line_start":624,"line_end":624,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42820,"byte_end":42823,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ The `init` function will be called only as needed for a value to be","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42828,"byte_end":42899,"line_start":626,"line_end":626,"column_start":5,"column_end":76}},{"value":"/ paired with the group of items in each rayon job.  There is no","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42904,"byte_end":42970,"line_start":627,"line_end":627,"column_start":5,"column_end":71}},{"value":"/ constraint on that returned type at all!","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42975,"byte_end":43019,"line_start":628,"line_end":628,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43024,"byte_end":43027,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43032,"byte_end":43046,"line_start":630,"line_end":630,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43051,"byte_end":43054,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43059,"byte_end":43066,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43071,"byte_end":43089,"line_start":633,"line_end":633,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43094,"byte_end":43120,"line_start":634,"line_end":634,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43125,"byte_end":43128,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ let a: Vec<_> = (1i32..1_000_000)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43133,"byte_end":43170,"line_start":636,"line_end":636,"column_start":5,"column_end":42}},{"value":"/     .into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43175,"byte_end":43199,"line_start":637,"line_end":637,"column_start":5,"column_end":29}},{"value":"/     .map_init(","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43204,"byte_end":43222,"line_start":638,"line_end":638,"column_start":5,"column_end":23}},{"value":"/         || rand::thread_rng(),  // get the thread-local RNG","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43227,"byte_end":43290,"line_start":639,"line_end":639,"column_start":5,"column_end":68}},{"value":"/         |rng, x| if rng.gen() { // randomly negate items","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43295,"byte_end":43355,"line_start":640,"line_end":640,"column_start":5,"column_end":65}},{"value":"/             -x","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43360,"byte_end":43378,"line_start":641,"line_end":641,"column_start":5,"column_end":23}},{"value":"/         } else {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43383,"byte_end":43403,"line_start":642,"line_end":642,"column_start":5,"column_end":25}},{"value":"/             x","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43408,"byte_end":43425,"line_start":643,"line_end":643,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43430,"byte_end":43444,"line_start":644,"line_end":644,"column_start":5,"column_end":19}},{"value":"/     ).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43449,"byte_end":43469,"line_start":645,"line_end":645,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43474,"byte_end":43477,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43482,"byte_end":43535,"line_start":647,"line_end":647,"column_start":5,"column_end":58}},{"value":"/ assert!(a.iter().any(|&x| x < 0));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43540,"byte_end":43578,"line_start":648,"line_end":648,"column_start":5,"column_end":43}},{"value":"/ assert!(a.iter().any(|&x| x > 0));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43583,"byte_end":43621,"line_start":649,"line_end":649,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43626,"byte_end":43633,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3696},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44580,"byte_end":44586,"line_start":681,"line_end":681,"column_start":8,"column_end":14},"name":"cloned","qualname":"::iter::ParallelIterator::cloned","value":"pub fn cloned<'a, T>(Self) -> Cloned<Self> where T: 'a + Clone + Send,\nSelf: ParallelIterator<Item = &'a T>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Creates an iterator which clones all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`, and\n that type implements `Clone`. See also [`copied()`].","sig":null,"attributes":[{"value":"/ Creates an iterator which clones all of its elements.  This may be","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43898,"byte_end":43968,"line_start":660,"line_end":660,"column_start":5,"column_end":75}},{"value":"/ useful when you have an iterator over `&T`, but you need `T`, and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43973,"byte_end":44042,"line_start":661,"line_end":661,"column_start":5,"column_end":74}},{"value":"/ that type implements `Clone`. See also [`copied()`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44047,"byte_end":44103,"line_start":662,"line_end":662,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44108,"byte_end":44111,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ [`copied()`]: #method.copied","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44116,"byte_end":44148,"line_start":664,"line_end":664,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44153,"byte_end":44156,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44161,"byte_end":44175,"line_start":666,"line_end":666,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44180,"byte_end":44183,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44188,"byte_end":44195,"line_start":668,"line_end":668,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44200,"byte_end":44226,"line_start":669,"line_end":669,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44231,"byte_end":44234,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44239,"byte_end":44261,"line_start":671,"line_end":671,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44266,"byte_end":44269,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ let v_cloned: Vec<_> = a.par_iter().cloned().collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44274,"byte_end":44333,"line_start":673,"line_end":673,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44338,"byte_end":44341,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ // cloned is the same as .map(|&x| x), for integers","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44346,"byte_end":44401,"line_start":675,"line_end":675,"column_start":5,"column_end":60}},{"value":"/ let v_map: Vec<_> = a.par_iter().map(|&x| x).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44406,"byte_end":44465,"line_start":676,"line_end":676,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44470,"byte_end":44473,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v_cloned, vec![1, 2, 3]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44478,"byte_end":44518,"line_start":678,"line_end":678,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v_map, vec![1, 2, 3]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44523,"byte_end":44560,"line_start":679,"line_end":679,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44565,"byte_end":44572,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45426,"byte_end":45432,"line_start":710,"line_end":710,"column_start":8,"column_end":14},"name":"copied","qualname":"::iter::ParallelIterator::copied","value":"pub fn copied<'a, T>(Self) -> Copied<Self> where T: 'a + Copy + Send,\nSelf: ParallelIterator<Item = &'a T>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Creates an iterator which copies all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`, and\n that type implements `Copy`. See also [`cloned()`].","sig":null,"attributes":[{"value":"/ Creates an iterator which copies all of its elements.  This may be","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44745,"byte_end":44815,"line_start":689,"line_end":689,"column_start":5,"column_end":75}},{"value":"/ useful when you have an iterator over `&T`, but you need `T`, and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44820,"byte_end":44889,"line_start":690,"line_end":690,"column_start":5,"column_end":74}},{"value":"/ that type implements `Copy`. See also [`cloned()`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44894,"byte_end":44949,"line_start":691,"line_end":691,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44954,"byte_end":44957,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ [`cloned()`]: #method.cloned","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44962,"byte_end":44994,"line_start":693,"line_end":693,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44999,"byte_end":45002,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45007,"byte_end":45021,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45026,"byte_end":45029,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45034,"byte_end":45041,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45046,"byte_end":45072,"line_start":698,"line_end":698,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45077,"byte_end":45080,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45085,"byte_end":45107,"line_start":700,"line_end":700,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45112,"byte_end":45115,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let v_copied: Vec<_> = a.par_iter().copied().collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45120,"byte_end":45179,"line_start":702,"line_end":702,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45184,"byte_end":45187,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ // copied is the same as .map(|&x| x), for integers","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45192,"byte_end":45247,"line_start":704,"line_end":704,"column_start":5,"column_end":60}},{"value":"/ let v_map: Vec<_> = a.par_iter().map(|&x| x).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45252,"byte_end":45311,"line_start":705,"line_end":705,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45316,"byte_end":45319,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v_copied, vec![1, 2, 3]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45324,"byte_end":45364,"line_start":707,"line_end":707,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v_map, vec![1, 2, 3]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45369,"byte_end":45406,"line_start":708,"line_end":708,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45411,"byte_end":45418,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3702},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46626,"byte_end":46633,"line_start":747,"line_end":747,"column_start":8,"column_end":15},"name":"inspect","qualname":"::iter::ParallelIterator::inspect","value":"pub fn inspect<OP>(Self, OP) -> Inspect<Self, OP> where OP: Fn(&Self::Item) ->\n() + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Applies `inspect_op` to a reference to each item of this iterator,\n producing a new iterator passing through the original items.  This is\n often useful for debugging to see what's happening in iterator stages.","sig":null,"attributes":[{"value":"/ Applies `inspect_op` to a reference to each item of this iterator,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45590,"byte_end":45660,"line_start":718,"line_end":718,"column_start":5,"column_end":75}},{"value":"/ producing a new iterator passing through the original items.  This is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45665,"byte_end":45738,"line_start":719,"line_end":719,"column_start":5,"column_end":78}},{"value":"/ often useful for debugging to see what's happening in iterator stages.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45743,"byte_end":45817,"line_start":720,"line_end":720,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45822,"byte_end":45825,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45830,"byte_end":45844,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45849,"byte_end":45852,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45857,"byte_end":45864,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45869,"byte_end":45895,"line_start":725,"line_end":725,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45900,"byte_end":45903,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 4, 2, 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45908,"byte_end":45933,"line_start":727,"line_end":727,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45938,"byte_end":45941,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ // this iterator sequence is complex.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45946,"byte_end":45987,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/ let sum = a.par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45992,"byte_end":46018,"line_start":730,"line_end":730,"column_start":5,"column_end":31}},{"value":"/             .cloned()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46023,"byte_end":46048,"line_start":731,"line_end":731,"column_start":5,"column_end":30}},{"value":"/             .filter(|&x| x % 2 == 0)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46053,"byte_end":46093,"line_start":732,"line_end":732,"column_start":5,"column_end":45}},{"value":"/             .reduce(|| 0, |sum, i| sum + i);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46098,"byte_end":46146,"line_start":733,"line_end":733,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46151,"byte_end":46154,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46159,"byte_end":46183,"line_start":735,"line_end":735,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46188,"byte_end":46191,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ // let's add some inspect() calls to investigate what's happening","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46196,"byte_end":46265,"line_start":737,"line_end":737,"column_start":5,"column_end":74}},{"value":"/ let sum = a.par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46270,"byte_end":46296,"line_start":738,"line_end":738,"column_start":5,"column_end":31}},{"value":"/             .cloned()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46301,"byte_end":46326,"line_start":739,"line_end":739,"column_start":5,"column_end":30}},{"value":"/             .inspect(|x| println!(\"about to filter: {}\", x))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46331,"byte_end":46395,"line_start":740,"line_end":740,"column_start":5,"column_end":69}},{"value":"/             .filter(|&x| x % 2 == 0)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46400,"byte_end":46440,"line_start":741,"line_end":741,"column_start":5,"column_end":45}},{"value":"/             .inspect(|x| println!(\"made it through filter: {}\", x))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46445,"byte_end":46516,"line_start":742,"line_end":742,"column_start":5,"column_end":76}},{"value":"/             .reduce(|| 0, |sum, i| sum + i);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46521,"byte_end":46569,"line_start":743,"line_end":743,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46574,"byte_end":46577,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46582,"byte_end":46606,"line_start":745,"line_end":745,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46611,"byte_end":46618,"line_start":746,"line_end":746,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47142,"byte_end":47148,"line_start":767,"line_end":767,"column_start":8,"column_end":14},"name":"update","qualname":"::iter::ParallelIterator::update","value":"pub fn update<F>(Self, F) -> Update<Self, F> where F: Fn(&mut Self::Item) ->\n() + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Mutates each item of this iterator before yielding it.","sig":null,"attributes":[{"value":"/ Mutates each item of this iterator before yielding it.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46790,"byte_end":46848,"line_start":754,"line_end":754,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46853,"byte_end":46856,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46861,"byte_end":46875,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46880,"byte_end":46883,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46888,"byte_end":46895,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46900,"byte_end":46926,"line_start":759,"line_end":759,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46931,"byte_end":46934,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ let par_iter = (0..5).into_par_iter().update(|x| {*x *= 2;});","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46939,"byte_end":47004,"line_start":761,"line_end":761,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47009,"byte_end":47012,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ let doubles: Vec<_> = par_iter.collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47017,"byte_end":47062,"line_start":763,"line_end":763,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47067,"byte_end":47070,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&doubles[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47075,"byte_end":47122,"line_start":765,"line_end":765,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47127,"byte_end":47134,"line_start":766,"line_end":766,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3706},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47743,"byte_end":47749,"line_start":788,"line_end":788,"column_start":8,"column_end":14},"name":"filter","qualname":"::iter::ParallelIterator::filter","value":"pub fn filter<P>(Self, P) -> Filter<Self, P> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator, producing a new\n iterator with only the items that gave `true` results.","sig":null,"attributes":[{"value":"/ Applies `filter_op` to each item of this iterator, producing a new","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47301,"byte_end":47371,"line_start":774,"line_end":774,"column_start":5,"column_end":75}},{"value":"/ iterator with only the items that gave `true` results.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47376,"byte_end":47434,"line_start":775,"line_end":775,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47439,"byte_end":47442,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47447,"byte_end":47461,"line_start":777,"line_end":777,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47466,"byte_end":47469,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47474,"byte_end":47481,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47486,"byte_end":47512,"line_start":780,"line_end":780,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47517,"byte_end":47520,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..10).into_par_iter().filter(|x| x % 2 == 0);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47525,"byte_end":47595,"line_start":782,"line_end":782,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47600,"byte_end":47603,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ let even_numbers: Vec<_> = par_iter.collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47608,"byte_end":47658,"line_start":784,"line_end":784,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47663,"byte_end":47666,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&even_numbers[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47671,"byte_end":47723,"line_start":786,"line_end":786,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47728,"byte_end":47735,"line_start":787,"line_end":787,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48543,"byte_end":48553,"line_start":813,"line_end":813,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::iter::ParallelIterator::filter_map","value":"pub fn filter_map<P, R>(Self, P) -> FilterMap<Self, P> where P: Fn(Self::Item)\n-> Option<R> + Sync + Send, R: Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator to get an `Option`,\n producing a new iterator with only the items from `Some` results.","sig":null,"attributes":[{"value":"/ Applies `filter_op` to each item of this iterator to get an `Option`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47906,"byte_end":47979,"line_start":795,"line_end":795,"column_start":5,"column_end":78}},{"value":"/ producing a new iterator with only the items from `Some` results.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47984,"byte_end":48053,"line_start":796,"line_end":796,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48058,"byte_end":48061,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48066,"byte_end":48080,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48085,"byte_end":48088,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48093,"byte_end":48100,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48105,"byte_end":48131,"line_start":801,"line_end":801,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48136,"byte_end":48139,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..10).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48144,"byte_end":48190,"line_start":803,"line_end":803,"column_start":5,"column_end":51}},{"value":"/                         .filter_map(|x| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48195,"byte_end":48240,"line_start":804,"line_end":804,"column_start":5,"column_end":50}},{"value":"/                             if x % 2 == 0 { Some(x * 3) }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48245,"byte_end":48306,"line_start":805,"line_end":805,"column_start":5,"column_end":66}},{"value":"/                             else { None }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48311,"byte_end":48356,"line_start":806,"line_end":806,"column_start":5,"column_end":50}},{"value":"/                         });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48361,"byte_end":48392,"line_start":807,"line_end":807,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48397,"byte_end":48400,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ let even_numbers: Vec<_> = par_iter.collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48405,"byte_end":48455,"line_start":809,"line_end":809,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48460,"byte_end":48463,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&even_numbers[..], &[0, 6, 12, 18, 24]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48468,"byte_end":48523,"line_start":811,"line_end":811,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48528,"byte_end":48535,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3711},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49237,"byte_end":49245,"line_start":837,"line_end":837,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::iter::ParallelIterator::flat_map","value":"pub fn flat_map<F, PI>(Self, F) -> FlatMap<Self, F> where F: Fn(Self::Item) ->\nPI + Sync + Send, PI: IntoParallelIterator","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested iterators,\n producing a new iterator that flattens these back into one.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator to get nested iterators,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48740,"byte_end":48815,"line_start":821,"line_end":821,"column_start":5,"column_end":80}},{"value":"/ producing a new iterator that flattens these back into one.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48820,"byte_end":48883,"line_start":822,"line_end":822,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48888,"byte_end":48891,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48896,"byte_end":48910,"line_start":824,"line_end":824,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48915,"byte_end":48918,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48923,"byte_end":48930,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48935,"byte_end":48961,"line_start":827,"line_end":827,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48966,"byte_end":48969,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let a = [[1, 2], [3, 4], [5, 6], [7, 8]];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48974,"byte_end":49019,"line_start":829,"line_end":829,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49024,"byte_end":49027,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().cloned().flat_map(|a| a.to_vec());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49032,"byte_end":49098,"line_start":831,"line_end":831,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49103,"byte_end":49106,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49111,"byte_end":49152,"line_start":833,"line_end":833,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49157,"byte_end":49160,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&vec[..], &[1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49165,"byte_end":49217,"line_start":835,"line_end":835,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49222,"byte_end":49229,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49779,"byte_end":49786,"line_start":857,"line_end":857,"column_start":8,"column_end":15},"name":"flatten","qualname":"::iter::ParallelIterator::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: IntoParallelIterator","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" An adaptor that flattens iterable `Item`s into one large iterator","sig":null,"attributes":[{"value":"/ An adaptor that flattens iterable `Item`s into one large iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49433,"byte_end":49502,"line_start":845,"line_end":845,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49507,"byte_end":49510,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49515,"byte_end":49529,"line_start":847,"line_end":847,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49534,"byte_end":49537,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49542,"byte_end":49549,"line_start":849,"line_end":849,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49554,"byte_end":49580,"line_start":850,"line_end":850,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49585,"byte_end":49588,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<Vec<_>> = vec![vec![1, 2], vec![3, 4]];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49593,"byte_end":49647,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/ let y: Vec<_> = x.into_par_iter().flatten().collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49652,"byte_end":49710,"line_start":853,"line_end":853,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49715,"byte_end":49718,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(y, vec![1, 2, 3, 4]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49723,"byte_end":49759,"line_start":855,"line_end":855,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49764,"byte_end":49771,"line_start":856,"line_end":856,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3715},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51471,"byte_end":51477,"line_start":894,"line_end":894,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::ParallelIterator::reduce","value":"pub fn reduce<OP, ID>(Self, ID, OP) -> Self::Item where\nOP: Fn(Self::Item, Self::Item) -> Self::Item + Sync + Send, ID: Fn() ->\nSelf::Item + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n The argument `identity` should be a closure that can produce\n \"identity\" value which may be inserted into the sequence as\n needed to create opportunities for parallel execution. So, for\n example, if you are doing a summation, then `identity()` ought\n to produce something that represents the zero for your type\n (but consider just calling `sum()` in that case).","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using `op`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49906,"byte_end":49969,"line_start":864,"line_end":864,"column_start":5,"column_end":68}},{"value":"/ The argument `identity` should be a closure that can produce","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49974,"byte_end":50038,"line_start":865,"line_end":865,"column_start":5,"column_end":69}},{"value":"/ \"identity\" value which may be inserted into the sequence as","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50043,"byte_end":50106,"line_start":866,"line_end":866,"column_start":5,"column_end":68}},{"value":"/ needed to create opportunities for parallel execution. So, for","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50111,"byte_end":50177,"line_start":867,"line_end":867,"column_start":5,"column_end":71}},{"value":"/ example, if you are doing a summation, then `identity()` ought","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50182,"byte_end":50248,"line_start":868,"line_end":868,"column_start":5,"column_end":71}},{"value":"/ to produce something that represents the zero for your type","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50253,"byte_end":50316,"line_start":869,"line_end":869,"column_start":5,"column_end":68}},{"value":"/ (but consider just calling `sum()` in that case).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50321,"byte_end":50374,"line_start":870,"line_end":870,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50379,"byte_end":50382,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50387,"byte_end":50401,"line_start":872,"line_end":872,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50406,"byte_end":50409,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50414,"byte_end":50421,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ // Iterate over a sequence of pairs `(x0, y0), ..., (xN, yN)`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50426,"byte_end":50491,"line_start":875,"line_end":875,"column_start":5,"column_end":70}},{"value":"/ // and use reduce to compute one pair `(x0 + ... + xN, y0 + ... + yN)`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50496,"byte_end":50570,"line_start":876,"line_end":876,"column_start":5,"column_end":79}},{"value":"/ // where the first/second elements are summed separately.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50575,"byte_end":50636,"line_start":877,"line_end":877,"column_start":5,"column_end":66}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50641,"byte_end":50667,"line_start":878,"line_end":878,"column_start":5,"column_end":31}},{"value":"/ let sums = [(0, 1), (5, 6), (16, 2), (8, 9)]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50672,"byte_end":50720,"line_start":879,"line_end":879,"column_start":5,"column_end":53}},{"value":"/            .par_iter()        // iterating over &(i32, i32)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50725,"byte_end":50788,"line_start":880,"line_end":880,"column_start":5,"column_end":68}},{"value":"/            .cloned()          // iterating over (i32, i32)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50793,"byte_end":50855,"line_start":881,"line_end":881,"column_start":5,"column_end":67}},{"value":"/            .reduce(|| (0, 0), // the \"identity\" is 0 in both columns","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50860,"byte_end":50932,"line_start":882,"line_end":882,"column_start":5,"column_end":77}},{"value":"/                    |a, b| (a.0 + b.0, a.1 + b.1));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50937,"byte_end":50991,"line_start":883,"line_end":883,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(sums, (0 + 5 + 16 + 8, 1 + 6 + 2 + 9));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":50996,"byte_end":51050,"line_start":884,"line_end":884,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51055,"byte_end":51062,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51067,"byte_end":51070,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ **Note:** unlike a sequential `fold` operation, the order in","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51075,"byte_end":51139,"line_start":887,"line_end":887,"column_start":5,"column_end":69}},{"value":"/ which `op` will be applied to reduce the result is not fully","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51144,"byte_end":51208,"line_start":888,"line_end":888,"column_start":5,"column_end":69}},{"value":"/ specified. So `op` should be [associative] or else the results","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51213,"byte_end":51279,"line_start":889,"line_end":889,"column_start":5,"column_end":71}},{"value":"/ will be non-deterministic. And of course `identity()` should","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51284,"byte_end":51348,"line_start":890,"line_end":890,"column_start":5,"column_end":69}},{"value":"/ produce a true identity.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51353,"byte_end":51381,"line_start":891,"line_end":891,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51386,"byte_end":51389,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51394,"byte_end":51463,"line_start":893,"line_end":893,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52818,"byte_end":52829,"line_start":928,"line_end":928,"column_start":8,"column_end":19},"name":"reduce_with","qualname":"::iter::ParallelIterator::reduce_with","value":"pub fn reduce_with<OP>(Self, OP) -> Option<Self::Item> where\nOP: Fn(Self::Item, Self::Item) -> Self::Item + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n If the iterator is empty, `None` is returned; otherwise,\n `Some` is returned.","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using `op`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51712,"byte_end":51775,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/ If the iterator is empty, `None` is returned; otherwise,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51780,"byte_end":51840,"line_start":903,"line_end":903,"column_start":5,"column_end":65}},{"value":"/ `Some` is returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51845,"byte_end":51868,"line_start":904,"line_end":904,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51873,"byte_end":51876,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This version of `reduce` is simple but somewhat less","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51881,"byte_end":51937,"line_start":906,"line_end":906,"column_start":5,"column_end":61}},{"value":"/ efficient. If possible, it is better to call `reduce()`, which","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51942,"byte_end":52008,"line_start":907,"line_end":907,"column_start":5,"column_end":71}},{"value":"/ requires an identity element.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52013,"byte_end":52046,"line_start":908,"line_end":908,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52051,"byte_end":52054,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52059,"byte_end":52073,"line_start":910,"line_end":910,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52078,"byte_end":52081,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52086,"byte_end":52093,"line_start":912,"line_end":912,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52098,"byte_end":52124,"line_start":913,"line_end":913,"column_start":5,"column_end":31}},{"value":"/ let sums = [(0, 1), (5, 6), (16, 2), (8, 9)]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52129,"byte_end":52177,"line_start":914,"line_end":914,"column_start":5,"column_end":53}},{"value":"/            .par_iter()        // iterating over &(i32, i32)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52182,"byte_end":52245,"line_start":915,"line_end":915,"column_start":5,"column_end":68}},{"value":"/            .cloned()          // iterating over (i32, i32)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52250,"byte_end":52312,"line_start":916,"line_end":916,"column_start":5,"column_end":67}},{"value":"/            .reduce_with(|a, b| (a.0 + b.0, a.1 + b.1))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52317,"byte_end":52375,"line_start":917,"line_end":917,"column_start":5,"column_end":63}},{"value":"/            .unwrap();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52380,"byte_end":52405,"line_start":918,"line_end":918,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(sums, (0 + 5 + 16 + 8, 1 + 6 + 2 + 9));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52410,"byte_end":52464,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52469,"byte_end":52476,"line_start":920,"line_end":920,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52481,"byte_end":52484,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ **Note:** unlike a sequential `fold` operation, the order in","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52489,"byte_end":52553,"line_start":922,"line_end":922,"column_start":5,"column_end":69}},{"value":"/ which `op` will be applied to reduce the result is not fully","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52558,"byte_end":52622,"line_start":923,"line_end":923,"column_start":5,"column_end":69}},{"value":"/ specified. So `op` should be [associative] or else the results","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52627,"byte_end":52693,"line_start":924,"line_end":924,"column_start":5,"column_end":71}},{"value":"/ will be non-deterministic.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52698,"byte_end":52728,"line_start":925,"line_end":925,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52733,"byte_end":52736,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52741,"byte_end":52810,"line_start":927,"line_end":927,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55013,"byte_end":55023,"line_start":982,"line_end":982,"column_start":8,"column_end":18},"name":"try_reduce","qualname":"::iter::ParallelIterator::try_reduce","value":"pub fn try_reduce<T, OP, ID>(Self, ID, OP) -> Self::Item where OP: Fn(T, T) ->\nSelf::Item + Sync + Send, ID: Fn() -> T + Sync + Send, Self::Item: Try<Ok = T>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.\n The `identity` argument is used the same way as in [`reduce()`].","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using a fallible `op`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":53624,"byte_end":53698,"line_start":951,"line_end":951,"column_start":5,"column_end":79}},{"value":"/ The `identity` argument is used the same way as in [`reduce()`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":53703,"byte_end":53771,"line_start":952,"line_end":952,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":53776,"byte_end":53779,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ [`reduce()`]: #method.reduce","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":53784,"byte_end":53816,"line_start":954,"line_end":954,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":53821,"byte_end":53824,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ If a `Result::Err` or `Option::None` item is found, or if `op` reduces","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":53829,"byte_end":53903,"line_start":956,"line_end":956,"column_start":5,"column_end":79}},{"value":"/ to one, we will attempt to stop processing the rest of the items in the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":53908,"byte_end":53983,"line_start":957,"line_end":957,"column_start":5,"column_end":80}},{"value":"/ iterator as soon as possible, and we will return that terminating value.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":53988,"byte_end":54064,"line_start":958,"line_end":958,"column_start":5,"column_end":81}},{"value":"/ Otherwise, we will return the final reduced `Result::Ok(T)` or","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54069,"byte_end":54135,"line_start":959,"line_end":959,"column_start":5,"column_end":71}},{"value":"/ `Option::Some(T)`.  If there are multiple errors in parallel, it is not","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54140,"byte_end":54215,"line_start":960,"line_end":960,"column_start":5,"column_end":80}},{"value":"/ specified which will be returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54220,"byte_end":54257,"line_start":961,"line_end":961,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54262,"byte_end":54265,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54270,"byte_end":54284,"line_start":963,"line_end":963,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54289,"byte_end":54292,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54297,"byte_end":54304,"line_start":965,"line_end":965,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54309,"byte_end":54335,"line_start":966,"line_end":966,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54340,"byte_end":54343,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ // Compute the sum of squares, being careful about overflow.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54348,"byte_end":54412,"line_start":968,"line_end":968,"column_start":5,"column_end":69}},{"value":"/ fn sum_squares<I: IntoParallelIterator<Item = i32>>(iter: I) -> Option<i32> {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54417,"byte_end":54498,"line_start":969,"line_end":969,"column_start":5,"column_end":86}},{"value":"/     iter.into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54503,"byte_end":54531,"line_start":970,"line_end":970,"column_start":5,"column_end":33}},{"value":"/         .map(|i| i.checked_mul(i))            // square each item,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54536,"byte_end":54606,"line_start":971,"line_end":971,"column_start":5,"column_end":75}},{"value":"/         .try_reduce(|| 0, i32::checked_add)   // and add them up!","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54611,"byte_end":54680,"line_start":972,"line_end":972,"column_start":5,"column_end":74}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54685,"byte_end":54690,"line_start":973,"line_end":973,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(sum_squares(0..5), Some(0 + 1 + 4 + 9 + 16));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54695,"byte_end":54755,"line_start":974,"line_end":974,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54760,"byte_end":54763,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ // The sum might overflow","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54768,"byte_end":54797,"line_start":976,"line_end":976,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(sum_squares(0..10_000), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54802,"byte_end":54847,"line_start":977,"line_end":977,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54852,"byte_end":54855,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ // Or the squares might overflow before it even reaches `try_reduce`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54860,"byte_end":54932,"line_start":979,"line_end":979,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(sum_squares(1_000_000..1_000_001), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54937,"byte_end":54993,"line_start":980,"line_end":980,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":54998,"byte_end":55005,"line_start":981,"line_end":981,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3734},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56650,"byte_end":56665,"line_start":1026,"line_end":1026,"column_start":8,"column_end":23},"name":"try_reduce_with","qualname":"::iter::ParallelIterator::try_reduce_with","value":"pub fn try_reduce_with<T, OP>(Self, OP) -> Option<Self::Item> where\nOP: Fn(T, T) -> Self::Item + Sync + Send, Self::Item: Try<Ok = T>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using a fallible `op`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55275,"byte_end":55349,"line_start":991,"line_end":991,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55354,"byte_end":55357,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ Like [`reduce_with()`], if the iterator is empty, `None` is returned;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55362,"byte_end":55435,"line_start":993,"line_end":993,"column_start":5,"column_end":78}},{"value":"/ otherwise, `Some` is returned.  Beyond that, it behaves like","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55440,"byte_end":55504,"line_start":994,"line_end":994,"column_start":5,"column_end":69}},{"value":"/ [`try_reduce()`] for handling `Err`/`None`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55509,"byte_end":55556,"line_start":995,"line_end":995,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55561,"byte_end":55564,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ [`reduce_with()`]: #method.reduce_with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55569,"byte_end":55611,"line_start":997,"line_end":997,"column_start":5,"column_end":47}},{"value":"/ [`try_reduce()`]: #method.try_reduce","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55616,"byte_end":55656,"line_start":998,"line_end":998,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55661,"byte_end":55664,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ For instance, with `Option` items, the return value may be:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55669,"byte_end":55732,"line_start":1000,"line_end":1000,"column_start":5,"column_end":68}},{"value":"/ - `None`, the iterator was empty","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55737,"byte_end":55773,"line_start":1001,"line_end":1001,"column_start":5,"column_end":41}},{"value":"/ - `Some(None)`, we stopped after encountering `None`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55778,"byte_end":55835,"line_start":1002,"line_end":1002,"column_start":5,"column_end":62}},{"value":"/ - `Some(Some(x))`, the entire iterator reduced to `x`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55840,"byte_end":55898,"line_start":1003,"line_end":1003,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55903,"byte_end":55906,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ With `Result` items, the nesting is more obvious:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55911,"byte_end":55964,"line_start":1005,"line_end":1005,"column_start":5,"column_end":58}},{"value":"/ - `None`, the iterator was empty","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55969,"byte_end":56005,"line_start":1006,"line_end":1006,"column_start":5,"column_end":41}},{"value":"/ - `Some(Err(e))`, we stopped after encountering an error `e`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56010,"byte_end":56075,"line_start":1007,"line_end":1007,"column_start":5,"column_end":70}},{"value":"/ - `Some(Ok(x))`, the entire iterator reduced to `x`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56080,"byte_end":56136,"line_start":1008,"line_end":1008,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56141,"byte_end":56144,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56149,"byte_end":56163,"line_start":1010,"line_end":1010,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56168,"byte_end":56171,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56176,"byte_end":56183,"line_start":1012,"line_end":1012,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56188,"byte_end":56214,"line_start":1013,"line_end":1013,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56219,"byte_end":56222,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ let files = [\"/dev/null\", \"/does/not/exist\"];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56227,"byte_end":56276,"line_start":1015,"line_end":1015,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56281,"byte_end":56284,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ // Find the biggest file","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56289,"byte_end":56317,"line_start":1017,"line_end":1017,"column_start":5,"column_end":33}},{"value":"/ files.into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56322,"byte_end":56347,"line_start":1018,"line_end":1018,"column_start":5,"column_end":30}},{"value":"/     .map(|path| std::fs::metadata(path).map(|m| (path, m.len())))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56352,"byte_end":56421,"line_start":1019,"line_end":1019,"column_start":5,"column_end":74}},{"value":"/     .try_reduce_with(|a, b| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56426,"byte_end":56459,"line_start":1020,"line_end":1020,"column_start":5,"column_end":38}},{"value":"/         Ok(if a.1 >= b.1 { a } else { b })","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56464,"byte_end":56510,"line_start":1021,"line_end":1021,"column_start":5,"column_end":51}},{"value":"/     })","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56515,"byte_end":56525,"line_start":1022,"line_end":1022,"column_start":5,"column_end":15}},{"value":"/     .expect(\"Some value, since the iterator is not empty\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56530,"byte_end":56592,"line_start":1023,"line_end":1023,"column_start":5,"column_end":67}},{"value":"/     .expect_err(\"not found\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56597,"byte_end":56630,"line_start":1024,"line_end":1024,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56635,"byte_end":56642,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3737},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62443,"byte_end":62447,"line_start":1167,"line_end":1167,"column_start":8,"column_end":12},"name":"fold","qualname":"::iter::ParallelIterator::fold","value":"pub fn fold<T, ID, F>(Self, ID, F) -> Fold<Self, ID, F> where\nF: Fn(T, Self::Item) -> T + Sync + Send, ID: Fn() -> T + Sync + Send, T: Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Parallel fold is similar to sequential fold except that the\n sequence of items may be subdivided before it is\n folded. Consider a list of numbers like `22 3 77 89 46`. If\n you used sequential fold to add them (`fold(0, |a,b| a+b)`,\n you would wind up first adding 0 + 22, then 22 + 3, then 25 +\n 77, and so forth. The **parallel fold** works similarly except\n that it first breaks up your list into sublists, and hence\n instead of yielding up a single sum at the end, it yields up\n multiple sums. The number of results is nondeterministic, as\n is the point where the breaks occur.","sig":null,"attributes":[{"value":"/ Parallel fold is similar to sequential fold except that the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56870,"byte_end":56933,"line_start":1034,"line_end":1034,"column_start":5,"column_end":68}},{"value":"/ sequence of items may be subdivided before it is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56938,"byte_end":56990,"line_start":1035,"line_end":1035,"column_start":5,"column_end":57}},{"value":"/ folded. Consider a list of numbers like `22 3 77 89 46`. If","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56995,"byte_end":57058,"line_start":1036,"line_end":1036,"column_start":5,"column_end":68}},{"value":"/ you used sequential fold to add them (`fold(0, |a,b| a+b)`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57063,"byte_end":57126,"line_start":1037,"line_end":1037,"column_start":5,"column_end":68}},{"value":"/ you would wind up first adding 0 + 22, then 22 + 3, then 25 +","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57131,"byte_end":57196,"line_start":1038,"line_end":1038,"column_start":5,"column_end":70}},{"value":"/ 77, and so forth. The **parallel fold** works similarly except","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57201,"byte_end":57267,"line_start":1039,"line_end":1039,"column_start":5,"column_end":71}},{"value":"/ that it first breaks up your list into sublists, and hence","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57272,"byte_end":57334,"line_start":1040,"line_end":1040,"column_start":5,"column_end":67}},{"value":"/ instead of yielding up a single sum at the end, it yields up","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57339,"byte_end":57403,"line_start":1041,"line_end":1041,"column_start":5,"column_end":69}},{"value":"/ multiple sums. The number of results is nondeterministic, as","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57408,"byte_end":57472,"line_start":1042,"line_end":1042,"column_start":5,"column_end":69}},{"value":"/ is the point where the breaks occur.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57477,"byte_end":57517,"line_start":1043,"line_end":1043,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57522,"byte_end":57525,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ So if did the same parallel fold (`fold(0, |a,b| a+b)`) on","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57530,"byte_end":57592,"line_start":1045,"line_end":1045,"column_start":5,"column_end":67}},{"value":"/ our example list, we might wind up with a sequence of two numbers,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57597,"byte_end":57667,"line_start":1046,"line_end":1046,"column_start":5,"column_end":75}},{"value":"/ like so:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57672,"byte_end":57684,"line_start":1047,"line_end":1047,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57689,"byte_end":57692,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57697,"byte_end":57711,"line_start":1049,"line_end":1049,"column_start":5,"column_end":19}},{"value":"/ 22 3 77 89 46","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57716,"byte_end":57733,"line_start":1050,"line_end":1050,"column_start":5,"column_end":22}},{"value":"/       |     |","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57738,"byte_end":57755,"line_start":1051,"line_end":1051,"column_start":5,"column_end":22}},{"value":"/     102   135","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57760,"byte_end":57777,"line_start":1052,"line_end":1052,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57782,"byte_end":57789,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57794,"byte_end":57797,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ Or perhaps these three numbers:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57802,"byte_end":57837,"line_start":1055,"line_end":1055,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57842,"byte_end":57845,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57850,"byte_end":57864,"line_start":1057,"line_end":1057,"column_start":5,"column_end":19}},{"value":"/ 22 3 77 89 46","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57869,"byte_end":57886,"line_start":1058,"line_end":1058,"column_start":5,"column_end":22}},{"value":"/       |  |  |","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57891,"byte_end":57908,"line_start":1059,"line_end":1059,"column_start":5,"column_end":22}},{"value":"/     102 89 46","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57913,"byte_end":57930,"line_start":1060,"line_end":1060,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57935,"byte_end":57942,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57947,"byte_end":57950,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ In general, Rayon will attempt to find good breaking points","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":57955,"byte_end":58018,"line_start":1063,"line_end":1063,"column_start":5,"column_end":68}},{"value":"/ that keep all of your cores busy.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58023,"byte_end":58060,"line_start":1064,"line_end":1064,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58065,"byte_end":58068,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ ### Fold versus reduce","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58073,"byte_end":58099,"line_start":1066,"line_end":1066,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58104,"byte_end":58107,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ The `fold()` and `reduce()` methods each take an identity element","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58112,"byte_end":58181,"line_start":1068,"line_end":1068,"column_start":5,"column_end":74}},{"value":"/ and a combining function, but they operate rather differently.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58186,"byte_end":58252,"line_start":1069,"line_end":1069,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58257,"byte_end":58260,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ `reduce()` requires that the identity function has the same","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58265,"byte_end":58328,"line_start":1071,"line_end":1071,"column_start":5,"column_end":68}},{"value":"/ type as the things you are iterating over, and it fully","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58333,"byte_end":58392,"line_start":1072,"line_end":1072,"column_start":5,"column_end":64}},{"value":"/ reduces the list of items into a single item. So, for example,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58397,"byte_end":58463,"line_start":1073,"line_end":1073,"column_start":5,"column_end":71}},{"value":"/ imagine we are iterating over a list of bytes `bytes: [128_u8,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58468,"byte_end":58534,"line_start":1074,"line_end":1074,"column_start":5,"column_end":71}},{"value":"/ 64_u8, 64_u8]`. If we used `bytes.reduce(|| 0_u8, |a: u8, b:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58539,"byte_end":58603,"line_start":1075,"line_end":1075,"column_start":5,"column_end":69}},{"value":"/ u8| a + b)`, we would get an overflow. This is because `0`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58608,"byte_end":58671,"line_start":1076,"line_end":1076,"column_start":5,"column_end":68}},{"value":"/ `a`, and `b` here are all bytes, just like the numbers in the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58676,"byte_end":58741,"line_start":1077,"line_end":1077,"column_start":5,"column_end":70}},{"value":"/ list (I wrote the types explicitly above, but those are the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58746,"byte_end":58809,"line_start":1078,"line_end":1078,"column_start":5,"column_end":68}},{"value":"/ only types you can use). To avoid the overflow, we would need","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58814,"byte_end":58879,"line_start":1079,"line_end":1079,"column_start":5,"column_end":70}},{"value":"/ to do something like `bytes.map(|b| b as u32).reduce(|| 0, |a,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58884,"byte_end":58950,"line_start":1080,"line_end":1080,"column_start":5,"column_end":71}},{"value":"/ b| a + b)`, in which case our result would be `256`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":58955,"byte_end":59011,"line_start":1081,"line_end":1081,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59016,"byte_end":59019,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ In contrast, with `fold()`, the identity function does not","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59024,"byte_end":59086,"line_start":1083,"line_end":1083,"column_start":5,"column_end":67}},{"value":"/ have to have the same type as the things you are iterating","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59091,"byte_end":59153,"line_start":1084,"line_end":1084,"column_start":5,"column_end":67}},{"value":"/ over, and you potentially get back many results. So, if we","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59158,"byte_end":59220,"line_start":1085,"line_end":1085,"column_start":5,"column_end":67}},{"value":"/ continue with the `bytes` example from the previous paragraph,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59225,"byte_end":59291,"line_start":1086,"line_end":1086,"column_start":5,"column_end":71}},{"value":"/ we could do `bytes.fold(|| 0_u32, |a, b| a + (b as u32))` to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59296,"byte_end":59360,"line_start":1087,"line_end":1087,"column_start":5,"column_end":69}},{"value":"/ convert our bytes into `u32`. And of course we might not get","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59365,"byte_end":59429,"line_start":1088,"line_end":1088,"column_start":5,"column_end":69}},{"value":"/ back a single sum.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59434,"byte_end":59456,"line_start":1089,"line_end":1089,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59461,"byte_end":59464,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ There is a more subtle distinction as well, though it's","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59469,"byte_end":59528,"line_start":1091,"line_end":1091,"column_start":5,"column_end":64}},{"value":"/ actually implied by the above points. When you use `reduce()`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59533,"byte_end":59599,"line_start":1092,"line_end":1092,"column_start":5,"column_end":71}},{"value":"/ your reduction function is sometimes called with values that","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59604,"byte_end":59668,"line_start":1093,"line_end":1093,"column_start":5,"column_end":69}},{"value":"/ were never part of your original parallel iterator (for","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59673,"byte_end":59732,"line_start":1094,"line_end":1094,"column_start":5,"column_end":64}},{"value":"/ example, both the left and right might be a partial sum). With","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59737,"byte_end":59803,"line_start":1095,"line_end":1095,"column_start":5,"column_end":71}},{"value":"/ `fold()`, in contrast, the left value in the fold function is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59808,"byte_end":59873,"line_start":1096,"line_end":1096,"column_start":5,"column_end":70}},{"value":"/ always the accumulator, and the right value is always from","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59878,"byte_end":59940,"line_start":1097,"line_end":1097,"column_start":5,"column_end":67}},{"value":"/ your original sequence.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59945,"byte_end":59972,"line_start":1098,"line_end":1098,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59977,"byte_end":59980,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ ### Fold vs Map/Reduce","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":59985,"byte_end":60011,"line_start":1100,"line_end":1100,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60016,"byte_end":60019,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ Fold makes sense if you have some operation where it is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60024,"byte_end":60083,"line_start":1102,"line_end":1102,"column_start":5,"column_end":64}},{"value":"/ cheaper to create groups of elements at a time. For example,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60088,"byte_end":60152,"line_start":1103,"line_end":1103,"column_start":5,"column_end":69}},{"value":"/ imagine collecting characters into a string. If you were going","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60157,"byte_end":60223,"line_start":1104,"line_end":1104,"column_start":5,"column_end":71}},{"value":"/ to use map/reduce, you might try this:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60228,"byte_end":60270,"line_start":1105,"line_end":1105,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60275,"byte_end":60278,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60283,"byte_end":60290,"line_start":1107,"line_end":1107,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60295,"byte_end":60321,"line_start":1108,"line_end":1108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60326,"byte_end":60329,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let s =","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60334,"byte_end":60345,"line_start":1110,"line_end":1110,"column_start":5,"column_end":16}},{"value":"/     ['a', 'b', 'c', 'd', 'e']","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60350,"byte_end":60383,"line_start":1111,"line_end":1111,"column_start":5,"column_end":38}},{"value":"/     .par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60388,"byte_end":60407,"line_start":1112,"line_end":1112,"column_start":5,"column_end":24}},{"value":"/     .map(|c: &char| format!(\"{}\", c))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60412,"byte_end":60453,"line_start":1113,"line_end":1113,"column_start":5,"column_end":46}},{"value":"/     .reduce(|| String::new(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60458,"byte_end":60491,"line_start":1114,"line_end":1114,"column_start":5,"column_end":38}},{"value":"/             |mut a: String, b: String| { a.push_str(&b); a });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60496,"byte_end":60562,"line_start":1115,"line_end":1115,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60567,"byte_end":60570,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s, \"abcde\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60575,"byte_end":60602,"line_start":1117,"line_end":1117,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60607,"byte_end":60614,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60619,"byte_end":60622,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ Because reduce produces the same type of element as its input,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60627,"byte_end":60693,"line_start":1120,"line_end":1120,"column_start":5,"column_end":71}},{"value":"/ you have to first map each character into a string, and then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60698,"byte_end":60762,"line_start":1121,"line_end":1121,"column_start":5,"column_end":69}},{"value":"/ you can reduce them. This means we create one string per","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60767,"byte_end":60827,"line_start":1122,"line_end":1122,"column_start":5,"column_end":65}},{"value":"/ element in our iterator -- not so great. Using `fold`, we can","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60832,"byte_end":60897,"line_start":1123,"line_end":1123,"column_start":5,"column_end":70}},{"value":"/ do this instead:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60902,"byte_end":60922,"line_start":1124,"line_end":1124,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60927,"byte_end":60930,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60935,"byte_end":60942,"line_start":1126,"line_end":1126,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60947,"byte_end":60973,"line_start":1127,"line_end":1127,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60978,"byte_end":60981,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ let s =","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":60986,"byte_end":60997,"line_start":1129,"line_end":1129,"column_start":5,"column_end":16}},{"value":"/     ['a', 'b', 'c', 'd', 'e']","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61002,"byte_end":61035,"line_start":1130,"line_end":1130,"column_start":5,"column_end":38}},{"value":"/     .par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61040,"byte_end":61059,"line_start":1131,"line_end":1131,"column_start":5,"column_end":24}},{"value":"/     .fold(|| String::new(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61064,"byte_end":61095,"line_start":1132,"line_end":1132,"column_start":5,"column_end":36}},{"value":"/             |mut s: String, c: &char| { s.push(*c); s })","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61100,"byte_end":61160,"line_start":1133,"line_end":1133,"column_start":5,"column_end":65}},{"value":"/     .reduce(|| String::new(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61165,"byte_end":61198,"line_start":1134,"line_end":1134,"column_start":5,"column_end":38}},{"value":"/             |mut a: String, b: String| { a.push_str(&b); a });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61203,"byte_end":61269,"line_start":1135,"line_end":1135,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61274,"byte_end":61277,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s, \"abcde\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61282,"byte_end":61309,"line_start":1137,"line_end":1137,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61314,"byte_end":61321,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61326,"byte_end":61329,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ Now `fold` will process groups of our characters at a time,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61334,"byte_end":61397,"line_start":1140,"line_end":1140,"column_start":5,"column_end":68}},{"value":"/ and we only make one string per group. We should wind up with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61402,"byte_end":61467,"line_start":1141,"line_end":1141,"column_start":5,"column_end":70}},{"value":"/ some small-ish number of strings roughly proportional to the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61472,"byte_end":61536,"line_start":1142,"line_end":1142,"column_start":5,"column_end":69}},{"value":"/ number of CPUs you have (it will ultimately depend on how busy","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61541,"byte_end":61607,"line_start":1143,"line_end":1143,"column_start":5,"column_end":71}},{"value":"/ your processors are). Note that we still need to do a reduce","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61612,"byte_end":61676,"line_start":1144,"line_end":1144,"column_start":5,"column_end":69}},{"value":"/ afterwards to combine those groups of strings into a single","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61681,"byte_end":61744,"line_start":1145,"line_end":1145,"column_start":5,"column_end":68}},{"value":"/ string.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61749,"byte_end":61760,"line_start":1146,"line_end":1146,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61765,"byte_end":61768,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ You could use a similar trick to save partial results (e.g., a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61773,"byte_end":61839,"line_start":1148,"line_end":1148,"column_start":5,"column_end":71}},{"value":"/ cache) or something similar.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61844,"byte_end":61876,"line_start":1149,"line_end":1149,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61881,"byte_end":61884,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ ### Combining fold with other operations","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61889,"byte_end":61933,"line_start":1151,"line_end":1151,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61938,"byte_end":61941,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ You can combine `fold` with `reduce` if you want to produce a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":61946,"byte_end":62011,"line_start":1153,"line_end":1153,"column_start":5,"column_end":70}},{"value":"/ single value. This is then roughly equivalent to a map/reduce","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62016,"byte_end":62081,"line_start":1154,"line_end":1154,"column_start":5,"column_end":70}},{"value":"/ combination in effect:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62086,"byte_end":62112,"line_start":1155,"line_end":1155,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62117,"byte_end":62120,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62125,"byte_end":62132,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62137,"byte_end":62163,"line_start":1158,"line_end":1158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62168,"byte_end":62171,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62176,"byte_end":62201,"line_start":1160,"line_end":1160,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62206,"byte_end":62241,"line_start":1161,"line_end":1161,"column_start":5,"column_end":40}},{"value":"/                .fold(|| 0_u32, |a: u32, b: u8| a + (b as u32))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62246,"byte_end":62312,"line_start":1162,"line_end":1162,"column_start":5,"column_end":71}},{"value":"/                .sum::<u32>();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62317,"byte_end":62350,"line_start":1163,"line_end":1163,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62355,"byte_end":62358,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, (0..22).sum()); // compare to sequential","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62363,"byte_end":62423,"line_start":1165,"line_end":1165,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62428,"byte_end":62435,"line_start":1166,"line_end":1166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63372,"byte_end":63381,"line_start":1195,"line_end":1195,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::ParallelIterator::fold_with","value":"pub fn fold_with<F, T>(Self, T, F) -> FoldWith<Self, T, F> where\nF: Fn(T, Self::Item) -> T + Sync + Send, T: Send + Clone","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Applies `fold_op` to the given `init` value with each item of this\n iterator, finally producing the value for further use.","sig":null,"attributes":[{"value":"/ Applies `fold_op` to the given `init` value with each item of this","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62684,"byte_end":62754,"line_start":1176,"line_end":1176,"column_start":5,"column_end":75}},{"value":"/ iterator, finally producing the value for further use.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62759,"byte_end":62817,"line_start":1177,"line_end":1177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62822,"byte_end":62825,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ This works essentially like `fold(|| init.clone(), fold_op)`, except","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62830,"byte_end":62902,"line_start":1179,"line_end":1179,"column_start":5,"column_end":77}},{"value":"/ it doesn't require the `init` type to be `Sync`, nor any other form","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62907,"byte_end":62978,"line_start":1180,"line_end":1180,"column_start":5,"column_end":76}},{"value":"/ of added synchronization.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62983,"byte_end":63012,"line_start":1181,"line_end":1181,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63017,"byte_end":63020,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63025,"byte_end":63039,"line_start":1183,"line_end":1183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63044,"byte_end":63047,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63052,"byte_end":63059,"line_start":1185,"line_end":1185,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63064,"byte_end":63090,"line_start":1186,"line_end":1186,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63095,"byte_end":63098,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63103,"byte_end":63128,"line_start":1188,"line_end":1188,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63133,"byte_end":63168,"line_start":1189,"line_end":1189,"column_start":5,"column_end":40}},{"value":"/                .fold_with(0_u32, |a: u32, b: u8| a + (b as u32))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63173,"byte_end":63241,"line_start":1190,"line_end":1190,"column_start":5,"column_end":73}},{"value":"/                .sum::<u32>();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63246,"byte_end":63279,"line_start":1191,"line_end":1191,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63284,"byte_end":63287,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, (0..22).sum()); // compare to sequential","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63292,"byte_end":63352,"line_start":1193,"line_end":1193,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63357,"byte_end":63364,"line_start":1194,"line_end":1194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64513,"byte_end":64521,"line_start":1228,"line_end":1228,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::iter::ParallelIterator::try_fold","value":"pub fn try_fold<T, R, ID, F>(Self, ID, F) -> TryFold<Self, R, ID, F> where\nF: Fn(T, Self::Item) -> R + Sync + Send, ID: Fn() -> T + Sync + Send,\nR: Try<Ok = T> + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Perform a fallible parallel fold.","sig":null,"attributes":[{"value":"/ Perform a fallible parallel fold.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63583,"byte_end":63620,"line_start":1203,"line_end":1203,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63625,"byte_end":63628,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ This is a variation of [`fold()`] for operations which can fail with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63633,"byte_end":63705,"line_start":1205,"line_end":1205,"column_start":5,"column_end":77}},{"value":"/ `Option::None` or `Result::Err`.  The first such failure stops","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63710,"byte_end":63776,"line_start":1206,"line_end":1206,"column_start":5,"column_end":71}},{"value":"/ processing the local set of items, without affecting other folds in the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63781,"byte_end":63856,"line_start":1207,"line_end":1207,"column_start":5,"column_end":80}},{"value":"/ iterator's subdivisions.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63861,"byte_end":63889,"line_start":1208,"line_end":1208,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63894,"byte_end":63897,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ Often, `try_fold()` will be followed by [`try_reduce()`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63902,"byte_end":63962,"line_start":1210,"line_end":1210,"column_start":5,"column_end":65}},{"value":"/ for a final reduction and global short-circuiting effect.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63967,"byte_end":64028,"line_start":1211,"line_end":1211,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64033,"byte_end":64036,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ [`fold()`]: #method.fold","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64041,"byte_end":64069,"line_start":1213,"line_end":1213,"column_start":5,"column_end":33}},{"value":"/ [`try_reduce()`]: #method.try_reduce","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64074,"byte_end":64114,"line_start":1214,"line_end":1214,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64119,"byte_end":64122,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64127,"byte_end":64141,"line_start":1216,"line_end":1216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64146,"byte_end":64149,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64154,"byte_end":64161,"line_start":1218,"line_end":1218,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64166,"byte_end":64192,"line_start":1219,"line_end":1219,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64197,"byte_end":64200,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64205,"byte_end":64230,"line_start":1221,"line_end":1221,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64235,"byte_end":64270,"line_start":1222,"line_end":1222,"column_start":5,"column_end":40}},{"value":"/                .try_fold(|| 0_u32, |a: u32, b: u8| a.checked_add(b as u32))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64275,"byte_end":64354,"line_start":1223,"line_end":1223,"column_start":5,"column_end":84}},{"value":"/                .try_reduce(|| 0, u32::checked_add);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64359,"byte_end":64414,"line_start":1224,"line_end":1224,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64419,"byte_end":64422,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, Some((0..22).sum())); // compare to sequential","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64427,"byte_end":64493,"line_start":1226,"line_end":1226,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64498,"byte_end":64505,"line_start":1227,"line_end":1227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65440,"byte_end":65453,"line_start":1255,"line_end":1255,"column_start":8,"column_end":21},"name":"try_fold_with","qualname":"::iter::ParallelIterator::try_fold_with","value":"pub fn try_fold_with<F, T, R>(Self, T, F) -> TryFoldWith<Self, R, F> where\nF: Fn(T, Self::Item) -> R + Sync + Send, R: Try<Ok = T> + Send, T: Clone +\nSend","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Perform a fallible parallel fold with a cloneable `init` value.","sig":null,"attributes":[{"value":"/ Perform a fallible parallel fold with a cloneable `init` value.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64784,"byte_end":64851,"line_start":1237,"line_end":1237,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64856,"byte_end":64859,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`fold_with()`] and the failure","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64864,"byte_end":64937,"line_start":1239,"line_end":1239,"column_start":5,"column_end":78}},{"value":"/ semantics of [`try_fold()`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64942,"byte_end":64974,"line_start":1240,"line_end":1240,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64979,"byte_end":64982,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ [`fold_with()`]: #method.fold_with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64987,"byte_end":65025,"line_start":1242,"line_end":1242,"column_start":5,"column_end":43}},{"value":"/ [`try_fold()`]: #method.try_fold","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65030,"byte_end":65066,"line_start":1243,"line_end":1243,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65071,"byte_end":65074,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65079,"byte_end":65086,"line_start":1245,"line_end":1245,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65091,"byte_end":65117,"line_start":1246,"line_end":1246,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65122,"byte_end":65125,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65130,"byte_end":65155,"line_start":1248,"line_end":1248,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65160,"byte_end":65195,"line_start":1249,"line_end":1249,"column_start":5,"column_end":40}},{"value":"/                .try_fold_with(0_u32, |a: u32, b: u8| a.checked_add(b as u32))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65200,"byte_end":65281,"line_start":1250,"line_end":1250,"column_start":5,"column_end":86}},{"value":"/                .try_reduce(|| 0, u32::checked_add);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65286,"byte_end":65341,"line_start":1251,"line_end":1251,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65346,"byte_end":65349,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, Some((0..22).sum())); // compare to sequential","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65354,"byte_end":65420,"line_start":1253,"line_end":1253,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65425,"byte_end":65432,"line_start":1254,"line_end":1254,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66478,"byte_end":66481,"line_start":1288,"line_end":1288,"column_start":8,"column_end":11},"name":"sum","qualname":"::iter::ParallelIterator::sum","value":"pub fn sum<S>(Self) -> S where S: Send + Sum<Self::Item> + Sum<S>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Sums up the items in the iterator.","sig":null,"attributes":[{"value":"/ Sums up the items in the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65695,"byte_end":65733,"line_start":1264,"line_end":1264,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65738,"byte_end":65741,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ Note that the order in items will be reduced is not specified,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65746,"byte_end":65812,"line_start":1266,"line_end":1266,"column_start":5,"column_end":71}},{"value":"/ so if the `+` operator is not truly [associative] \\(as is the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65817,"byte_end":65882,"line_start":1267,"line_end":1267,"column_start":5,"column_end":70}},{"value":"/ case for floating point numbers), then the results are not","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65887,"byte_end":65949,"line_start":1268,"line_end":1268,"column_start":5,"column_end":67}},{"value":"/ fully deterministic.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65954,"byte_end":65978,"line_start":1269,"line_end":1269,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65983,"byte_end":65986,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65991,"byte_end":66060,"line_start":1271,"line_end":1271,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66065,"byte_end":66068,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce(|| 0, |a, b| a + b)`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66073,"byte_end":66135,"line_start":1273,"line_end":1273,"column_start":5,"column_end":67}},{"value":"/ except that the type of `0` and the `+` operation may vary","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66140,"byte_end":66202,"line_start":1274,"line_end":1274,"column_start":5,"column_end":67}},{"value":"/ depending on the type of value being produced.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66207,"byte_end":66257,"line_start":1275,"line_end":1275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66262,"byte_end":66265,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66270,"byte_end":66284,"line_start":1277,"line_end":1277,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66289,"byte_end":66292,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66297,"byte_end":66304,"line_start":1279,"line_end":1279,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66309,"byte_end":66335,"line_start":1280,"line_end":1280,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66340,"byte_end":66343,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 5, 7];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66348,"byte_end":66370,"line_start":1282,"line_end":1282,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66375,"byte_end":66378,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ let sum: i32 = a.par_iter().sum();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66383,"byte_end":66421,"line_start":1284,"line_end":1284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66426,"byte_end":66429,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 13);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66434,"byte_end":66458,"line_start":1286,"line_end":1286,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66463,"byte_end":66470,"line_start":1287,"line_end":1287,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3755},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67480,"byte_end":67487,"line_start":1321,"line_end":1321,"column_start":8,"column_end":15},"name":"product","qualname":"::iter::ParallelIterator::product","value":"pub fn product<P>(Self) -> P where P: Send + Product<Self::Item> + Product<P>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Multiplies all the items in the iterator.","sig":null,"attributes":[{"value":"/ Multiplies all the items in the iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66590,"byte_end":66635,"line_start":1295,"line_end":1295,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66640,"byte_end":66643,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ Note that the order in items will be reduced is not specified,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66648,"byte_end":66714,"line_start":1297,"line_end":1297,"column_start":5,"column_end":71}},{"value":"/ so if the `*` operator is not truly [associative] \\(as is the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66719,"byte_end":66784,"line_start":1298,"line_end":1298,"column_start":5,"column_end":70}},{"value":"/ case for floating point numbers), then the results are not","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66789,"byte_end":66851,"line_start":1299,"line_end":1299,"column_start":5,"column_end":67}},{"value":"/ fully deterministic.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66856,"byte_end":66880,"line_start":1300,"line_end":1300,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66885,"byte_end":66888,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66893,"byte_end":66962,"line_start":1302,"line_end":1302,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66967,"byte_end":66970,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce(|| 1, |a, b| a * b)`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66975,"byte_end":67037,"line_start":1304,"line_end":1304,"column_start":5,"column_end":67}},{"value":"/ except that the type of `1` and the `*` operation may vary","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67042,"byte_end":67104,"line_start":1305,"line_end":1305,"column_start":5,"column_end":67}},{"value":"/ depending on the type of value being produced.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67109,"byte_end":67159,"line_start":1306,"line_end":1306,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67164,"byte_end":67167,"line_start":1307,"line_end":1307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67172,"byte_end":67186,"line_start":1308,"line_end":1308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67191,"byte_end":67194,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67199,"byte_end":67206,"line_start":1310,"line_end":1310,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67211,"byte_end":67237,"line_start":1311,"line_end":1311,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67242,"byte_end":67245,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ fn factorial(n: u32) -> u32 {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67250,"byte_end":67283,"line_start":1313,"line_end":1313,"column_start":5,"column_end":38}},{"value":"/    (1..n+1).into_par_iter().product()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67288,"byte_end":67329,"line_start":1314,"line_end":1314,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67334,"byte_end":67339,"line_start":1315,"line_end":1315,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67344,"byte_end":67347,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(factorial(0), 1);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67352,"byte_end":67384,"line_start":1317,"line_end":1317,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(factorial(1), 1);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67389,"byte_end":67421,"line_start":1318,"line_end":1318,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(factorial(5), 120);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67426,"byte_end":67460,"line_start":1319,"line_end":1319,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67465,"byte_end":67472,"line_start":1320,"line_end":1320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3757},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68330,"byte_end":68333,"line_start":1351,"line_end":1351,"column_start":8,"column_end":11},"name":"min","qualname":"::iter::ParallelIterator::min","value":"pub fn min(Self) -> Option<Self::Item> where Self::Item: Ord","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(min)`\n is returned.","sig":null,"attributes":[{"value":"/ Computes the minimum of all the items in the iterator. If the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67612,"byte_end":67677,"line_start":1328,"line_end":1328,"column_start":5,"column_end":70}},{"value":"/ iterator is empty, `None` is returned; otherwise, `Some(min)`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67682,"byte_end":67747,"line_start":1329,"line_end":1329,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67752,"byte_end":67768,"line_start":1330,"line_end":1330,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67773,"byte_end":67776,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67781,"byte_end":67846,"line_start":1332,"line_end":1332,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67851,"byte_end":67917,"line_start":1333,"line_end":1333,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67922,"byte_end":67960,"line_start":1334,"line_end":1334,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67965,"byte_end":67968,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce_with(|a, b| cmp::min(a, b))`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67973,"byte_end":68043,"line_start":1336,"line_end":1336,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68048,"byte_end":68051,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68056,"byte_end":68070,"line_start":1338,"line_end":1338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68075,"byte_end":68078,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68083,"byte_end":68090,"line_start":1340,"line_end":1340,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68095,"byte_end":68121,"line_start":1341,"line_end":1341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68126,"byte_end":68129,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ let a = [45, 74, 32];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68134,"byte_end":68159,"line_start":1343,"line_end":1343,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68164,"byte_end":68167,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min(), Some(&32));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68172,"byte_end":68218,"line_start":1345,"line_end":1345,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68223,"byte_end":68226,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ let b: [i32; 0] = [];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68231,"byte_end":68256,"line_start":1347,"line_end":1347,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68261,"byte_end":68264,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.par_iter().min(), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68269,"byte_end":68310,"line_start":1349,"line_end":1349,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68315,"byte_end":68322,"line_start":1350,"line_end":1350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69072,"byte_end":69078,"line_start":1375,"line_end":1375,"column_start":8,"column_end":14},"name":"min_by","qualname":"::iter::ParallelIterator::min_by","value":"pub fn min_by<F>(Self, F) -> Option<Self::Item> where F: Sync + Send +\nFn(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[{"value":"/ Computes the minimum of all the items in the iterator with respect to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68449,"byte_end":68522,"line_start":1358,"line_end":1358,"column_start":5,"column_end":78}},{"value":"/ the given comparison function. If the iterator is empty, `None` is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68527,"byte_end":68597,"line_start":1359,"line_end":1359,"column_start":5,"column_end":75}},{"value":"/ returned; otherwise, `Some(min)` is returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68602,"byte_end":68651,"line_start":1360,"line_end":1360,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68656,"byte_end":68659,"line_start":1361,"line_end":1361,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68664,"byte_end":68729,"line_start":1362,"line_end":1362,"column_start":5,"column_end":70}},{"value":"/ specified, so if the comparison function is not associative, then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68734,"byte_end":68803,"line_start":1363,"line_end":1363,"column_start":5,"column_end":74}},{"value":"/ the results are not deterministic.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68808,"byte_end":68846,"line_start":1364,"line_end":1364,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68851,"byte_end":68854,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68859,"byte_end":68873,"line_start":1366,"line_end":1366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68878,"byte_end":68881,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68886,"byte_end":68893,"line_start":1368,"line_end":1368,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68898,"byte_end":68924,"line_start":1369,"line_end":1369,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68929,"byte_end":68932,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 77, 53, 240, -1];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68937,"byte_end":68975,"line_start":1371,"line_end":1371,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68980,"byte_end":68983,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min_by(|x, y| x.cmp(y)), Some(&-3));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68988,"byte_end":69052,"line_start":1373,"line_end":1373,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69057,"byte_end":69064,"line_start":1374,"line_end":1374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3765},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":70046,"byte_end":70056,"line_start":1406,"line_end":1406,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::iter::ParallelIterator::min_by_key","value":"pub fn min_by_key<K, F>(Self, F) -> Option<Self::Item> where K: Ord + Send,\nF: Sync + Send + Fn(&Self::Item) -> K","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Computes the item that yields the minimum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[{"value":"/ Computes the item that yields the minimum value for the given","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69448,"byte_end":69513,"line_start":1389,"line_end":1389,"column_start":5,"column_end":70}},{"value":"/ function. If the iterator is empty, `None` is returned;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69518,"byte_end":69577,"line_start":1390,"line_end":1390,"column_start":5,"column_end":64}},{"value":"/ otherwise, `Some(item)` is returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69582,"byte_end":69622,"line_start":1391,"line_end":1391,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69627,"byte_end":69630,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69635,"byte_end":69700,"line_start":1393,"line_end":1393,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69705,"byte_end":69771,"line_start":1394,"line_end":1394,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69776,"byte_end":69814,"line_start":1395,"line_end":1395,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69819,"byte_end":69822,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69827,"byte_end":69841,"line_start":1397,"line_end":1397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69846,"byte_end":69849,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69854,"byte_end":69861,"line_start":1399,"line_end":1399,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69866,"byte_end":69892,"line_start":1400,"line_end":1400,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69897,"byte_end":69900,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 34, 2, 5, -10, -3, -23];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69905,"byte_end":69950,"line_start":1402,"line_end":1402,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69955,"byte_end":69958,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min_by_key(|x| x.abs()), Some(&2));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69963,"byte_end":70026,"line_start":1404,"line_end":1404,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":70031,"byte_end":70038,"line_start":1405,"line_end":1405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71289,"byte_end":71292,"line_start":1449,"line_end":1449,"column_start":8,"column_end":11},"name":"max","qualname":"::iter::ParallelIterator::max","value":"pub fn max(Self) -> Option<Self::Item> where Self::Item: Ord","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(max)`\n is returned.","sig":null,"attributes":[{"value":"/ Computes the maximum of all the items in the iterator. If the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":70571,"byte_end":70636,"line_start":1426,"line_end":1426,"column_start":5,"column_end":70}},{"value":"/ iterator is empty, `None` is returned; otherwise, `Some(max)`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":70641,"byte_end":70706,"line_start":1427,"line_end":1427,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":70711,"byte_end":70727,"line_start":1428,"line_end":1428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":70732,"byte_end":70735,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":70740,"byte_end":70805,"line_start":1430,"line_end":1430,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":70810,"byte_end":70876,"line_start":1431,"line_end":1431,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":70881,"byte_end":70919,"line_start":1432,"line_end":1432,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":70924,"byte_end":70927,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce_with(|a, b| cmp::max(a, b))`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":70932,"byte_end":71002,"line_start":1434,"line_end":1434,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71007,"byte_end":71010,"line_start":1435,"line_end":1435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71015,"byte_end":71029,"line_start":1436,"line_end":1436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71034,"byte_end":71037,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71042,"byte_end":71049,"line_start":1438,"line_end":1438,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71054,"byte_end":71080,"line_start":1439,"line_end":1439,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71085,"byte_end":71088,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ let a = [45, 74, 32];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71093,"byte_end":71118,"line_start":1441,"line_end":1441,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71123,"byte_end":71126,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max(), Some(&74));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71131,"byte_end":71177,"line_start":1443,"line_end":1443,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71182,"byte_end":71185,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ let b: [i32; 0] = [];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71190,"byte_end":71215,"line_start":1445,"line_end":1445,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71220,"byte_end":71223,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.par_iter().max(), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71228,"byte_end":71269,"line_start":1447,"line_end":1447,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71274,"byte_end":71281,"line_start":1448,"line_end":1448,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72045,"byte_end":72051,"line_start":1473,"line_end":1473,"column_start":8,"column_end":14},"name":"max_by","qualname":"::iter::ParallelIterator::max_by","value":"pub fn max_by<F>(Self, F) -> Option<Self::Item> where F: Sync + Send +\nFn(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[{"value":"/ Computes the maximum of all the items in the iterator with respect to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71408,"byte_end":71481,"line_start":1456,"line_end":1456,"column_start":5,"column_end":78}},{"value":"/ the given comparison function. If the iterator is empty, `None` is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71486,"byte_end":71556,"line_start":1457,"line_end":1457,"column_start":5,"column_end":75}},{"value":"/ returned; otherwise, `Some(min)` is returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71561,"byte_end":71610,"line_start":1458,"line_end":1458,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71615,"byte_end":71618,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71623,"byte_end":71688,"line_start":1460,"line_end":1460,"column_start":5,"column_end":70}},{"value":"/ specified, so if the comparison function is not associative, then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71693,"byte_end":71762,"line_start":1461,"line_end":1461,"column_start":5,"column_end":74}},{"value":"/ the results are not deterministic.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71767,"byte_end":71805,"line_start":1462,"line_end":1462,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71810,"byte_end":71813,"line_start":1463,"line_end":1463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71818,"byte_end":71832,"line_start":1464,"line_end":1464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71837,"byte_end":71840,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71845,"byte_end":71852,"line_start":1466,"line_end":1466,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71857,"byte_end":71883,"line_start":1467,"line_end":1467,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71888,"byte_end":71891,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 77, 53, 240, -1];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71896,"byte_end":71934,"line_start":1469,"line_end":1469,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71939,"byte_end":71942,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max_by(|x, y| x.abs().cmp(&y.abs())), Some(&240));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71947,"byte_end":72025,"line_start":1471,"line_end":1471,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72030,"byte_end":72037,"line_start":1472,"line_end":1472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73020,"byte_end":73030,"line_start":1504,"line_end":1504,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::iter::ParallelIterator::max_by_key","value":"pub fn max_by_key<K, F>(Self, F) -> Option<Self::Item> where K: Ord + Send,\nF: Sync + Send + Fn(&Self::Item) -> K","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Computes the item that yields the maximum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[{"value":"/ Computes the item that yields the maximum value for the given","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72421,"byte_end":72486,"line_start":1487,"line_end":1487,"column_start":5,"column_end":70}},{"value":"/ function. If the iterator is empty, `None` is returned;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72491,"byte_end":72550,"line_start":1488,"line_end":1488,"column_start":5,"column_end":64}},{"value":"/ otherwise, `Some(item)` is returned.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72555,"byte_end":72595,"line_start":1489,"line_end":1489,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72600,"byte_end":72603,"line_start":1490,"line_end":1490,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72608,"byte_end":72673,"line_start":1491,"line_end":1491,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72678,"byte_end":72744,"line_start":1492,"line_end":1492,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72749,"byte_end":72787,"line_start":1493,"line_end":1493,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72792,"byte_end":72795,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72800,"byte_end":72814,"line_start":1495,"line_end":1495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72819,"byte_end":72822,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72827,"byte_end":72834,"line_start":1497,"line_end":1497,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72839,"byte_end":72865,"line_start":1498,"line_end":1498,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72870,"byte_end":72873,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 34, 2, 5, -10, -3, -23];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72878,"byte_end":72923,"line_start":1500,"line_end":1500,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72928,"byte_end":72931,"line_start":1501,"line_end":1501,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max_by_key(|x| x.abs()), Some(&34));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72936,"byte_end":73000,"line_start":1502,"line_end":1502,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73005,"byte_end":73012,"line_start":1503,"line_end":1503,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3797},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73961,"byte_end":73966,"line_start":1540,"line_end":1540,"column_start":8,"column_end":13},"name":"chain","qualname":"::iter::ParallelIterator::chain","value":"pub fn chain<C>(Self, C) -> Chain<Self, C::Iter> where\nC: IntoParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Takes two iterators and creates a new iterator over both.","sig":null,"attributes":[{"value":"/ Takes two iterators and creates a new iterator over both.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73545,"byte_end":73606,"line_start":1524,"line_end":1524,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73611,"byte_end":73614,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73619,"byte_end":73633,"line_start":1526,"line_end":1526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73638,"byte_end":73641,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73646,"byte_end":73653,"line_start":1528,"line_end":1528,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73658,"byte_end":73684,"line_start":1529,"line_end":1529,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73689,"byte_end":73692,"line_start":1530,"line_end":1530,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 1, 2];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73697,"byte_end":73719,"line_start":1531,"line_end":1531,"column_start":5,"column_end":27}},{"value":"/ let b = [9, 8, 7];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73724,"byte_end":73746,"line_start":1532,"line_end":1532,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73751,"byte_end":73754,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().chain(b.par_iter());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73759,"byte_end":73811,"line_start":1534,"line_end":1534,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73816,"byte_end":73819,"line_start":1535,"line_end":1535,"column_start":5,"column_end":8}},{"value":"/ let chained: Vec<_> = par_iter.cloned().collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73824,"byte_end":73878,"line_start":1536,"line_end":1536,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73883,"byte_end":73886,"line_start":1537,"line_end":1537,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&chained[..], &[0, 1, 2, 9, 8, 7]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73891,"byte_end":73941,"line_start":1538,"line_end":1538,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73946,"byte_end":73953,"line_start":1539,"line_end":1539,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75060,"byte_end":75068,"line_start":1570,"line_end":1570,"column_start":8,"column_end":16},"name":"find_any","qualname":"::iter::ParallelIterator::find_any","value":"pub fn find_any<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate and returns it. This operation\n is similar to [`find` on sequential iterators][find] but\n the item returned may not be the **first** one in the parallel\n sequence which matches, since we search the entire sequence in parallel.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74137,"byte_end":74197,"line_start":1547,"line_end":1547,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate and returns it. This operation","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74202,"byte_end":74264,"line_start":1548,"line_end":1548,"column_start":5,"column_end":67}},{"value":"/ is similar to [`find` on sequential iterators][find] but","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74269,"byte_end":74329,"line_start":1549,"line_end":1549,"column_start":5,"column_end":65}},{"value":"/ the item returned may not be the **first** one in the parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74334,"byte_end":74400,"line_start":1550,"line_end":1550,"column_start":5,"column_end":71}},{"value":"/ sequence which matches, since we search the entire sequence in parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74405,"byte_end":74481,"line_start":1551,"line_end":1551,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74486,"byte_end":74489,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, we will attempt to stop processing","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74494,"byte_end":74555,"line_start":1553,"line_end":1553,"column_start":5,"column_end":66}},{"value":"/ the rest of the items in the iterator as soon as possible","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74560,"byte_end":74621,"line_start":1554,"line_end":1554,"column_start":5,"column_end":66}},{"value":"/ (just as `find` stops iterating once a match is found).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74626,"byte_end":74685,"line_start":1555,"line_end":1555,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74690,"byte_end":74693,"line_start":1556,"line_end":1556,"column_start":5,"column_end":8}},{"value":"/ [find]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74698,"byte_end":74776,"line_start":1557,"line_end":1557,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74781,"byte_end":74784,"line_start":1558,"line_end":1558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74789,"byte_end":74803,"line_start":1559,"line_end":1559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74808,"byte_end":74811,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74816,"byte_end":74823,"line_start":1561,"line_end":1561,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74828,"byte_end":74854,"line_start":1562,"line_end":1562,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74859,"byte_end":74862,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74867,"byte_end":74892,"line_start":1564,"line_end":1564,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74897,"byte_end":74900,"line_start":1565,"line_end":1565,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_any(|&&x| x == 3), Some(&3));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74905,"byte_end":74967,"line_start":1566,"line_end":1566,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74972,"byte_end":74975,"line_start":1567,"line_end":1567,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_any(|&&x| x == 100), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":74980,"byte_end":75040,"line_start":1568,"line_end":1568,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75045,"byte_end":75052,"line_start":1569,"line_end":1569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76107,"byte_end":76117,"line_start":1600,"line_end":1600,"column_start":8,"column_end":18},"name":"find_first","qualname":"::iter::ParallelIterator::find_first","value":"pub fn find_first<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item)\n-> bool + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **first** item in the parallel iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75227,"byte_end":75300,"line_start":1577,"line_end":1577,"column_start":5,"column_end":78}},{"value":"/ that matches the given predicate and returns it.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75305,"byte_end":75357,"line_start":1578,"line_end":1578,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75362,"byte_end":75365,"line_start":1579,"line_end":1579,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, all attempts to the right of the match","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75370,"byte_end":75435,"line_start":1580,"line_end":1580,"column_start":5,"column_end":70}},{"value":"/ will be stopped, while attempts to the left must continue in case","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75440,"byte_end":75509,"line_start":1581,"line_end":1581,"column_start":5,"column_end":74}},{"value":"/ an earlier match is found.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75514,"byte_end":75544,"line_start":1582,"line_end":1582,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75549,"byte_end":75552,"line_start":1583,"line_end":1583,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75557,"byte_end":75628,"line_start":1584,"line_end":1584,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous.  If you","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75633,"byte_end":75704,"line_start":1585,"line_end":1585,"column_start":5,"column_end":76}},{"value":"/ just want the first match that discovered anywhere in the iterator,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75709,"byte_end":75780,"line_start":1586,"line_end":1586,"column_start":5,"column_end":76}},{"value":"/ `find_any` is a better choice.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75785,"byte_end":75819,"line_start":1587,"line_end":1587,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75824,"byte_end":75827,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75832,"byte_end":75846,"line_start":1589,"line_end":1589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75851,"byte_end":75854,"line_start":1590,"line_end":1590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75859,"byte_end":75866,"line_start":1591,"line_end":1591,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75871,"byte_end":75897,"line_start":1592,"line_end":1592,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75902,"byte_end":75905,"line_start":1593,"line_end":1593,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75910,"byte_end":75935,"line_start":1594,"line_end":1594,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75940,"byte_end":75943,"line_start":1595,"line_end":1595,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_first(|&&x| x == 3), Some(&3));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75948,"byte_end":76012,"line_start":1596,"line_end":1596,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76017,"byte_end":76020,"line_start":1597,"line_end":1597,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_first(|&&x| x == 100), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76025,"byte_end":76087,"line_start":1598,"line_end":1598,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76092,"byte_end":76099,"line_start":1599,"line_end":1599,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77130,"byte_end":77139,"line_start":1629,"line_end":1629,"column_start":8,"column_end":17},"name":"find_last","qualname":"::iter::ParallelIterator::find_last","value":"pub fn find_last<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **last** item in the parallel iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76293,"byte_end":76365,"line_start":1607,"line_end":1607,"column_start":5,"column_end":77}},{"value":"/ that matches the given predicate and returns it.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76370,"byte_end":76422,"line_start":1608,"line_end":1608,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76427,"byte_end":76430,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, all attempts to the left of the match","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76435,"byte_end":76499,"line_start":1610,"line_end":1610,"column_start":5,"column_end":69}},{"value":"/ will be stopped, while attempts to the right must continue in case","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76504,"byte_end":76574,"line_start":1611,"line_end":1611,"column_start":5,"column_end":75}},{"value":"/ a later match is found.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76579,"byte_end":76606,"line_start":1612,"line_end":1612,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76611,"byte_end":76614,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76619,"byte_end":76690,"line_start":1614,"line_end":1614,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"last\" may be nebulous.  When the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76695,"byte_end":76767,"line_start":1615,"line_end":1615,"column_start":5,"column_end":77}},{"value":"/ order doesn't actually matter to you, `find_any` is a better choice.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76772,"byte_end":76844,"line_start":1616,"line_end":1616,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76849,"byte_end":76852,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76857,"byte_end":76871,"line_start":1618,"line_end":1618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76876,"byte_end":76879,"line_start":1619,"line_end":1619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76884,"byte_end":76891,"line_start":1620,"line_end":1620,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76896,"byte_end":76922,"line_start":1621,"line_end":1621,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76927,"byte_end":76930,"line_start":1622,"line_end":1622,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76935,"byte_end":76960,"line_start":1623,"line_end":1623,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76965,"byte_end":76968,"line_start":1624,"line_end":1624,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_last(|&&x| x == 3), Some(&3));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76973,"byte_end":77036,"line_start":1625,"line_end":1625,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77041,"byte_end":77044,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_last(|&&x| x == 100), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77049,"byte_end":77110,"line_start":1627,"line_end":1627,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77115,"byte_end":77122,"line_start":1628,"line_end":1628,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3805},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78218,"byte_end":78230,"line_start":1659,"line_end":1659,"column_start":8,"column_end":20},"name":"find_map_any","qualname":"::iter::ParallelIterator::find_map_any","value":"pub fn find_map_any<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator\n and returns **any** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77314,"byte_end":77383,"line_start":1636,"line_end":1636,"column_start":5,"column_end":74}},{"value":"/ and returns **any** non-None result of the map operation.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77388,"byte_end":77449,"line_start":1637,"line_end":1637,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77454,"byte_end":77457,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, we will","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77462,"byte_end":77531,"line_start":1639,"line_end":1639,"column_start":5,"column_end":74}},{"value":"/ attempt to stop processing the rest of the items in the iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77536,"byte_end":77604,"line_start":1640,"line_end":1640,"column_start":5,"column_end":73}},{"value":"/ as soon as possible.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77609,"byte_end":77633,"line_start":1641,"line_end":1641,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77638,"byte_end":77641,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ Note that this method only returns **some** item in the parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77646,"byte_end":77714,"line_start":1643,"line_end":1643,"column_start":5,"column_end":73}},{"value":"/ iterator that is not None from the map predicate. The item returned","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77719,"byte_end":77790,"line_start":1644,"line_end":1644,"column_start":5,"column_end":76}},{"value":"/ may not be the **first** non-None value produced in the parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77795,"byte_end":77863,"line_start":1645,"line_end":1645,"column_start":5,"column_end":73}},{"value":"/ sequence, since the entire sequence is mapped over in parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77868,"byte_end":77935,"line_start":1646,"line_end":1646,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77940,"byte_end":77943,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77948,"byte_end":77962,"line_start":1648,"line_end":1648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77967,"byte_end":77970,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77975,"byte_end":77982,"line_start":1650,"line_end":1650,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77987,"byte_end":78013,"line_start":1651,"line_end":1651,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78018,"byte_end":78021,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"5\", \"5\"];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78026,"byte_end":78063,"line_start":1653,"line_end":1653,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78068,"byte_end":78071,"line_start":1654,"line_end":1654,"column_start":5,"column_end":8}},{"value":"/ let first_number = c.par_iter().find_map_first(|s| s.parse().ok());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78076,"byte_end":78147,"line_start":1655,"line_end":1655,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78152,"byte_end":78155,"line_start":1656,"line_end":1656,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first_number, Some(5));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78160,"byte_end":78198,"line_start":1657,"line_end":1657,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78203,"byte_end":78210,"line_start":1658,"line_end":1658,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3810},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79420,"byte_end":79434,"line_start":1693,"line_end":1693,"column_start":8,"column_end":22},"name":"find_map_first","qualname":"::iter::ParallelIterator::find_map_first","value":"pub fn find_map_first<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **first** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78479,"byte_end":78552,"line_start":1670,"line_end":1670,"column_start":5,"column_end":78}},{"value":"/ returns the sequentially **first** non-None result of the map operation.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78557,"byte_end":78633,"line_start":1671,"line_end":1671,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78638,"byte_end":78641,"line_start":1672,"line_end":1672,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, all attempts","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78646,"byte_end":78720,"line_start":1673,"line_end":1673,"column_start":5,"column_end":79}},{"value":"/ to the right of the match will be stopped, while attempts to the left","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78725,"byte_end":78798,"line_start":1674,"line_end":1674,"column_start":5,"column_end":78}},{"value":"/ must continue in case an earlier match is found.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78803,"byte_end":78855,"line_start":1675,"line_end":1675,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78860,"byte_end":78863,"line_start":1676,"line_end":1676,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78868,"byte_end":78939,"line_start":1677,"line_end":1677,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous. If you","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78944,"byte_end":79014,"line_start":1678,"line_end":1678,"column_start":5,"column_end":75}},{"value":"/ just want the first non-None value discovered anywhere in the iterator,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79019,"byte_end":79094,"line_start":1679,"line_end":1679,"column_start":5,"column_end":80}},{"value":"/ `find_map_any` is a better choice.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79099,"byte_end":79137,"line_start":1680,"line_end":1680,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79142,"byte_end":79145,"line_start":1681,"line_end":1681,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79150,"byte_end":79164,"line_start":1682,"line_end":1682,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79169,"byte_end":79172,"line_start":1683,"line_end":1683,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79177,"byte_end":79184,"line_start":1684,"line_end":1684,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79189,"byte_end":79215,"line_start":1685,"line_end":1685,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79220,"byte_end":79223,"line_start":1686,"line_end":1686,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"2\", \"5\"];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79228,"byte_end":79265,"line_start":1687,"line_end":1687,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79270,"byte_end":79273,"line_start":1688,"line_end":1688,"column_start":5,"column_end":8}},{"value":"/ let first_number = c.par_iter().find_map_first(|s| s.parse().ok());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79278,"byte_end":79349,"line_start":1689,"line_end":1689,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79354,"byte_end":79357,"line_start":1690,"line_end":1690,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first_number, Some(2));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79362,"byte_end":79400,"line_start":1691,"line_end":1691,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79405,"byte_end":79412,"line_start":1692,"line_end":1692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80621,"byte_end":80634,"line_start":1727,"line_end":1727,"column_start":8,"column_end":21},"name":"find_map_last","qualname":"::iter::ParallelIterator::find_map_last","value":"pub fn find_map_last<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **last** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79685,"byte_end":79758,"line_start":1704,"line_end":1704,"column_start":5,"column_end":78}},{"value":"/ returns the sequentially **last** non-None result of the map operation.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79763,"byte_end":79838,"line_start":1705,"line_end":1705,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79843,"byte_end":79846,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, all attempts","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79851,"byte_end":79925,"line_start":1707,"line_end":1707,"column_start":5,"column_end":79}},{"value":"/ to the left of the match will be stopped, while attempts to the right","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79930,"byte_end":80003,"line_start":1708,"line_end":1708,"column_start":5,"column_end":78}},{"value":"/ must continue in case a later match is found.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80008,"byte_end":80057,"line_start":1709,"line_end":1709,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80062,"byte_end":80065,"line_start":1710,"line_end":1710,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80070,"byte_end":80141,"line_start":1711,"line_end":1711,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous. If you","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80146,"byte_end":80216,"line_start":1712,"line_end":1712,"column_start":5,"column_end":75}},{"value":"/ just want the first non-None value discovered anywhere in the iterator,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80221,"byte_end":80296,"line_start":1713,"line_end":1713,"column_start":5,"column_end":80}},{"value":"/ `find_map_any` is a better choice.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80301,"byte_end":80339,"line_start":1714,"line_end":1714,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80344,"byte_end":80347,"line_start":1715,"line_end":1715,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80352,"byte_end":80366,"line_start":1716,"line_end":1716,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80371,"byte_end":80374,"line_start":1717,"line_end":1717,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80379,"byte_end":80386,"line_start":1718,"line_end":1718,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80391,"byte_end":80417,"line_start":1719,"line_end":1719,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80422,"byte_end":80425,"line_start":1720,"line_end":1720,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"2\", \"5\"];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80430,"byte_end":80467,"line_start":1721,"line_end":1721,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80472,"byte_end":80475,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ let first_number = c.par_iter().find_map_last(|s| s.parse().ok());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80480,"byte_end":80550,"line_start":1723,"line_end":1723,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80555,"byte_end":80558,"line_start":1724,"line_end":1724,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first_number, Some(5));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80563,"byte_end":80601,"line_start":1725,"line_end":1725,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80606,"byte_end":80613,"line_start":1726,"line_end":1726,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3820},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81051,"byte_end":81055,"line_start":1741,"line_end":1741,"column_start":8,"column_end":12},"name":"find","qualname":"::iter::ParallelIterator::find","value":"pub fn find<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `find` does not search in order -- use `find_any`, \\\\\n                         `find_first`, or `find_last`\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80903,"byte_end":81043,"line_start":1739,"line_end":1740,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3822},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81760,"byte_end":81763,"line_start":1765,"line_end":1765,"column_start":8,"column_end":11},"name":"any","qualname":"::iter::ParallelIterator::any","value":"pub fn any<P>(Self, P) -> bool where P: Fn(Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and if so returns true.  Once\n a match is found, we'll attempt to stop process the rest\n of the items.  Proving that there's no match, returning false,\n does require visiting every item.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81211,"byte_end":81271,"line_start":1748,"line_end":1748,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate, and if so returns true.  Once","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81276,"byte_end":81338,"line_start":1749,"line_end":1749,"column_start":5,"column_end":67}},{"value":"/ a match is found, we'll attempt to stop process the rest","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81343,"byte_end":81403,"line_start":1750,"line_end":1750,"column_start":5,"column_end":65}},{"value":"/ of the items.  Proving that there's no match, returning false,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81408,"byte_end":81474,"line_start":1751,"line_end":1751,"column_start":5,"column_end":71}},{"value":"/ does require visiting every item.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81479,"byte_end":81516,"line_start":1752,"line_end":1752,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81521,"byte_end":81524,"line_start":1753,"line_end":1753,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81529,"byte_end":81543,"line_start":1754,"line_end":1754,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81548,"byte_end":81551,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81556,"byte_end":81563,"line_start":1756,"line_end":1756,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81568,"byte_end":81594,"line_start":1757,"line_end":1757,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81599,"byte_end":81602,"line_start":1758,"line_end":1758,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 12, 3, 4, 0, 23, 0];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81607,"byte_end":81643,"line_start":1759,"line_end":1759,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81648,"byte_end":81651,"line_start":1760,"line_end":1760,"column_start":5,"column_end":8}},{"value":"/ let is_valid = a.par_iter().any(|&x| x > 10);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81656,"byte_end":81705,"line_start":1761,"line_end":1761,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81710,"byte_end":81713,"line_start":1762,"line_end":1762,"column_start":5,"column_end":8}},{"value":"/ assert!(is_valid);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81718,"byte_end":81740,"line_start":1763,"line_end":1763,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81745,"byte_end":81752,"line_start":1764,"line_end":1764,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3824},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82391,"byte_end":82394,"line_start":1787,"line_end":1787,"column_start":8,"column_end":11},"name":"all","qualname":"::iter::ParallelIterator::all","value":"pub fn all<P>(Self, P) -> bool where P: Fn(Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Tests that every item in the parallel iterator matches the given\n predicate, and if so returns true.  If a counter-example is found,\n we'll attempt to stop processing more items, then return false.","sig":null,"attributes":[{"value":"/ Tests that every item in the parallel iterator matches the given","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81931,"byte_end":81999,"line_start":1772,"line_end":1772,"column_start":5,"column_end":73}},{"value":"/ predicate, and if so returns true.  If a counter-example is found,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82004,"byte_end":82074,"line_start":1773,"line_end":1773,"column_start":5,"column_end":75}},{"value":"/ we'll attempt to stop processing more items, then return false.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82079,"byte_end":82146,"line_start":1774,"line_end":1774,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82151,"byte_end":82154,"line_start":1775,"line_end":1775,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82159,"byte_end":82173,"line_start":1776,"line_end":1776,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82178,"byte_end":82181,"line_start":1777,"line_end":1777,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82186,"byte_end":82193,"line_start":1778,"line_end":1778,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82198,"byte_end":82224,"line_start":1779,"line_end":1779,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82229,"byte_end":82232,"line_start":1780,"line_end":1780,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 12, 3, 4, 0, 23, 0];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82237,"byte_end":82273,"line_start":1781,"line_end":1781,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82278,"byte_end":82281,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ let is_valid = a.par_iter().all(|&x| x > 10);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82286,"byte_end":82335,"line_start":1783,"line_end":1783,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82340,"byte_end":82343,"line_start":1784,"line_end":1784,"column_start":5,"column_end":8}},{"value":"/ assert!(!is_valid);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82348,"byte_end":82371,"line_start":1785,"line_end":1785,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82376,"byte_end":82383,"line_start":1786,"line_end":1786,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3827},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83376,"byte_end":83386,"line_start":1821,"line_end":1821,"column_start":8,"column_end":18},"name":"while_some","qualname":"::iter::ParallelIterator::while_some","value":"pub fn while_some<T>(Self) -> WhileSome<Self> where\nSelf: ParallelIterator<Item = Option<T>>, T: Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Creates an iterator over the `Some` items of this iterator, halting\n as soon as any `None` is found.","sig":null,"attributes":[{"value":"/ Creates an iterator over the `Some` items of this iterator, halting","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82643,"byte_end":82714,"line_start":1799,"line_end":1799,"column_start":5,"column_end":76}},{"value":"/ as soon as any `None` is found.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82719,"byte_end":82754,"line_start":1800,"line_end":1800,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82759,"byte_end":82762,"line_start":1801,"line_end":1801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82767,"byte_end":82781,"line_start":1802,"line_end":1802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82786,"byte_end":82789,"line_start":1803,"line_end":1803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82794,"byte_end":82801,"line_start":1804,"line_end":1804,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82806,"byte_end":82832,"line_start":1805,"line_end":1805,"column_start":5,"column_end":31}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82837,"byte_end":82888,"line_start":1806,"line_end":1806,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82893,"byte_end":82896,"line_start":1807,"line_end":1807,"column_start":5,"column_end":8}},{"value":"/ let counter = AtomicUsize::new(0);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82901,"byte_end":82939,"line_start":1808,"line_end":1808,"column_start":5,"column_end":43}},{"value":"/ let value = (0_i32..2048)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82944,"byte_end":82973,"line_start":1809,"line_end":1809,"column_start":5,"column_end":34}},{"value":"/     .into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82978,"byte_end":83002,"line_start":1810,"line_end":1810,"column_start":5,"column_end":29}},{"value":"/     .map(|x| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83007,"byte_end":83025,"line_start":1811,"line_end":1811,"column_start":5,"column_end":23}},{"value":"/              counter.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83030,"byte_end":83086,"line_start":1812,"line_end":1812,"column_start":5,"column_end":61}},{"value":"/              if x < 1024 { Some(x) } else { None }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83091,"byte_end":83145,"line_start":1813,"line_end":1813,"column_start":5,"column_end":59}},{"value":"/          })","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83150,"byte_end":83165,"line_start":1814,"line_end":1814,"column_start":5,"column_end":20}},{"value":"/     .while_some()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83170,"byte_end":83191,"line_start":1815,"line_end":1815,"column_start":5,"column_end":26}},{"value":"/     .max();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83196,"byte_end":83211,"line_start":1816,"line_end":1816,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83216,"byte_end":83219,"line_start":1817,"line_end":1817,"column_start":5,"column_end":8}},{"value":"/ assert!(value < Some(1024));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83224,"byte_end":83256,"line_start":1818,"line_end":1818,"column_start":5,"column_end":37}},{"value":"/ assert!(counter.load(Ordering::SeqCst) < 2048); // should not have visited every single one","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83261,"byte_end":83356,"line_start":1819,"line_end":1819,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83361,"byte_end":83368,"line_start":1820,"line_end":1820,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84697,"byte_end":84707,"line_start":1859,"line_end":1859,"column_start":8,"column_end":18},"name":"panic_fuse","qualname":"::iter::ParallelIterator::panic_fuse","value":"pub fn panic_fuse(Self) -> PanicFuse<Self>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Wraps an iterator with a fuse in case of panics, to halt all threads\n as soon as possible.","sig":null,"attributes":[{"value":"/ Wraps an iterator with a fuse in case of panics, to halt all threads","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83538,"byte_end":83610,"line_start":1829,"line_end":1829,"column_start":5,"column_end":77}},{"value":"/ as soon as possible.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83615,"byte_end":83639,"line_start":1830,"line_end":1830,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83644,"byte_end":83647,"line_start":1831,"line_end":1831,"column_start":5,"column_end":8}},{"value":"/ Panics within parallel iterators are always propagated to the caller,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83652,"byte_end":83725,"line_start":1832,"line_end":1832,"column_start":5,"column_end":78}},{"value":"/ but they don't always halt the rest of the iterator right away, due to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83730,"byte_end":83804,"line_start":1833,"line_end":1833,"column_start":5,"column_end":79}},{"value":"/ the internal semantics of [`join`]. This adaptor makes a greater effort","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83809,"byte_end":83884,"line_start":1834,"line_end":1834,"column_start":5,"column_end":80}},{"value":"/ to stop processing other items sooner, with the cost of additional","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83889,"byte_end":83959,"line_start":1835,"line_end":1835,"column_start":5,"column_end":75}},{"value":"/ synchronization overhead, which may also inhibit some optimizations.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83964,"byte_end":84036,"line_start":1836,"line_end":1836,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84041,"byte_end":84044,"line_start":1837,"line_end":1837,"column_start":5,"column_end":8}},{"value":"/ [`join`]: ../fn.join.html#panics","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84049,"byte_end":84085,"line_start":1838,"line_end":1838,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84090,"byte_end":84093,"line_start":1839,"line_end":1839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84098,"byte_end":84112,"line_start":1840,"line_end":1840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84117,"byte_end":84120,"line_start":1841,"line_end":1841,"column_start":5,"column_end":8}},{"value":"/ If this code didn't use `panic_fuse()`, it would continue processing","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84125,"byte_end":84197,"line_start":1842,"line_end":1842,"column_start":5,"column_end":77}},{"value":"/ many more items in other threads (with long sleep delays) before the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84202,"byte_end":84274,"line_start":1843,"line_end":1843,"column_start":5,"column_end":77}},{"value":"/ panic is finally propagated.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84279,"byte_end":84311,"line_start":1844,"line_end":1844,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84316,"byte_end":84319,"line_start":1845,"line_end":1845,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84324,"byte_end":84343,"line_start":1846,"line_end":1846,"column_start":5,"column_end":24}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84348,"byte_end":84374,"line_start":1847,"line_end":1847,"column_start":5,"column_end":31}},{"value":"/ use std::{thread, time};","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84379,"byte_end":84407,"line_start":1848,"line_end":1848,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84412,"byte_end":84415,"line_start":1849,"line_end":1849,"column_start":5,"column_end":8}},{"value":"/ (0..1_000_000)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84420,"byte_end":84438,"line_start":1850,"line_end":1850,"column_start":5,"column_end":23}},{"value":"/     .into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84443,"byte_end":84467,"line_start":1851,"line_end":1851,"column_start":5,"column_end":29}},{"value":"/     .panic_fuse()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84472,"byte_end":84493,"line_start":1852,"line_end":1852,"column_start":5,"column_end":26}},{"value":"/     .for_each(|i| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84498,"byte_end":84521,"line_start":1853,"line_end":1853,"column_start":5,"column_end":28}},{"value":"/         // simulate some work","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84526,"byte_end":84559,"line_start":1854,"line_end":1854,"column_start":5,"column_end":38}},{"value":"/         thread::sleep(time::Duration::from_secs(1));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84564,"byte_end":84620,"line_start":1855,"line_end":1855,"column_start":5,"column_end":61}},{"value":"/         assert!(i > 0); // oops!","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84625,"byte_end":84661,"line_start":1856,"line_end":1856,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84666,"byte_end":84677,"line_start":1857,"line_end":1857,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84682,"byte_end":84689,"line_start":1858,"line_end":1858,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3830},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85456,"byte_end":85463,"line_start":1882,"line_end":1882,"column_start":8,"column_end":15},"name":"collect","qualname":"::iter::ParallelIterator::collect","value":"pub fn collect<C>(Self) -> C where C: FromParallelIterator<Self::Item>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Create a fresh collection containing all the element produced\n by this parallel iterator.","sig":null,"attributes":[{"value":"/ Create a fresh collection containing all the element produced","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84775,"byte_end":84840,"line_start":1863,"line_end":1863,"column_start":5,"column_end":70}},{"value":"/ by this parallel iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84845,"byte_end":84875,"line_start":1864,"line_end":1864,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84880,"byte_end":84883,"line_start":1865,"line_end":1865,"column_start":5,"column_end":8}},{"value":"/ You may prefer to use `collect_into_vec()`, which allocates more","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84888,"byte_end":84956,"line_start":1866,"line_end":1866,"column_start":5,"column_end":73}},{"value":"/ efficiently with precise knowledge of how many elements the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84961,"byte_end":85024,"line_start":1867,"line_end":1867,"column_start":5,"column_end":68}},{"value":"/ iterator contains, and even allows you to reuse an existing","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85029,"byte_end":85092,"line_start":1868,"line_end":1868,"column_start":5,"column_end":68}},{"value":"/ vector's backing store rather than allocating a fresh vector.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85097,"byte_end":85162,"line_start":1869,"line_end":1869,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85167,"byte_end":85170,"line_start":1870,"line_end":1870,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85175,"byte_end":85189,"line_start":1871,"line_end":1871,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85194,"byte_end":85197,"line_start":1872,"line_end":1872,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85202,"byte_end":85209,"line_start":1873,"line_end":1873,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85214,"byte_end":85240,"line_start":1874,"line_end":1874,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85245,"byte_end":85248,"line_start":1875,"line_end":1875,"column_start":5,"column_end":8}},{"value":"/ let sync_vec: Vec<_> = (0..100).into_iter().collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85253,"byte_end":85311,"line_start":1876,"line_end":1876,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85316,"byte_end":85319,"line_start":1877,"line_end":1877,"column_start":5,"column_end":8}},{"value":"/ let async_vec: Vec<_> = (0..100).into_par_iter().collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85324,"byte_end":85387,"line_start":1878,"line_end":1878,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85392,"byte_end":85395,"line_start":1879,"line_end":1879,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sync_vec, async_vec);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85400,"byte_end":85436,"line_start":1880,"line_end":1880,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85441,"byte_end":85448,"line_start":1881,"line_end":1881,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3832},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86715,"byte_end":86720,"line_start":1923,"line_end":1923,"column_start":8,"column_end":13},"name":"unzip","qualname":"::iter::ParallelIterator::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> (FromA, FromB) where\nSelf: ParallelIterator<Item = (A, B)>, FromA: Default + Send +\nParallelExtend<A>, FromB: Default + Send + ParallelExtend<B>, A: Send, B: Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Unzips the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.","sig":null,"attributes":[{"value":"/ Unzips the items of a parallel iterator into a pair of arbitrary","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85581,"byte_end":85649,"line_start":1889,"line_end":1889,"column_start":5,"column_end":73}},{"value":"/ `ParallelExtend` containers.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85654,"byte_end":85686,"line_start":1890,"line_end":1890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85691,"byte_end":85694,"line_start":1891,"line_end":1891,"column_start":5,"column_end":8}},{"value":"/ You may prefer to use `unzip_into_vecs()`, which allocates more","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85699,"byte_end":85766,"line_start":1892,"line_end":1892,"column_start":5,"column_end":72}},{"value":"/ efficiently with precise knowledge of how many elements the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85771,"byte_end":85834,"line_start":1893,"line_end":1893,"column_start":5,"column_end":68}},{"value":"/ iterator contains, and even allows you to reuse existing","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85839,"byte_end":85899,"line_start":1894,"line_end":1894,"column_start":5,"column_end":65}},{"value":"/ vectors' backing stores rather than allocating fresh vectors.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85904,"byte_end":85969,"line_start":1895,"line_end":1895,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85974,"byte_end":85977,"line_start":1896,"line_end":1896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85982,"byte_end":85996,"line_start":1897,"line_end":1897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86001,"byte_end":86004,"line_start":1898,"line_end":1898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86009,"byte_end":86016,"line_start":1899,"line_end":1899,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86021,"byte_end":86047,"line_start":1900,"line_end":1900,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86052,"byte_end":86055,"line_start":1901,"line_end":1901,"column_start":5,"column_end":8}},{"value":"/ let a = [(0, 1), (1, 2), (2, 3), (3, 4)];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86060,"byte_end":86105,"line_start":1902,"line_end":1902,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86110,"byte_end":86113,"line_start":1903,"line_end":1903,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = a.par_iter().cloned().unzip();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86118,"byte_end":86190,"line_start":1904,"line_end":1904,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86195,"byte_end":86198,"line_start":1905,"line_end":1905,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 1, 2, 3]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86203,"byte_end":86238,"line_start":1906,"line_end":1906,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, [1, 2, 3, 4]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86243,"byte_end":86279,"line_start":1907,"line_end":1907,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86284,"byte_end":86291,"line_start":1908,"line_end":1908,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86296,"byte_end":86299,"line_start":1909,"line_end":1909,"column_start":5,"column_end":8}},{"value":"/ Nested pairs can be unzipped too.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86304,"byte_end":86341,"line_start":1910,"line_end":1910,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86346,"byte_end":86349,"line_start":1911,"line_end":1911,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86354,"byte_end":86361,"line_start":1912,"line_end":1912,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86366,"byte_end":86392,"line_start":1913,"line_end":1913,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86397,"byte_end":86400,"line_start":1914,"line_end":1914,"column_start":5,"column_end":8}},{"value":"/ let (values, (squares, cubes)): (Vec<_>, (Vec<_>, Vec<_>)) = (0..4).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86405,"byte_end":86492,"line_start":1915,"line_end":1915,"column_start":5,"column_end":92}},{"value":"/     .map(|i| (i, (i * i, i * i * i)))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86497,"byte_end":86538,"line_start":1916,"line_end":1916,"column_start":5,"column_end":46}},{"value":"/     .unzip();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86543,"byte_end":86560,"line_start":1917,"line_end":1917,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86565,"byte_end":86568,"line_start":1918,"line_end":1918,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(values, [0, 1, 2, 3]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86573,"byte_end":86610,"line_start":1919,"line_end":1919,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(squares, [0, 1, 4, 9]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86615,"byte_end":86653,"line_start":1920,"line_end":1920,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(cubes, [0, 1, 8, 27]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86658,"byte_end":86695,"line_start":1921,"line_end":1921,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86700,"byte_end":86707,"line_start":1922,"line_end":1922,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3837},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87826,"byte_end":87835,"line_start":1953,"line_end":1953,"column_start":8,"column_end":17},"name":"partition","qualname":"::iter::ParallelIterator::partition","value":"pub fn partition<A, B, P>(Self, P) -> (A, B) where A: Default + Send +\nParallelExtend<Self::Item>, B: Default + Send + ParallelExtend<Self::Item>,\nP: Fn(&Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Partitions the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.  Items for which the `predicate` returns\n true go into the first container, and the rest go into the second.","sig":null,"attributes":[{"value":"/ Partitions the items of a parallel iterator into a pair of arbitrary","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87002,"byte_end":87074,"line_start":1934,"line_end":1934,"column_start":5,"column_end":77}},{"value":"/ `ParallelExtend` containers.  Items for which the `predicate` returns","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87079,"byte_end":87152,"line_start":1935,"line_end":1935,"column_start":5,"column_end":78}},{"value":"/ true go into the first container, and the rest go into the second.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87157,"byte_end":87227,"line_start":1936,"line_end":1936,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87232,"byte_end":87235,"line_start":1937,"line_end":1937,"column_start":5,"column_end":8}},{"value":"/ Note: unlike the standard `Iterator::partition`, this allows distinct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87240,"byte_end":87313,"line_start":1938,"line_end":1938,"column_start":5,"column_end":78}},{"value":"/ collection types for the left and right items.  This is more flexible,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87318,"byte_end":87392,"line_start":1939,"line_end":1939,"column_start":5,"column_end":79}},{"value":"/ but may require new type annotations when converting sequential code","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87397,"byte_end":87469,"line_start":1940,"line_end":1940,"column_start":5,"column_end":77}},{"value":"/ that used type inferrence assuming the two were the same.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87474,"byte_end":87535,"line_start":1941,"line_end":1941,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87540,"byte_end":87543,"line_start":1942,"line_end":1942,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87548,"byte_end":87562,"line_start":1943,"line_end":1943,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87567,"byte_end":87570,"line_start":1944,"line_end":1944,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87575,"byte_end":87582,"line_start":1945,"line_end":1945,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87587,"byte_end":87613,"line_start":1946,"line_end":1946,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87618,"byte_end":87621,"line_start":1947,"line_end":1947,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter().partition(|x| x % 2 == 0);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87626,"byte_end":87717,"line_start":1948,"line_end":1948,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87722,"byte_end":87725,"line_start":1949,"line_end":1949,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 2, 4, 6]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87730,"byte_end":87765,"line_start":1950,"line_end":1950,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, [1, 3, 5, 7]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87770,"byte_end":87806,"line_start":1951,"line_end":1951,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87811,"byte_end":87818,"line_start":1952,"line_end":1952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3841},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89555,"byte_end":89568,"line_start":2005,"line_end":2005,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::iter::ParallelIterator::partition_map","value":"pub fn partition_map<A, B, P, L, R>(Self, P) -> (A, B) where A: Default +\nSend + ParallelExtend<L>, B: Default + Send + ParallelExtend<R>,\nP: Fn(Self::Item) -> Either<L, R> + Sync + Send, L: Send, R: Send","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Partitions and maps the items of a parallel iterator into a pair of\n arbitrary `ParallelExtend` containers.  `Either::Left` items go into\n the first container, and `Either::Right` items go into the second.","sig":null,"attributes":[{"value":"/ Partitions and maps the items of a parallel iterator into a pair of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88106,"byte_end":88177,"line_start":1962,"line_end":1962,"column_start":5,"column_end":76}},{"value":"/ arbitrary `ParallelExtend` containers.  `Either::Left` items go into","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88182,"byte_end":88254,"line_start":1963,"line_end":1963,"column_start":5,"column_end":77}},{"value":"/ the first container, and `Either::Right` items go into the second.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88259,"byte_end":88329,"line_start":1964,"line_end":1964,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88334,"byte_end":88337,"line_start":1965,"line_end":1965,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88342,"byte_end":88356,"line_start":1966,"line_end":1966,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88361,"byte_end":88364,"line_start":1967,"line_end":1967,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88369,"byte_end":88376,"line_start":1968,"line_end":1968,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88381,"byte_end":88407,"line_start":1969,"line_end":1969,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88412,"byte_end":88440,"line_start":1970,"line_end":1970,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88445,"byte_end":88448,"line_start":1971,"line_end":1971,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88453,"byte_end":88517,"line_start":1972,"line_end":1972,"column_start":5,"column_end":69}},{"value":"/     .partition_map(|x| {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88522,"byte_end":88550,"line_start":1973,"line_end":1973,"column_start":5,"column_end":33}},{"value":"/         if x % 2 == 0 {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88555,"byte_end":88582,"line_start":1974,"line_end":1974,"column_start":5,"column_end":32}},{"value":"/             Either::Left(x * 4)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88587,"byte_end":88622,"line_start":1975,"line_end":1975,"column_start":5,"column_end":40}},{"value":"/         } else {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88627,"byte_end":88647,"line_start":1976,"line_end":1976,"column_start":5,"column_end":25}},{"value":"/             Either::Right(x * 3)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88652,"byte_end":88688,"line_start":1977,"line_end":1977,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88693,"byte_end":88706,"line_start":1978,"line_end":1978,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88711,"byte_end":88722,"line_start":1979,"line_end":1979,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88727,"byte_end":88730,"line_start":1980,"line_end":1980,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 8, 16, 24]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88735,"byte_end":88772,"line_start":1981,"line_end":1981,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(right, [3, 9, 15, 21]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88777,"byte_end":88815,"line_start":1982,"line_end":1982,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88820,"byte_end":88827,"line_start":1983,"line_end":1983,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88832,"byte_end":88835,"line_start":1984,"line_end":1984,"column_start":5,"column_end":8}},{"value":"/ Nested `Either` enums can be split as well.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88840,"byte_end":88887,"line_start":1985,"line_end":1985,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88892,"byte_end":88895,"line_start":1986,"line_end":1986,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88900,"byte_end":88907,"line_start":1987,"line_end":1987,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88912,"byte_end":88938,"line_start":1988,"line_end":1988,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88943,"byte_end":88974,"line_start":1989,"line_end":1989,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88979,"byte_end":88982,"line_start":1990,"line_end":1990,"column_start":5,"column_end":8}},{"value":"/ let ((fizzbuzz, fizz), (buzz, other)): ((Vec<_>, Vec<_>), (Vec<_>, Vec<_>)) = (1..20)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":88987,"byte_end":89076,"line_start":1991,"line_end":1991,"column_start":5,"column_end":94}},{"value":"/     .into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89081,"byte_end":89105,"line_start":1992,"line_end":1992,"column_start":5,"column_end":29}},{"value":"/     .partition_map(|x| match (x % 3, x % 5) {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89110,"byte_end":89159,"line_start":1993,"line_end":1993,"column_start":5,"column_end":54}},{"value":"/         (0, 0) => Left(Left(x)),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89164,"byte_end":89200,"line_start":1994,"line_end":1994,"column_start":5,"column_end":41}},{"value":"/         (0, _) => Left(Right(x)),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89205,"byte_end":89242,"line_start":1995,"line_end":1995,"column_start":5,"column_end":42}},{"value":"/         (_, 0) => Right(Left(x)),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89247,"byte_end":89284,"line_start":1996,"line_end":1996,"column_start":5,"column_end":42}},{"value":"/         (_, _) => Right(Right(x)),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89289,"byte_end":89327,"line_start":1997,"line_end":1997,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89332,"byte_end":89343,"line_start":1998,"line_end":1998,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89348,"byte_end":89351,"line_start":1999,"line_end":1999,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(fizzbuzz, [15]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89356,"byte_end":89387,"line_start":2000,"line_end":2000,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(fizz, [3, 6, 9, 12, 18]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89392,"byte_end":89432,"line_start":2001,"line_end":2001,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(buzz, [5, 10]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89437,"byte_end":89467,"line_start":2002,"line_end":2002,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(other, [1, 2, 4, 7, 8, 11, 13, 14, 16, 17, 19]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89472,"byte_end":89535,"line_start":2003,"line_end":2003,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89540,"byte_end":89547,"line_start":2004,"line_end":2004,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3847},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90201,"byte_end":90212,"line_start":2028,"line_end":2028,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::iter::ParallelIterator::intersperse","value":"pub fn intersperse(Self, Self::Item) -> Intersperse<Self> where\nSelf::Item: Clone","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Intersperses clones of an element between items of this iterator.","sig":null,"attributes":[{"value":"/ Intersperses clones of an element between items of this iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89872,"byte_end":89941,"line_start":2016,"line_end":2016,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89946,"byte_end":89949,"line_start":2017,"line_end":2017,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89954,"byte_end":89968,"line_start":2018,"line_end":2018,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89973,"byte_end":89976,"line_start":2019,"line_end":2019,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89981,"byte_end":89988,"line_start":2020,"line_end":2020,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89993,"byte_end":90019,"line_start":2021,"line_end":2021,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90024,"byte_end":90027,"line_start":2022,"line_end":2022,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1, 2, 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90032,"byte_end":90058,"line_start":2023,"line_end":2023,"column_start":5,"column_end":31}},{"value":"/ let r: Vec<_> = x.into_par_iter().intersperse(-1).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90063,"byte_end":90127,"line_start":2024,"line_end":2024,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90132,"byte_end":90135,"line_start":2025,"line_end":2025,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r, vec![1, -1, 2, -1, 3]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90140,"byte_end":90181,"line_start":2026,"line_end":2026,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90186,"byte_end":90193,"line_start":2027,"line_end":2027,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90874,"byte_end":90889,"line_start":2047,"line_end":2047,"column_start":8,"column_end":23},"name":"drive_unindexed","qualname":"::iter::ParallelIterator::drive_unindexed","value":"pub fn drive_unindexed<C>(Self, C) -> C::Result where\nC: UnindexedConsumer<Self::Item>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90355,"byte_end":90419,"line_start":2035,"line_end":2035,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90424,"byte_end":90480,"line_start":2036,"line_end":2036,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90485,"byte_end":90488,"line_start":2037,"line_end":2037,"column_start":5,"column_end":8}},{"value":"/ This method causes the iterator `self` to start producing","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90493,"byte_end":90554,"line_start":2038,"line_end":2038,"column_start":5,"column_end":66}},{"value":"/ items and to feed them to the consumer `consumer` one by one.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90559,"byte_end":90624,"line_start":2039,"line_end":2039,"column_start":5,"column_end":70}},{"value":"/ It may split the consumer before doing so to create the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90629,"byte_end":90688,"line_start":2040,"line_end":2040,"column_start":5,"column_end":64}},{"value":"/ opportunity to produce in parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90693,"byte_end":90732,"line_start":2041,"line_end":2041,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90737,"byte_end":90740,"line_start":2042,"line_end":2042,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90745,"byte_end":90811,"line_start":2043,"line_end":2043,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90816,"byte_end":90830,"line_start":2044,"line_end":2044,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90835,"byte_end":90838,"line_start":2045,"line_end":2045,"column_start":5,"column_end":8}},{"value":"/ [README]: README.md","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90843,"byte_end":90866,"line_start":2046,"line_end":2046,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3850},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91776,"byte_end":91783,"line_start":2065,"line_end":2065,"column_start":8,"column_end":15},"name":"opt_len","qualname":"::iter::ParallelIterator::opt_len","value":"pub fn opt_len(&Self) -> Option<usize>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90982,"byte_end":91046,"line_start":2051,"line_end":2051,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91051,"byte_end":91107,"line_start":2052,"line_end":2052,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91112,"byte_end":91115,"line_start":2053,"line_end":2053,"column_start":5,"column_end":8}},{"value":"/ Returns the number of items produced by this iterator, if known","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91120,"byte_end":91187,"line_start":2054,"line_end":2054,"column_start":5,"column_end":72}},{"value":"/ statically. This can be used by consumers to trigger special fast","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91192,"byte_end":91261,"line_start":2055,"line_end":2055,"column_start":5,"column_end":74}},{"value":"/ paths. Therefore, if `Some(_)` is returned, this iterator must only","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91266,"byte_end":91337,"line_start":2056,"line_end":2056,"column_start":5,"column_end":76}},{"value":"/ use the (indexed) `Consumer` methods when driving a consumer, such","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91342,"byte_end":91412,"line_start":2057,"line_end":2057,"column_start":5,"column_end":75}},{"value":"/ as `split_at()`. Calling `UnindexedConsumer::split_off_left()` or","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91417,"byte_end":91486,"line_start":2058,"line_end":2058,"column_start":5,"column_end":74}},{"value":"/ other `UnindexedConsumer` methods -- or returning an inaccurate","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91491,"byte_end":91558,"line_start":2059,"line_end":2059,"column_start":5,"column_end":72}},{"value":"/ value -- may result in panics.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91563,"byte_end":91597,"line_start":2060,"line_end":2060,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91602,"byte_end":91605,"line_start":2061,"line_end":2061,"column_start":5,"column_end":8}},{"value":"/ This method is currently used to optimize `collect` for want","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91610,"byte_end":91674,"line_start":2062,"line_end":2062,"column_start":5,"column_end":69}},{"value":"/ of true Rust specialization; it may be removed when","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91679,"byte_end":91734,"line_start":2063,"line_end":2063,"column_start":5,"column_end":60}},{"value":"/ specialization is stable.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91739,"byte_end":91768,"line_start":2064,"line_end":2064,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":3856},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92226,"byte_end":92249,"line_start":2084,"line_end":2084,"column_start":11,"column_end":34},"name":"IndexedParallelIterator","qualname":"::iter::IndexedParallelIterator","value":"IndexedParallelIterator: ParallelIterator","parent":null,"children":[{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3861},{"krate":0,"index":3863},{"krate":0,"index":3865},{"krate":0,"index":3867},{"krate":0,"index":3869},{"krate":0,"index":3870},{"krate":0,"index":3875},{"krate":0,"index":3881},{"krate":0,"index":3886},{"krate":0,"index":3888},{"krate":0,"index":3890},{"krate":0,"index":3892},{"krate":0,"index":3894},{"krate":0,"index":3896},{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":3902},{"krate":0,"index":3905},{"krate":0,"index":3908},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3916}],"decl_id":null,"docs":" An iterator that supports \"random access\" to its data, meaning\n that you can split it at arbitrary indices and draw data from\n those points.","sig":null,"attributes":[{"value":"/ An iterator that supports \"random access\" to its data, meaning","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91988,"byte_end":92054,"line_start":2079,"line_end":2079,"column_start":1,"column_end":67}},{"value":"/ that you can split it at arbitrary indices and draw data from","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92055,"byte_end":92120,"line_start":2080,"line_end":2080,"column_start":1,"column_end":66}},{"value":"/ those points.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92121,"byte_end":92138,"line_start":2081,"line_end":2081,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92139,"byte_end":92142,"line_start":2082,"line_end":2082,"column_start":1,"column_end":4}},{"value":"/ **Note:** Not implemented for `u64`, `i64`, `u128`, or `i128` ranges","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92143,"byte_end":92215,"line_start":2083,"line_end":2083,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3857},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92858,"byte_end":92874,"line_start":2103,"line_end":2103,"column_start":8,"column_end":24},"name":"collect_into_vec","qualname":"::iter::IndexedParallelIterator::collect_into_vec","value":"pub fn collect_into_vec(Self, &mut Vec<Self::Item>)","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Collects the results of the iterator into the specified\n vector. The vector is always truncated before execution\n begins. If possible, reusing the vector across calls can lead\n to better performance since it reuses the same backing buffer.","sig":null,"attributes":[{"value":"/ Collects the results of the iterator into the specified","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92274,"byte_end":92333,"line_start":2085,"line_end":2085,"column_start":5,"column_end":64}},{"value":"/ vector. The vector is always truncated before execution","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92338,"byte_end":92397,"line_start":2086,"line_end":2086,"column_start":5,"column_end":64}},{"value":"/ begins. If possible, reusing the vector across calls can lead","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92402,"byte_end":92467,"line_start":2087,"line_end":2087,"column_start":5,"column_end":70}},{"value":"/ to better performance since it reuses the same backing buffer.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92472,"byte_end":92538,"line_start":2088,"line_end":2088,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92543,"byte_end":92546,"line_start":2089,"line_end":2089,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92551,"byte_end":92565,"line_start":2090,"line_end":2090,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92570,"byte_end":92573,"line_start":2091,"line_end":2091,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92578,"byte_end":92585,"line_start":2092,"line_end":2092,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92590,"byte_end":92616,"line_start":2093,"line_end":2093,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92621,"byte_end":92624,"line_start":2094,"line_end":2094,"column_start":5,"column_end":8}},{"value":"/ // any prior data will be truncated","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92629,"byte_end":92668,"line_start":2095,"line_end":2095,"column_start":5,"column_end":44}},{"value":"/ let mut vec = vec![-1, -2, -3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92673,"byte_end":92708,"line_start":2096,"line_end":2096,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92713,"byte_end":92716,"line_start":2097,"line_end":2097,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92721,"byte_end":92747,"line_start":2098,"line_end":2098,"column_start":5,"column_end":31}},{"value":"/     .collect_into_vec(&mut vec);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92752,"byte_end":92788,"line_start":2099,"line_end":2099,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92793,"byte_end":92796,"line_start":2100,"line_end":2100,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec, [0, 1, 2, 3, 4]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92801,"byte_end":92838,"line_start":2101,"line_end":2101,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92843,"byte_end":92850,"line_start":2102,"line_end":2102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93684,"byte_end":93699,"line_start":2128,"line_end":2128,"column_start":8,"column_end":23},"name":"unzip_into_vecs","qualname":"::iter::IndexedParallelIterator::unzip_into_vecs","value":"pub fn unzip_into_vecs<A, B>(Self, &mut Vec<A>, &mut Vec<B>) where\nSelf: IndexedParallelIterator<Item = (A, B)>, A: Send, B: Send","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Unzips the results of the iterator into the specified\n vectors. The vectors are always truncated before execution\n begins. If possible, reusing the vectors across calls can lead\n to better performance since they reuse the same backing buffer.","sig":null,"attributes":[{"value":"/ Unzips the results of the iterator into the specified","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92973,"byte_end":93030,"line_start":2107,"line_end":2107,"column_start":5,"column_end":62}},{"value":"/ vectors. The vectors are always truncated before execution","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93035,"byte_end":93097,"line_start":2108,"line_end":2108,"column_start":5,"column_end":67}},{"value":"/ begins. If possible, reusing the vectors across calls can lead","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93102,"byte_end":93168,"line_start":2109,"line_end":2109,"column_start":5,"column_end":71}},{"value":"/ to better performance since they reuse the same backing buffer.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93173,"byte_end":93240,"line_start":2110,"line_end":2110,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93245,"byte_end":93248,"line_start":2111,"line_end":2111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93253,"byte_end":93267,"line_start":2112,"line_end":2112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93272,"byte_end":93275,"line_start":2113,"line_end":2113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93280,"byte_end":93287,"line_start":2114,"line_end":2114,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93292,"byte_end":93318,"line_start":2115,"line_end":2115,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93323,"byte_end":93326,"line_start":2116,"line_end":2116,"column_start":5,"column_end":8}},{"value":"/ // any prior data will be truncated","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93331,"byte_end":93370,"line_start":2117,"line_end":2117,"column_start":5,"column_end":44}},{"value":"/ let mut left = vec![42; 10];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93375,"byte_end":93407,"line_start":2118,"line_end":2118,"column_start":5,"column_end":37}},{"value":"/ let mut right = vec![-1; 10];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93412,"byte_end":93445,"line_start":2119,"line_end":2119,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93450,"byte_end":93453,"line_start":2120,"line_end":2120,"column_start":5,"column_end":8}},{"value":"/ (10..15).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93458,"byte_end":93486,"line_start":2121,"line_end":2121,"column_start":5,"column_end":33}},{"value":"/     .enumerate()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93491,"byte_end":93511,"line_start":2122,"line_end":2122,"column_start":5,"column_end":25}},{"value":"/     .unzip_into_vecs(&mut left, &mut right);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93516,"byte_end":93564,"line_start":2123,"line_end":2123,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93569,"byte_end":93572,"line_start":2124,"line_end":2124,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 1, 2, 3, 4]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93577,"byte_end":93615,"line_start":2125,"line_end":2125,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(right, [10, 11, 12, 13, 14]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93620,"byte_end":93664,"line_start":2126,"line_end":2126,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93669,"byte_end":93676,"line_start":2127,"line_end":2127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3861},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94510,"byte_end":94513,"line_start":2155,"line_end":2155,"column_start":8,"column_end":11},"name":"zip","qualname":"::iter::IndexedParallelIterator::zip","value":"pub fn zip<Z>(Self, Z) -> Zip<Self, Z::Iter> where Z: IntoParallelIterator,\nZ::Iter: IndexedParallelIterator","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Iterate over tuples `(A, B)`, where the items `A` are from\n this iterator and `B` are from the iterator given as argument.\n Like the `zip` method on ordinary iterators, if the two\n iterators are of unequal length, you only get the items they\n have in common.","sig":null,"attributes":[{"value":"/ Iterate over tuples `(A, B)`, where the items `A` are from","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93919,"byte_end":93981,"line_start":2137,"line_end":2137,"column_start":5,"column_end":67}},{"value":"/ this iterator and `B` are from the iterator given as argument.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93986,"byte_end":94052,"line_start":2138,"line_end":2138,"column_start":5,"column_end":71}},{"value":"/ Like the `zip` method on ordinary iterators, if the two","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94057,"byte_end":94116,"line_start":2139,"line_end":2139,"column_start":5,"column_end":64}},{"value":"/ iterators are of unequal length, you only get the items they","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94121,"byte_end":94185,"line_start":2140,"line_end":2140,"column_start":5,"column_end":69}},{"value":"/ have in common.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94190,"byte_end":94209,"line_start":2141,"line_end":2141,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94214,"byte_end":94217,"line_start":2142,"line_end":2142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94222,"byte_end":94236,"line_start":2143,"line_end":2143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94241,"byte_end":94244,"line_start":2144,"line_end":2144,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94249,"byte_end":94256,"line_start":2145,"line_end":2145,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94261,"byte_end":94287,"line_start":2146,"line_end":2146,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94292,"byte_end":94295,"line_start":2147,"line_end":2147,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (1..4)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94300,"byte_end":94331,"line_start":2148,"line_end":2148,"column_start":5,"column_end":36}},{"value":"/     .into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94336,"byte_end":94360,"line_start":2149,"line_end":2149,"column_start":5,"column_end":29}},{"value":"/     .zip(vec!['a', 'b', 'c'])","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94365,"byte_end":94398,"line_start":2150,"line_end":2150,"column_start":5,"column_end":38}},{"value":"/     .collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94403,"byte_end":94422,"line_start":2151,"line_end":2151,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94427,"byte_end":94430,"line_start":2152,"line_end":2152,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [(1, 'a'), (2, 'b'), (3, 'c')]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94435,"byte_end":94490,"line_start":2153,"line_end":2153,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94495,"byte_end":94502,"line_start":2154,"line_end":2154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3863},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95287,"byte_end":95293,"line_start":2182,"line_end":2182,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::iter::IndexedParallelIterator::zip_eq","value":"pub fn zip_eq<Z>(Self, Z) -> ZipEq<Self, Z::Iter> where\nZ: IntoParallelIterator, Z::Iter: IndexedParallelIterator","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" The same as `Zip`, but requires that both iterators have the same length.","sig":null,"attributes":[{"value":"/ The same as `Zip`, but requires that both iterators have the same length.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94705,"byte_end":94782,"line_start":2163,"line_end":2163,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94787,"byte_end":94790,"line_start":2164,"line_end":2164,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94795,"byte_end":94807,"line_start":2165,"line_end":2165,"column_start":5,"column_end":17}},{"value":"/ Will panic if `self` and `zip_op` are not the same length.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94812,"byte_end":94874,"line_start":2166,"line_end":2166,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94879,"byte_end":94882,"line_start":2167,"line_end":2167,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94887,"byte_end":94906,"line_start":2168,"line_end":2168,"column_start":5,"column_end":24}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94911,"byte_end":94937,"line_start":2169,"line_end":2169,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94942,"byte_end":94945,"line_start":2170,"line_end":2170,"column_start":5,"column_end":8}},{"value":"/ let one = [1u8];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94950,"byte_end":94970,"line_start":2171,"line_end":2171,"column_start":5,"column_end":25}},{"value":"/ let two = [2u8, 2];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94975,"byte_end":94998,"line_start":2172,"line_end":2172,"column_start":5,"column_end":28}},{"value":"/ let one_iter = one.par_iter();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95003,"byte_end":95037,"line_start":2173,"line_end":2173,"column_start":5,"column_end":39}},{"value":"/ let two_iter = two.par_iter();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95042,"byte_end":95076,"line_start":2174,"line_end":2174,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95081,"byte_end":95084,"line_start":2175,"line_end":2175,"column_start":5,"column_end":8}},{"value":"/ // this will panic","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95089,"byte_end":95111,"line_start":2176,"line_end":2176,"column_start":5,"column_end":27}},{"value":"/ let zipped: Vec<(&u8, &u8)> = one_iter.zip_eq(two_iter).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95116,"byte_end":95186,"line_start":2177,"line_end":2177,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95191,"byte_end":95194,"line_start":2178,"line_end":2178,"column_start":5,"column_end":8}},{"value":"/ // we should never get here","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95199,"byte_end":95230,"line_start":2179,"line_end":2179,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(1, zipped.len());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95235,"byte_end":95267,"line_start":2180,"line_end":2180,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95272,"byte_end":95279,"line_start":2181,"line_end":2181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3865},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96139,"byte_end":96149,"line_start":2206,"line_end":2206,"column_start":8,"column_end":18},"name":"interleave","qualname":"::iter::IndexedParallelIterator::interleave","value":"pub fn interleave<I>(Self, I) -> Interleave<Self, I::Iter> where\nI: IntoParallelIterator<Item = Self::Item>,\nI::Iter: IndexedParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator. Alternately yields elements from this iterator and\n the given iterator, until both are exhausted. If one iterator\n is exhausted before the other, the last elements are provided\n from the other.","sig":null,"attributes":[{"value":"/ Interleave elements of this iterator and the other given","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95579,"byte_end":95639,"line_start":2192,"line_end":2192,"column_start":5,"column_end":65}},{"value":"/ iterator. Alternately yields elements from this iterator and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95644,"byte_end":95708,"line_start":2193,"line_end":2193,"column_start":5,"column_end":69}},{"value":"/ the given iterator, until both are exhausted. If one iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95713,"byte_end":95778,"line_start":2194,"line_end":2194,"column_start":5,"column_end":70}},{"value":"/ is exhausted before the other, the last elements are provided","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95783,"byte_end":95848,"line_start":2195,"line_end":2195,"column_start":5,"column_end":70}},{"value":"/ from the other.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95853,"byte_end":95872,"line_start":2196,"line_end":2196,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95877,"byte_end":95880,"line_start":2197,"line_end":2197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95885,"byte_end":95899,"line_start":2198,"line_end":2198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95904,"byte_end":95907,"line_start":2199,"line_end":2199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95912,"byte_end":95919,"line_start":2200,"line_end":2200,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95924,"byte_end":95950,"line_start":2201,"line_end":2201,"column_start":5,"column_end":31}},{"value":"/ let (x, y) = (vec![1, 2], vec![3, 4, 5, 6]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95955,"byte_end":96003,"line_start":2202,"line_end":2202,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<i32> = x.into_par_iter().interleave(y).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96008,"byte_end":96072,"line_start":2203,"line_end":2203,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(r, vec![1, 3, 2, 4, 5, 6]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96077,"byte_end":96119,"line_start":2204,"line_end":2204,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96124,"byte_end":96131,"line_start":2205,"line_end":2205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3867},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96766,"byte_end":96785,"line_start":2225,"line_end":2225,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::iter::IndexedParallelIterator::interleave_shortest","value":"pub fn interleave_shortest<I>(Self, I) -> InterleaveShortest<Self, I::Iter>\nwhere I: IntoParallelIterator<Item = Self::Item>,\nI::Iter: IndexedParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator, until one is exhausted.","sig":null,"attributes":[{"value":"/ Interleave elements of this iterator and the other given","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96391,"byte_end":96451,"line_start":2214,"line_end":2214,"column_start":5,"column_end":65}},{"value":"/ iterator, until one is exhausted.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96456,"byte_end":96493,"line_start":2215,"line_end":2215,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96498,"byte_end":96501,"line_start":2216,"line_end":2216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96506,"byte_end":96520,"line_start":2217,"line_end":2217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96525,"byte_end":96528,"line_start":2218,"line_end":2218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96533,"byte_end":96540,"line_start":2219,"line_end":2219,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96545,"byte_end":96571,"line_start":2220,"line_end":2220,"column_start":5,"column_end":31}},{"value":"/ let (x, y) = (vec![1, 2, 3, 4], vec![5, 6]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96576,"byte_end":96624,"line_start":2221,"line_end":2221,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<i32> = x.into_par_iter().interleave_shortest(y).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96629,"byte_end":96702,"line_start":2222,"line_end":2222,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(r, vec![1, 5, 2, 6, 3]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96707,"byte_end":96746,"line_start":2223,"line_end":2223,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96751,"byte_end":96758,"line_start":2224,"line_end":2224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3869},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97965,"byte_end":97971,"line_start":2253,"line_end":2253,"column_start":8,"column_end":14},"name":"chunks","qualname":"::iter::IndexedParallelIterator::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Split an iterator up into fixed-size chunks.","sig":null,"attributes":[{"value":"/ Split an iterator up into fixed-size chunks.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97043,"byte_end":97091,"line_start":2233,"line_end":2233,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97096,"byte_end":97099,"line_start":2234,"line_end":2234,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator that returns `Vec`s of the given number of elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97104,"byte_end":97180,"line_start":2235,"line_end":2235,"column_start":5,"column_end":81}},{"value":"/ If the number of elements in the iterator is not divisible by `chunk_size`,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97185,"byte_end":97264,"line_start":2236,"line_end":2236,"column_start":5,"column_end":84}},{"value":"/ the last chunk may be shorter than `chunk_size`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97269,"byte_end":97321,"line_start":2237,"line_end":2237,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97326,"byte_end":97329,"line_start":2238,"line_end":2238,"column_start":5,"column_end":8}},{"value":"/ See also [`par_chunks()`] and [`par_chunks_mut()`] for similar behavior on","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97334,"byte_end":97412,"line_start":2239,"line_end":2239,"column_start":5,"column_end":83}},{"value":"/ slices, without having to allocate intermediate `Vec`s for the chunks.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97417,"byte_end":97491,"line_start":2240,"line_end":2240,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97496,"byte_end":97499,"line_start":2241,"line_end":2241,"column_start":5,"column_end":8}},{"value":"/ [`par_chunks()`]: ../slice/trait.ParallelSlice.html#method.par_chunks","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97504,"byte_end":97577,"line_start":2242,"line_end":2242,"column_start":5,"column_end":78}},{"value":"/ [`par_chunks_mut()`]: ../slice/trait.ParallelSliceMut.html#method.par_chunks_mut","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97582,"byte_end":97666,"line_start":2243,"line_end":2243,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97671,"byte_end":97674,"line_start":2244,"line_end":2244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97679,"byte_end":97693,"line_start":2245,"line_end":2245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97698,"byte_end":97701,"line_start":2246,"line_end":2246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97706,"byte_end":97713,"line_start":2247,"line_end":2247,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97718,"byte_end":97744,"line_start":2248,"line_end":2248,"column_start":5,"column_end":31}},{"value":"/ let a = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97749,"byte_end":97797,"line_start":2249,"line_end":2249,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<Vec<i32>> = a.into_par_iter().chunks(3).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97802,"byte_end":97867,"line_start":2250,"line_end":2250,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(r, vec![vec![1,2,3], vec![4,5,6], vec![7,8,9], vec![10]]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97872,"byte_end":97945,"line_start":2251,"line_end":2251,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97950,"byte_end":97957,"line_start":2252,"line_end":2252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3870},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98583,"byte_end":98586,"line_start":2272,"line_end":2272,"column_start":8,"column_end":11},"name":"cmp","qualname":"::iter::IndexedParallelIterator::cmp","value":"pub fn cmp<I>(Self, I) -> Ordering where I: IntoParallelIterator<Item =\nSelf::Item>, I::Iter: IndexedParallelIterator, Self::Item: Ord","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[{"value":"/ Lexicographically compares the elements of this `ParallelIterator` with those of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98129,"byte_end":98213,"line_start":2258,"line_end":2258,"column_start":5,"column_end":89}},{"value":"/ another.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98218,"byte_end":98230,"line_start":2259,"line_end":2259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98235,"byte_end":98238,"line_start":2260,"line_end":2260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98243,"byte_end":98257,"line_start":2261,"line_end":2261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98262,"byte_end":98265,"line_start":2262,"line_end":2262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98270,"byte_end":98277,"line_start":2263,"line_end":2263,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98282,"byte_end":98308,"line_start":2264,"line_end":2264,"column_start":5,"column_end":31}},{"value":"/ use std::cmp::Ordering::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98313,"byte_end":98343,"line_start":2265,"line_end":2265,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98348,"byte_end":98351,"line_start":2266,"line_end":2266,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1, 2, 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98356,"byte_end":98382,"line_start":2267,"line_end":2267,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 3, 0]), Less);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98387,"byte_end":98442,"line_start":2268,"line_end":2268,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 2, 3]), Equal);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98447,"byte_end":98503,"line_start":2269,"line_end":2269,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 2]), Greater);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98508,"byte_end":98563,"line_start":2270,"line_end":2270,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98568,"byte_end":98575,"line_start":2271,"line_end":2271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3875},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99815,"byte_end":99826,"line_start":2312,"line_end":2312,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::iter::IndexedParallelIterator::partial_cmp","value":"pub fn partial_cmp<I>(Self, I) -> Option<Ordering> where\nI: IntoParallelIterator, I::Iter: IndexedParallelIterator,\nSelf::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[{"value":"/ Lexicographically compares the elements of this `ParallelIterator` with those of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99201,"byte_end":99285,"line_start":2296,"line_end":2296,"column_start":5,"column_end":89}},{"value":"/ another.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99290,"byte_end":99302,"line_start":2297,"line_end":2297,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99307,"byte_end":99310,"line_start":2298,"line_end":2298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99315,"byte_end":99329,"line_start":2299,"line_end":2299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99334,"byte_end":99337,"line_start":2300,"line_end":2300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99342,"byte_end":99349,"line_start":2301,"line_end":2301,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99354,"byte_end":99380,"line_start":2302,"line_end":2302,"column_start":5,"column_end":31}},{"value":"/ use std::cmp::Ordering::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99385,"byte_end":99415,"line_start":2303,"line_end":2303,"column_start":5,"column_end":35}},{"value":"/ use std::f64::NAN;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99420,"byte_end":99442,"line_start":2304,"line_end":2304,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99447,"byte_end":99450,"line_start":2305,"line_end":2305,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1.0, 2.0, 3.0];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99455,"byte_end":99487,"line_start":2306,"line_end":2306,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 3.0, 0.0]), Some(Less));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99492,"byte_end":99567,"line_start":2307,"line_end":2307,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 2.0, 3.0]), Some(Equal));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99572,"byte_end":99648,"line_start":2308,"line_end":2308,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 2.0]), Some(Greater));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99653,"byte_end":99726,"line_start":2309,"line_end":2309,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, NAN]), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99731,"byte_end":99795,"line_start":2310,"line_end":2310,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99800,"byte_end":99807,"line_start":2311,"line_end":2311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":100605,"byte_end":100607,"line_start":2338,"line_end":2338,"column_start":8,"column_end":10},"name":"eq","qualname":"::iter::IndexedParallelIterator::eq","value":"pub fn eq<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialEq<I::Item>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are equal to those of another\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":100502,"byte_end":100559,"line_start":2336,"line_end":2336,"column_start":5,"column_end":62}},{"value":"/ are equal to those of another","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":100564,"byte_end":100597,"line_start":2337,"line_end":2337,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3886},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":101109,"byte_end":101111,"line_start":2355,"line_end":2355,"column_start":8,"column_end":10},"name":"ne","qualname":"::iter::IndexedParallelIterator::ne","value":"pub fn ne<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialEq<I::Item>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are unequal to those of another\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":101004,"byte_end":101061,"line_start":2353,"line_end":2353,"column_start":5,"column_end":62}},{"value":"/ are unequal to those of another","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":101066,"byte_end":101101,"line_start":2354,"line_end":2354,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":101428,"byte_end":101430,"line_start":2366,"line_end":2366,"column_start":8,"column_end":10},"name":"lt","qualname":"::iter::IndexedParallelIterator::lt","value":"pub fn lt<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically less than those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":101305,"byte_end":101362,"line_start":2364,"line_end":2364,"column_start":5,"column_end":62}},{"value":"/ are lexicographically less than those of another.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":101367,"byte_end":101420,"line_start":2365,"line_end":2365,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":101769,"byte_end":101771,"line_start":2377,"line_end":2377,"column_start":8,"column_end":10},"name":"le","qualname":"::iter::IndexedParallelIterator::le","value":"pub fn le<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":101657,"byte_end":101714,"line_start":2375,"line_end":2375,"column_start":5,"column_end":62}},{"value":"/ are less or equal to those of another.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":101719,"byte_end":101761,"line_start":2376,"line_end":2376,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3892},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102179,"byte_end":102181,"line_start":2389,"line_end":2389,"column_start":8,"column_end":10},"name":"gt","qualname":"::iter::IndexedParallelIterator::gt","value":"pub fn gt<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically greater than those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102053,"byte_end":102110,"line_start":2387,"line_end":2387,"column_start":5,"column_end":62}},{"value":"/ are lexicographically greater than those of another.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102115,"byte_end":102171,"line_start":2388,"line_end":2388,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3894},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102523,"byte_end":102525,"line_start":2400,"line_end":2400,"column_start":8,"column_end":10},"name":"ge","qualname":"::iter::IndexedParallelIterator::ge","value":"pub fn ge<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102411,"byte_end":102468,"line_start":2398,"line_end":2398,"column_start":5,"column_end":62}},{"value":"/ are less or equal to those of another.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102473,"byte_end":102515,"line_start":2399,"line_end":2399,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103179,"byte_end":103188,"line_start":2425,"line_end":2425,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::iter::IndexedParallelIterator::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Yields an index along with each item.","sig":null,"attributes":[{"value":"/ Yields an index along with each item.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102810,"byte_end":102851,"line_start":2410,"line_end":2410,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102856,"byte_end":102859,"line_start":2411,"line_end":2411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102864,"byte_end":102878,"line_start":2412,"line_end":2412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102883,"byte_end":102886,"line_start":2413,"line_end":2413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102891,"byte_end":102898,"line_start":2414,"line_end":2414,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102903,"byte_end":102929,"line_start":2415,"line_end":2415,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102934,"byte_end":102937,"line_start":2416,"line_end":2416,"column_start":5,"column_end":8}},{"value":"/ let chars = vec!['a', 'b', 'c'];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102942,"byte_end":102978,"line_start":2417,"line_end":2417,"column_start":5,"column_end":41}},{"value":"/ let result: Vec<_> = chars","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102983,"byte_end":103013,"line_start":2418,"line_end":2418,"column_start":5,"column_end":35}},{"value":"/     .into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103018,"byte_end":103042,"line_start":2419,"line_end":2419,"column_start":5,"column_end":29}},{"value":"/     .enumerate()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103047,"byte_end":103067,"line_start":2420,"line_end":2420,"column_start":5,"column_end":25}},{"value":"/     .collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103072,"byte_end":103091,"line_start":2421,"line_end":2421,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103096,"byte_end":103099,"line_start":2422,"line_end":2422,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [(0, 'a'), (1, 'b'), (2, 'c')]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103104,"byte_end":103159,"line_start":2423,"line_end":2423,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103164,"byte_end":103171,"line_start":2424,"line_end":2424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3897},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103591,"byte_end":103595,"line_start":2443,"line_end":2443,"column_start":8,"column_end":12},"name":"skip","qualname":"::iter::IndexedParallelIterator::skip","value":"pub fn skip(Self, usize) -> Skip<Self>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Creates an iterator that skips the first `n` elements.","sig":null,"attributes":[{"value":"/ Creates an iterator that skips the first `n` elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103256,"byte_end":103314,"line_start":2429,"line_end":2429,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103319,"byte_end":103322,"line_start":2430,"line_end":2430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103327,"byte_end":103341,"line_start":2431,"line_end":2431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103346,"byte_end":103349,"line_start":2432,"line_end":2432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103354,"byte_end":103361,"line_start":2433,"line_end":2433,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103366,"byte_end":103392,"line_start":2434,"line_end":2434,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103397,"byte_end":103400,"line_start":2435,"line_end":2435,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..100)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103405,"byte_end":103438,"line_start":2436,"line_end":2436,"column_start":5,"column_end":38}},{"value":"/     .into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103443,"byte_end":103467,"line_start":2437,"line_end":2437,"column_start":5,"column_end":29}},{"value":"/     .skip(95)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103472,"byte_end":103489,"line_start":2438,"line_end":2438,"column_start":5,"column_end":22}},{"value":"/     .collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103494,"byte_end":103513,"line_start":2439,"line_end":2439,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103518,"byte_end":103521,"line_start":2440,"line_end":2440,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [95, 96, 97, 98, 99]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103526,"byte_end":103571,"line_start":2441,"line_end":2441,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103576,"byte_end":103583,"line_start":2442,"line_end":2442,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3898},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103996,"byte_end":104000,"line_start":2461,"line_end":2461,"column_start":8,"column_end":12},"name":"take","qualname":"::iter::IndexedParallelIterator::take","value":"pub fn take(Self, usize) -> Take<Self>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Creates an iterator that yields the first `n` elements.","sig":null,"attributes":[{"value":"/ Creates an iterator that yields the first `n` elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103666,"byte_end":103725,"line_start":2447,"line_end":2447,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103730,"byte_end":103733,"line_start":2448,"line_end":2448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103738,"byte_end":103752,"line_start":2449,"line_end":2449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103757,"byte_end":103760,"line_start":2450,"line_end":2450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103765,"byte_end":103772,"line_start":2451,"line_end":2451,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103777,"byte_end":103803,"line_start":2452,"line_end":2452,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103808,"byte_end":103811,"line_start":2453,"line_end":2453,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..100)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103816,"byte_end":103849,"line_start":2454,"line_end":2454,"column_start":5,"column_end":38}},{"value":"/     .into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103854,"byte_end":103878,"line_start":2455,"line_end":2455,"column_start":5,"column_end":29}},{"value":"/     .take(5)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103883,"byte_end":103899,"line_start":2456,"line_end":2456,"column_start":5,"column_end":21}},{"value":"/     .collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103904,"byte_end":103923,"line_start":2457,"line_end":2457,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103928,"byte_end":103931,"line_start":2458,"line_end":2458,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [0, 1, 2, 3, 4]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103936,"byte_end":103976,"line_start":2459,"line_end":2459,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103981,"byte_end":103988,"line_start":2460,"line_end":2460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3899},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104714,"byte_end":104726,"line_start":2483,"line_end":2483,"column_start":8,"column_end":20},"name":"position_any","qualname":"::iter::IndexedParallelIterator::position_any","value":"pub fn position_any<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and returns its index.  Like\n `ParallelIterator::find_any`, the parallel search will not\n necessarily find the **first** match, and once a match is\n found we'll attempt to stop processing any more.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104071,"byte_end":104131,"line_start":2465,"line_end":2465,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate, and returns its index.  Like","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104136,"byte_end":104197,"line_start":2466,"line_end":2466,"column_start":5,"column_end":66}},{"value":"/ `ParallelIterator::find_any`, the parallel search will not","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104202,"byte_end":104264,"line_start":2467,"line_end":2467,"column_start":5,"column_end":67}},{"value":"/ necessarily find the **first** match, and once a match is","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104269,"byte_end":104330,"line_start":2468,"line_end":2468,"column_start":5,"column_end":66}},{"value":"/ found we'll attempt to stop processing any more.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104335,"byte_end":104387,"line_start":2469,"line_end":2469,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104392,"byte_end":104395,"line_start":2470,"line_end":2470,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104400,"byte_end":104414,"line_start":2471,"line_end":2471,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104419,"byte_end":104422,"line_start":2472,"line_end":2472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104427,"byte_end":104434,"line_start":2473,"line_end":2473,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104439,"byte_end":104465,"line_start":2474,"line_end":2474,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104470,"byte_end":104473,"line_start":2475,"line_end":2475,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104478,"byte_end":104503,"line_start":2476,"line_end":2476,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104508,"byte_end":104511,"line_start":2477,"line_end":2477,"column_start":5,"column_end":8}},{"value":"/ let i = a.par_iter().position_any(|&x| x == 3).expect(\"found\");","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104516,"byte_end":104583,"line_start":2478,"line_end":2478,"column_start":5,"column_end":72}},{"value":"/ assert!(i == 2 || i == 3);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104588,"byte_end":104618,"line_start":2479,"line_end":2479,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104623,"byte_end":104626,"line_start":2480,"line_end":2480,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_any(|&x| x == 100), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104631,"byte_end":104694,"line_start":2481,"line_end":2481,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104699,"byte_end":104706,"line_start":2482,"line_end":2482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105967,"byte_end":105981,"line_start":2520,"line_end":2520,"column_start":8,"column_end":22},"name":"position_first","qualname":"::iter::IndexedParallelIterator::position_first","value":"pub fn position_first<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **first** item in the parallel iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105025,"byte_end":105098,"line_start":2496,"line_end":2496,"column_start":5,"column_end":78}},{"value":"/ that matches the given predicate, and returns its index.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105103,"byte_end":105163,"line_start":2497,"line_end":2497,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105168,"byte_end":105171,"line_start":2498,"line_end":2498,"column_start":5,"column_end":8}},{"value":"/ Like `ParallelIterator::find_first`, once a match is found,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105176,"byte_end":105239,"line_start":2499,"line_end":2499,"column_start":5,"column_end":68}},{"value":"/ all attempts to the right of the match will be stopped, while","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105244,"byte_end":105309,"line_start":2500,"line_end":2500,"column_start":5,"column_end":70}},{"value":"/ attempts to the left must continue in case an earlier match","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105314,"byte_end":105377,"line_start":2501,"line_end":2501,"column_start":5,"column_end":68}},{"value":"/ is found.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105382,"byte_end":105395,"line_start":2502,"line_end":2502,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105400,"byte_end":105403,"line_start":2503,"line_end":2503,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105408,"byte_end":105479,"line_start":2504,"line_end":2504,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous.  If you","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105484,"byte_end":105555,"line_start":2505,"line_end":2505,"column_start":5,"column_end":76}},{"value":"/ just want the first match that discovered anywhere in the iterator,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105560,"byte_end":105631,"line_start":2506,"line_end":2506,"column_start":5,"column_end":76}},{"value":"/ `position_any` is a better choice.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105636,"byte_end":105674,"line_start":2507,"line_end":2507,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105679,"byte_end":105682,"line_start":2508,"line_end":2508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105687,"byte_end":105701,"line_start":2509,"line_end":2509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105706,"byte_end":105709,"line_start":2510,"line_end":2510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105714,"byte_end":105721,"line_start":2511,"line_end":2511,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105726,"byte_end":105752,"line_start":2512,"line_end":2512,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105757,"byte_end":105760,"line_start":2513,"line_end":2513,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105765,"byte_end":105790,"line_start":2514,"line_end":2514,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105795,"byte_end":105798,"line_start":2515,"line_end":2515,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_first(|&x| x == 3), Some(2));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105803,"byte_end":105869,"line_start":2516,"line_end":2516,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105874,"byte_end":105877,"line_start":2517,"line_end":2517,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_first(|&x| x == 100), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105882,"byte_end":105947,"line_start":2518,"line_end":2518,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105952,"byte_end":105959,"line_start":2519,"line_end":2519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107188,"byte_end":107201,"line_start":2557,"line_end":2557,"column_start":8,"column_end":21},"name":"position_last","qualname":"::iter::IndexedParallelIterator::position_last","value":"pub fn position_last<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **last** item in the parallel iterator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106282,"byte_end":106354,"line_start":2533,"line_end":2533,"column_start":5,"column_end":77}},{"value":"/ that matches the given predicate, and returns its index.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106359,"byte_end":106419,"line_start":2534,"line_end":2534,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106424,"byte_end":106427,"line_start":2535,"line_end":2535,"column_start":5,"column_end":8}},{"value":"/ Like `ParallelIterator::find_last`, once a match is found,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106432,"byte_end":106494,"line_start":2536,"line_end":2536,"column_start":5,"column_end":67}},{"value":"/ all attempts to the left of the match will be stopped, while","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106499,"byte_end":106563,"line_start":2537,"line_end":2537,"column_start":5,"column_end":69}},{"value":"/ attempts to the right must continue in case a later match","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106568,"byte_end":106629,"line_start":2538,"line_end":2538,"column_start":5,"column_end":66}},{"value":"/ is found.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106634,"byte_end":106647,"line_start":2539,"line_end":2539,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106652,"byte_end":106655,"line_start":2540,"line_end":2540,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106660,"byte_end":106731,"line_start":2541,"line_end":2541,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"last\" may be nebulous.  When the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106736,"byte_end":106808,"line_start":2542,"line_end":2542,"column_start":5,"column_end":77}},{"value":"/ order doesn't actually matter to you, `position_any` is a better","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106813,"byte_end":106881,"line_start":2543,"line_end":2543,"column_start":5,"column_end":73}},{"value":"/ choice.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106886,"byte_end":106897,"line_start":2544,"line_end":2544,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106902,"byte_end":106905,"line_start":2545,"line_end":2545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106910,"byte_end":106924,"line_start":2546,"line_end":2546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106929,"byte_end":106932,"line_start":2547,"line_end":2547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106937,"byte_end":106944,"line_start":2548,"line_end":2548,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106949,"byte_end":106975,"line_start":2549,"line_end":2549,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106980,"byte_end":106983,"line_start":2550,"line_end":2550,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":106988,"byte_end":107013,"line_start":2551,"line_end":2551,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107018,"byte_end":107021,"line_start":2552,"line_end":2552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_last(|&x| x == 3), Some(3));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107026,"byte_end":107091,"line_start":2553,"line_end":2553,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107096,"byte_end":107099,"line_start":2554,"line_end":2554,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_last(|&x| x == 100), None);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107104,"byte_end":107168,"line_start":2555,"line_end":2555,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107173,"byte_end":107180,"line_start":2556,"line_end":2556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107689,"byte_end":107697,"line_start":2575,"line_end":2575,"column_start":8,"column_end":16},"name":"position","qualname":"::iter::IndexedParallelIterator::position","value":"pub fn position<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) -> bool +\nSync + Send","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `position` does not search in order -- use `position_any`, \\\\\n                `position_first`, or `position_last`\")","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107520,"byte_end":107681,"line_start":2571,"line_end":2574,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108206,"byte_end":108209,"line_start":2597,"line_end":2597,"column_start":8,"column_end":11},"name":"rev","qualname":"::iter::IndexedParallelIterator::rev","value":"pub fn rev(Self) -> Rev<Self>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Produces a new iterator with the elements of this iterator in\n reverse order.","sig":null,"attributes":[{"value":"/ Produces a new iterator with the elements of this iterator in","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107851,"byte_end":107916,"line_start":2582,"line_end":2582,"column_start":5,"column_end":70}},{"value":"/ reverse order.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107921,"byte_end":107939,"line_start":2583,"line_end":2583,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107944,"byte_end":107947,"line_start":2584,"line_end":2584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107952,"byte_end":107966,"line_start":2585,"line_end":2585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107971,"byte_end":107974,"line_start":2586,"line_end":2586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107979,"byte_end":107986,"line_start":2587,"line_end":2587,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107991,"byte_end":108017,"line_start":2588,"line_end":2588,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108022,"byte_end":108025,"line_start":2589,"line_end":2589,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..5)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108030,"byte_end":108061,"line_start":2590,"line_end":2590,"column_start":5,"column_end":36}},{"value":"/     .into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108066,"byte_end":108090,"line_start":2591,"line_end":2591,"column_start":5,"column_end":29}},{"value":"/     .rev()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108095,"byte_end":108109,"line_start":2592,"line_end":2592,"column_start":5,"column_end":19}},{"value":"/     .collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108114,"byte_end":108133,"line_start":2593,"line_end":2593,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108138,"byte_end":108141,"line_start":2594,"line_end":2594,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [4, 3, 2, 1, 0]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108146,"byte_end":108186,"line_start":2595,"line_end":2595,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108191,"byte_end":108198,"line_start":2596,"line_end":2596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109026,"byte_end":109038,"line_start":2623,"line_end":2623,"column_start":8,"column_end":20},"name":"with_min_len","qualname":"::iter::IndexedParallelIterator::with_min_len","value":"pub fn with_min_len(Self, usize) -> MinLen<Self>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Sets the minimum length of iterators desired to process in each\n thread.  Rayon will not split any smaller than this length, but\n of course an iterator could already be smaller to begin with.","sig":null,"attributes":[{"value":"/ Sets the minimum length of iterators desired to process in each","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108265,"byte_end":108332,"line_start":2601,"line_end":2601,"column_start":5,"column_end":72}},{"value":"/ thread.  Rayon will not split any smaller than this length, but","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108337,"byte_end":108404,"line_start":2602,"line_end":2602,"column_start":5,"column_end":72}},{"value":"/ of course an iterator could already be smaller to begin with.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108409,"byte_end":108474,"line_start":2603,"line_end":2603,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108479,"byte_end":108482,"line_start":2604,"line_end":2604,"column_start":5,"column_end":8}},{"value":"/ Producers like `zip` and `interleave` will use greater of the two","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108487,"byte_end":108556,"line_start":2605,"line_end":2605,"column_start":5,"column_end":74}},{"value":"/ minimums.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108561,"byte_end":108574,"line_start":2606,"line_end":2606,"column_start":5,"column_end":18}},{"value":"/ Chained iterators and iterators inside `flat_map` may each use","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108579,"byte_end":108645,"line_start":2607,"line_end":2607,"column_start":5,"column_end":71}},{"value":"/ their own minimum length.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108650,"byte_end":108679,"line_start":2608,"line_end":2608,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108684,"byte_end":108687,"line_start":2609,"line_end":2609,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108692,"byte_end":108706,"line_start":2610,"line_end":2610,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108711,"byte_end":108714,"line_start":2611,"line_end":2611,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108719,"byte_end":108726,"line_start":2612,"line_end":2612,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108731,"byte_end":108757,"line_start":2613,"line_end":2613,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108762,"byte_end":108765,"line_start":2614,"line_end":2614,"column_start":5,"column_end":8}},{"value":"/ let min = (0..1_000_000)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108770,"byte_end":108798,"line_start":2615,"line_end":2615,"column_start":5,"column_end":33}},{"value":"/     .into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108803,"byte_end":108827,"line_start":2616,"line_end":2616,"column_start":5,"column_end":29}},{"value":"/     .with_min_len(1234)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108832,"byte_end":108859,"line_start":2617,"line_end":2617,"column_start":5,"column_end":32}},{"value":"/     .fold(|| 0, |acc, _| acc + 1) // count how many are in this segment","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108864,"byte_end":108939,"line_start":2618,"line_end":2618,"column_start":5,"column_end":80}},{"value":"/     .min().unwrap();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108944,"byte_end":108968,"line_start":2619,"line_end":2619,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108973,"byte_end":108976,"line_start":2620,"line_end":2620,"column_start":5,"column_end":8}},{"value":"/ assert!(min >= 1234);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108981,"byte_end":109006,"line_start":2621,"line_end":2621,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109011,"byte_end":109018,"line_start":2622,"line_end":2622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3912},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109977,"byte_end":109989,"line_start":2651,"line_end":2651,"column_start":8,"column_end":20},"name":"with_max_len","qualname":"::iter::IndexedParallelIterator::with_max_len","value":"pub fn with_max_len(Self, usize) -> MaxLen<Self>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Sets the maximum length of iterators desired to process in each\n thread.  Rayon will try to split at least below this length,\n unless that would put it below the length from `with_min_len()`.\n For example, given min=10 and max=15, a length of 16 will not be\n split any further.","sig":null,"attributes":[{"value":"/ Sets the maximum length of iterators desired to process in each","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109117,"byte_end":109184,"line_start":2627,"line_end":2627,"column_start":5,"column_end":72}},{"value":"/ thread.  Rayon will try to split at least below this length,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109189,"byte_end":109253,"line_start":2628,"line_end":2628,"column_start":5,"column_end":69}},{"value":"/ unless that would put it below the length from `with_min_len()`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109258,"byte_end":109326,"line_start":2629,"line_end":2629,"column_start":5,"column_end":73}},{"value":"/ For example, given min=10 and max=15, a length of 16 will not be","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109331,"byte_end":109399,"line_start":2630,"line_end":2630,"column_start":5,"column_end":73}},{"value":"/ split any further.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109404,"byte_end":109426,"line_start":2631,"line_end":2631,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109431,"byte_end":109434,"line_start":2632,"line_end":2632,"column_start":5,"column_end":8}},{"value":"/ Producers like `zip` and `interleave` will use lesser of the two","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109439,"byte_end":109507,"line_start":2633,"line_end":2633,"column_start":5,"column_end":73}},{"value":"/ maximums.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109512,"byte_end":109525,"line_start":2634,"line_end":2634,"column_start":5,"column_end":18}},{"value":"/ Chained iterators and iterators inside `flat_map` may each use","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109530,"byte_end":109596,"line_start":2635,"line_end":2635,"column_start":5,"column_end":71}},{"value":"/ their own maximum length.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109601,"byte_end":109630,"line_start":2636,"line_end":2636,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109635,"byte_end":109638,"line_start":2637,"line_end":2637,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109643,"byte_end":109657,"line_start":2638,"line_end":2638,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109662,"byte_end":109665,"line_start":2639,"line_end":2639,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109670,"byte_end":109677,"line_start":2640,"line_end":2640,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109682,"byte_end":109708,"line_start":2641,"line_end":2641,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109713,"byte_end":109716,"line_start":2642,"line_end":2642,"column_start":5,"column_end":8}},{"value":"/ let max = (0..1_000_000)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109721,"byte_end":109749,"line_start":2643,"line_end":2643,"column_start":5,"column_end":33}},{"value":"/     .into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109754,"byte_end":109778,"line_start":2644,"line_end":2644,"column_start":5,"column_end":29}},{"value":"/     .with_max_len(1234)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109783,"byte_end":109810,"line_start":2645,"line_end":2645,"column_start":5,"column_end":32}},{"value":"/     .fold(|| 0, |acc, _| acc + 1) // count how many are in this segment","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109815,"byte_end":109890,"line_start":2646,"line_end":2646,"column_start":5,"column_end":80}},{"value":"/     .max().unwrap();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109895,"byte_end":109919,"line_start":2647,"line_end":2647,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109924,"byte_end":109927,"line_start":2648,"line_end":2648,"column_start":5,"column_end":8}},{"value":"/ assert!(max <= 1234);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109932,"byte_end":109957,"line_start":2649,"line_end":2649,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109962,"byte_end":109969,"line_start":2650,"line_end":2650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3913},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110477,"byte_end":110480,"line_start":2669,"line_end":2669,"column_start":8,"column_end":11},"name":"len","qualname":"::iter::IndexedParallelIterator::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Produces an exact count of how many items this iterator will\n produce, presuming no panic occurs.","sig":null,"attributes":[{"value":"/ Produces an exact count of how many items this iterator will","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110068,"byte_end":110132,"line_start":2655,"line_end":2655,"column_start":5,"column_end":69}},{"value":"/ produce, presuming no panic occurs.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110137,"byte_end":110176,"line_start":2656,"line_end":2656,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110181,"byte_end":110184,"line_start":2657,"line_end":2657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110189,"byte_end":110203,"line_start":2658,"line_end":2658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110208,"byte_end":110211,"line_start":2659,"line_end":2659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110216,"byte_end":110223,"line_start":2660,"line_end":2660,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110228,"byte_end":110254,"line_start":2661,"line_end":2661,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110259,"byte_end":110262,"line_start":2662,"line_end":2662,"column_start":5,"column_end":8}},{"value":"/ let par_iter = (0..100).into_par_iter().zip(vec![0; 10]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110267,"byte_end":110328,"line_start":2663,"line_end":2663,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(par_iter.len(), 10);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110333,"byte_end":110368,"line_start":2664,"line_end":2664,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110373,"byte_end":110376,"line_start":2665,"line_end":2665,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110381,"byte_end":110422,"line_start":2666,"line_end":2666,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vec.len(), 10);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110427,"byte_end":110457,"line_start":2667,"line_end":2667,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110462,"byte_end":110469,"line_start":2668,"line_end":2668,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3914},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111180,"byte_end":111185,"line_start":2685,"line_end":2685,"column_start":8,"column_end":13},"name":"drive","qualname":"::iter::IndexedParallelIterator::drive","value":"pub fn drive<C: Consumer<Self::Item>>(Self, C) -> C::Result","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110503,"byte_end":110567,"line_start":2671,"line_end":2671,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110572,"byte_end":110628,"line_start":2672,"line_end":2672,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110633,"byte_end":110636,"line_start":2673,"line_end":2673,"column_start":5,"column_end":8}},{"value":"/ This method causes the iterator `self` to start producing","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110641,"byte_end":110702,"line_start":2674,"line_end":2674,"column_start":5,"column_end":66}},{"value":"/ items and to feed them to the consumer `consumer` one by one.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110707,"byte_end":110772,"line_start":2675,"line_end":2675,"column_start":5,"column_end":70}},{"value":"/ It may split the consumer before doing so to create the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110777,"byte_end":110836,"line_start":2676,"line_end":2676,"column_start":5,"column_end":64}},{"value":"/ opportunity to produce in parallel. If a split does happen, it","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110841,"byte_end":110907,"line_start":2677,"line_end":2677,"column_start":5,"column_end":71}},{"value":"/ will inform the consumer of the index where the split should","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110912,"byte_end":110976,"line_start":2678,"line_end":2678,"column_start":5,"column_end":69}},{"value":"/ occur (unlike `ParallelIterator::drive_unindexed()`).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110981,"byte_end":111038,"line_start":2679,"line_end":2679,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111043,"byte_end":111046,"line_start":2680,"line_end":2680,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111051,"byte_end":111117,"line_start":2681,"line_end":2681,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111122,"byte_end":111136,"line_start":2682,"line_end":2682,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111141,"byte_end":111144,"line_start":2683,"line_end":2683,"column_start":5,"column_end":8}},{"value":"/ [README]: README.md","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111149,"byte_end":111172,"line_start":2684,"line_end":2684,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3916},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111961,"byte_end":111974,"line_start":2702,"line_end":2702,"column_start":8,"column_end":21},"name":"with_producer","qualname":"::iter::IndexedParallelIterator::with_producer","value":"pub fn with_producer<CB: ProducerCallback<Self::Item>>(Self, CB) -> CB::Output","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111249,"byte_end":111313,"line_start":2687,"line_end":2687,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111318,"byte_end":111374,"line_start":2688,"line_end":2688,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111379,"byte_end":111382,"line_start":2689,"line_end":2689,"column_start":5,"column_end":8}},{"value":"/ This method converts the iterator into a producer P and then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111387,"byte_end":111451,"line_start":2690,"line_end":2690,"column_start":5,"column_end":69}},{"value":"/ invokes `callback.callback()` with P. Note that the type of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111456,"byte_end":111519,"line_start":2691,"line_end":2691,"column_start":5,"column_end":68}},{"value":"/ this producer is not defined as part of the API, since","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111524,"byte_end":111582,"line_start":2692,"line_end":2692,"column_start":5,"column_end":63}},{"value":"/ `callback` must be defined generically for all producers. This","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111587,"byte_end":111653,"line_start":2693,"line_end":2693,"column_start":5,"column_end":71}},{"value":"/ allows the producer type to contain references; it also means","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111658,"byte_end":111723,"line_start":2694,"line_end":2694,"column_start":5,"column_end":70}},{"value":"/ that parallel iterators can adjust that type without causing a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111728,"byte_end":111794,"line_start":2695,"line_end":2695,"column_start":5,"column_end":71}},{"value":"/ breaking change.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111799,"byte_end":111819,"line_start":2696,"line_end":2696,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111824,"byte_end":111827,"line_start":2697,"line_end":2697,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111832,"byte_end":111898,"line_start":2698,"line_end":2698,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111903,"byte_end":111917,"line_start":2699,"line_end":2699,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111922,"byte_end":111925,"line_start":2700,"line_end":2700,"column_start":5,"column_end":8}},{"value":"/ [README]: README.md","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111930,"byte_end":111953,"line_start":2701,"line_end":2701,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":3918},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113124,"byte_end":113144,"line_start":2741,"line_end":2741,"column_start":11,"column_end":31},"name":"FromParallelIterator","qualname":"::iter::FromParallelIterator","value":"FromParallelIterator<T>","parent":null,"children":[{"krate":0,"index":3920}],"decl_id":null,"docs":" `FromParallelIterator` implements the creation of a collection\n from a [`ParallelIterator`]. By implementing\n `FromParallelIterator` for a given type, you define how it will be\n created from an iterator.","sig":null,"attributes":[{"value":"/ `FromParallelIterator` implements the creation of a collection","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112047,"byte_end":112113,"line_start":2705,"line_end":2705,"column_start":1,"column_end":67}},{"value":"/ from a [`ParallelIterator`]. By implementing","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112114,"byte_end":112162,"line_start":2706,"line_end":2706,"column_start":1,"column_end":49}},{"value":"/ `FromParallelIterator` for a given type, you define how it will be","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112163,"byte_end":112233,"line_start":2707,"line_end":2707,"column_start":1,"column_end":71}},{"value":"/ created from an iterator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112234,"byte_end":112263,"line_start":2708,"line_end":2708,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112264,"byte_end":112267,"line_start":2709,"line_end":2709,"column_start":1,"column_end":4}},{"value":"/ `FromParallelIterator` is used through [`ParallelIterator`]'s [`collect()`] method.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112268,"byte_end":112355,"line_start":2710,"line_end":2710,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112356,"byte_end":112359,"line_start":2711,"line_end":2711,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112360,"byte_end":112413,"line_start":2712,"line_end":2712,"column_start":1,"column_end":54}},{"value":"/ [`collect()`]: trait.ParallelIterator.html#method.collect","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112414,"byte_end":112475,"line_start":2713,"line_end":2713,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112476,"byte_end":112479,"line_start":2714,"line_end":2714,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112480,"byte_end":112494,"line_start":2715,"line_end":2715,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112495,"byte_end":112498,"line_start":2716,"line_end":2716,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromParallelIterator` for your type:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112499,"byte_end":112553,"line_start":2717,"line_end":2717,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112554,"byte_end":112557,"line_start":2718,"line_end":2718,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112558,"byte_end":112565,"line_start":2719,"line_end":2719,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112566,"byte_end":112592,"line_start":2720,"line_end":2720,"column_start":1,"column_end":27}},{"value":"/ use std::mem;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112593,"byte_end":112610,"line_start":2721,"line_end":2721,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112611,"byte_end":112614,"line_start":2722,"line_end":2722,"column_start":1,"column_end":4}},{"value":"/ struct BlackHole {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112615,"byte_end":112637,"line_start":2723,"line_end":2723,"column_start":1,"column_end":23}},{"value":"/     mass: usize,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112638,"byte_end":112658,"line_start":2724,"line_end":2724,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112659,"byte_end":112664,"line_start":2725,"line_end":2725,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112665,"byte_end":112668,"line_start":2726,"line_end":2726,"column_start":1,"column_end":4}},{"value":"/ impl<T: Send> FromParallelIterator<T> for BlackHole {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112669,"byte_end":112726,"line_start":2727,"line_end":2727,"column_start":1,"column_end":58}},{"value":"/     fn from_par_iter<I>(par_iter: I) -> Self","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112727,"byte_end":112775,"line_start":2728,"line_end":2728,"column_start":1,"column_end":49}},{"value":"/         where I: IntoParallelIterator<Item = T>","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112776,"byte_end":112827,"line_start":2729,"line_end":2729,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112828,"byte_end":112837,"line_start":2730,"line_end":2730,"column_start":1,"column_end":10}},{"value":"/         let par_iter = par_iter.into_par_iter();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112838,"byte_end":112890,"line_start":2731,"line_end":2731,"column_start":1,"column_end":53}},{"value":"/         BlackHole {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112891,"byte_end":112914,"line_start":2732,"line_end":2732,"column_start":1,"column_end":24}},{"value":"/             mass: par_iter.count() * mem::size_of::<T>(),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112915,"byte_end":112976,"line_start":2733,"line_end":2733,"column_start":1,"column_end":62}},{"value":"/         }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112977,"byte_end":112990,"line_start":2734,"line_end":2734,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":112991,"byte_end":113000,"line_start":2735,"line_end":2735,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113001,"byte_end":113006,"line_start":2736,"line_end":2736,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113007,"byte_end":113010,"line_start":2737,"line_end":2737,"column_start":1,"column_end":4}},{"value":"/ let bh: BlackHole = (0i32..1000).into_par_iter().collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113011,"byte_end":113074,"line_start":2738,"line_end":2738,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(bh.mass, 4000);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113075,"byte_end":113105,"line_start":2739,"line_end":2739,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113106,"byte_end":113113,"line_start":2740,"line_end":2740,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3920},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114122,"byte_end":114135,"line_start":2760,"line_end":2760,"column_start":8,"column_end":21},"name":"from_par_iter","qualname":"::iter::FromParallelIterator::from_par_iter","value":"pub fn from_par_iter<I>(I) -> Self where I: IntoParallelIterator<Item = T>","parent":{"krate":0,"index":3918},"children":[],"decl_id":null,"docs":" Creates an instance of the collection from the parallel iterator `par_iter`.","sig":null,"attributes":[{"value":"/ Creates an instance of the collection from the parallel iterator `par_iter`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113173,"byte_end":113253,"line_start":2745,"line_end":2745,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113258,"byte_end":113261,"line_start":2746,"line_end":2746,"column_start":5,"column_end":8}},{"value":"/ If your collection is not naturally parallel, the easiest (and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113266,"byte_end":113332,"line_start":2747,"line_end":2747,"column_start":5,"column_end":71}},{"value":"/ fastest) way to do this is often to collect `par_iter` into a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113337,"byte_end":113402,"line_start":2748,"line_end":2748,"column_start":5,"column_end":70}},{"value":"/ [`LinkedList`] or other intermediate data structure and then","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113407,"byte_end":113471,"line_start":2749,"line_end":2749,"column_start":5,"column_end":69}},{"value":"/ sequentially extend your collection. However, a more 'native'","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113476,"byte_end":113541,"line_start":2750,"line_end":2750,"column_start":5,"column_end":70}},{"value":"/ technique is to use the [`par_iter.fold`] or","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113546,"byte_end":113594,"line_start":2751,"line_end":2751,"column_start":5,"column_end":53}},{"value":"/ [`par_iter.fold_with`] methods to create the collection.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113599,"byte_end":113659,"line_start":2752,"line_end":2752,"column_start":5,"column_end":65}},{"value":"/ Alternatively, if your collection is 'natively' parallel, you","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113664,"byte_end":113729,"line_start":2753,"line_end":2753,"column_start":5,"column_end":70}},{"value":"/ can use `par_iter.for_each` to process each element in turn.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113734,"byte_end":113798,"line_start":2754,"line_end":2754,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113803,"byte_end":113806,"line_start":2755,"line_end":2755,"column_start":5,"column_end":8}},{"value":"/ [`LinkedList`]: https://doc.rust-lang.org/std/collections/struct.LinkedList.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113811,"byte_end":113895,"line_start":2756,"line_end":2756,"column_start":5,"column_end":89}},{"value":"/ [`par_iter.fold`]: trait.ParallelIterator.html#method.fold","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113900,"byte_end":113962,"line_start":2757,"line_end":2757,"column_start":5,"column_end":67}},{"value":"/ [`par_iter.fold_with`]: trait.ParallelIterator.html#method.fold_with","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113967,"byte_end":114039,"line_start":2758,"line_end":2758,"column_start":5,"column_end":77}},{"value":"/ [`par_iter.for_each`]: trait.ParallelIterator.html#method.for_each","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114044,"byte_end":114114,"line_start":2759,"line_end":2759,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":3922},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115034,"byte_end":115048,"line_start":2796,"line_end":2796,"column_start":11,"column_end":25},"name":"ParallelExtend","qualname":"::iter::ParallelExtend","value":"ParallelExtend<T>","parent":null,"children":[{"krate":0,"index":3924}],"decl_id":null,"docs":" `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114216,"byte_end":114307,"line_start":2765,"line_end":2765,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114308,"byte_end":114311,"line_start":2766,"line_end":2766,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114312,"byte_end":114365,"line_start":2767,"line_end":2767,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114366,"byte_end":114369,"line_start":2768,"line_end":2768,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114370,"byte_end":114384,"line_start":2769,"line_end":2769,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114385,"byte_end":114388,"line_start":2770,"line_end":2770,"column_start":1,"column_end":4}},{"value":"/ Implementing `ParallelExtend` for your type:","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114389,"byte_end":114437,"line_start":2771,"line_end":2771,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114438,"byte_end":114441,"line_start":2772,"line_end":2772,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114442,"byte_end":114449,"line_start":2773,"line_end":2773,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114450,"byte_end":114476,"line_start":2774,"line_end":2774,"column_start":1,"column_end":27}},{"value":"/ use std::mem;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114477,"byte_end":114494,"line_start":2775,"line_end":2775,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114495,"byte_end":114498,"line_start":2776,"line_end":2776,"column_start":1,"column_end":4}},{"value":"/ struct BlackHole {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114499,"byte_end":114521,"line_start":2777,"line_end":2777,"column_start":1,"column_end":23}},{"value":"/     mass: usize,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114522,"byte_end":114542,"line_start":2778,"line_end":2778,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114543,"byte_end":114548,"line_start":2779,"line_end":2779,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114549,"byte_end":114552,"line_start":2780,"line_end":2780,"column_start":1,"column_end":4}},{"value":"/ impl<T: Send> ParallelExtend<T> for BlackHole {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114553,"byte_end":114604,"line_start":2781,"line_end":2781,"column_start":1,"column_end":52}},{"value":"/     fn par_extend<I>(&mut self, par_iter: I)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114605,"byte_end":114653,"line_start":2782,"line_end":2782,"column_start":1,"column_end":49}},{"value":"/         where I: IntoParallelIterator<Item = T>","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114654,"byte_end":114705,"line_start":2783,"line_end":2783,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114706,"byte_end":114715,"line_start":2784,"line_end":2784,"column_start":1,"column_end":10}},{"value":"/         let par_iter = par_iter.into_par_iter();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114716,"byte_end":114768,"line_start":2785,"line_end":2785,"column_start":1,"column_end":53}},{"value":"/         self.mass += par_iter.count() * mem::size_of::<T>();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114769,"byte_end":114833,"line_start":2786,"line_end":2786,"column_start":1,"column_end":65}},{"value":"/     }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114834,"byte_end":114843,"line_start":2787,"line_end":2787,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114844,"byte_end":114849,"line_start":2788,"line_end":2788,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114850,"byte_end":114853,"line_start":2789,"line_end":2789,"column_start":1,"column_end":4}},{"value":"/ let mut bh = BlackHole { mass: 0 };","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114854,"byte_end":114893,"line_start":2790,"line_end":2790,"column_start":1,"column_end":40}},{"value":"/ bh.par_extend(0i32..1000);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114894,"byte_end":114924,"line_start":2791,"line_end":2791,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(bh.mass, 4000);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114925,"byte_end":114955,"line_start":2792,"line_end":2792,"column_start":1,"column_end":31}},{"value":"/ bh.par_extend(0i64..10);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114956,"byte_end":114984,"line_start":2793,"line_end":2793,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(bh.mass, 4080);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114985,"byte_end":115015,"line_start":2794,"line_end":2794,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115016,"byte_end":115023,"line_start":2795,"line_end":2795,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3924},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115476,"byte_end":115486,"line_start":2813,"line_end":2813,"column_start":8,"column_end":18},"name":"par_extend","qualname":"::iter::ParallelExtend::par_extend","value":"pub fn par_extend<I>(&mut Self, I) where I: IntoParallelIterator<Item = T>","parent":{"krate":0,"index":3922},"children":[],"decl_id":null,"docs":" Extends an instance of the collection with the elements drawn\n from the parallel iterator `par_iter`.","sig":null,"attributes":[{"value":"/ Extends an instance of the collection with the elements drawn","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115077,"byte_end":115142,"line_start":2800,"line_end":2800,"column_start":5,"column_end":70}},{"value":"/ from the parallel iterator `par_iter`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115147,"byte_end":115189,"line_start":2801,"line_end":2801,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115194,"byte_end":115197,"line_start":2802,"line_end":2802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115202,"byte_end":115216,"line_start":2803,"line_end":2803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115221,"byte_end":115224,"line_start":2804,"line_end":2804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115229,"byte_end":115236,"line_start":2805,"line_end":2805,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115241,"byte_end":115267,"line_start":2806,"line_end":2806,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115272,"byte_end":115275,"line_start":2807,"line_end":2807,"column_start":5,"column_end":8}},{"value":"/ let mut vec = vec![];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115280,"byte_end":115305,"line_start":2808,"line_end":2808,"column_start":5,"column_end":30}},{"value":"/ vec.par_extend(0..5);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115310,"byte_end":115335,"line_start":2809,"line_end":2809,"column_start":5,"column_end":30}},{"value":"/ vec.par_extend((0..5).into_par_iter().map(|i| i * i));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115340,"byte_end":115398,"line_start":2810,"line_end":2810,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(vec, [0, 1, 2, 3, 4, 0, 1, 4, 9, 16]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115403,"byte_end":115456,"line_start":2811,"line_end":2811,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115461,"byte_end":115468,"line_start":2812,"line_end":2812,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3927},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115858,"byte_end":115861,"line_start":2824,"line_end":2824,"column_start":15,"column_end":18},"name":"Try","qualname":"::iter::private::Try","value":"Try","parent":null,"children":[{"krate":0,"index":6590},{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3932}],"decl_id":null,"docs":" Clone of `std::ops::Try`.","sig":null,"attributes":[{"value":"/ Clone of `std::ops::Try`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115737,"byte_end":115766,"line_start":2821,"line_end":2821,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115771,"byte_end":115774,"line_start":2822,"line_end":2822,"column_start":5,"column_end":8}},{"value":"/ Implementing this trait is not permitted outside of `rayon`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115779,"byte_end":115843,"line_start":2823,"line_end":2823,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":3928},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115903,"byte_end":115905,"line_start":2827,"line_end":2827,"column_start":14,"column_end":16},"name":"Ok","qualname":"::iter::private::Try::Ok","value":"type Ok;","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3929},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115920,"byte_end":115925,"line_start":2828,"line_end":2828,"column_start":14,"column_end":19},"name":"Error","qualname":"::iter::private::Try::Error","value":"type Error;","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3930},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115938,"byte_end":115949,"line_start":2829,"line_end":2829,"column_start":12,"column_end":23},"name":"into_result","qualname":"::iter::private::Try::into_result","value":"pub fn into_result(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3931},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":116001,"byte_end":116008,"line_start":2830,"line_end":2830,"column_start":12,"column_end":19},"name":"from_ok","qualname":"::iter::private::Try::from_ok","value":"pub fn from_ok(Self::Ok) -> Self","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3932},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":116042,"byte_end":116052,"line_start":2831,"line_end":2831,"column_start":12,"column_end":22},"name":"from_error","qualname":"::iter::private::Try::from_error","value":"pub fn from_error(Self::Error) -> Self","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3948},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option","qualname":"::option","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","parent":null,"children":[{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3953},{"krate":0,"index":6593},{"krate":0,"index":6599},{"krate":0,"index":6596},{"krate":0,"index":3954},{"krate":0,"index":3959},{"krate":0,"index":3965},{"krate":0,"index":6602},{"krate":0,"index":6606},{"krate":0,"index":3972},{"krate":0,"index":3976},{"krate":0,"index":6618},{"krate":0,"index":6610},{"krate":0,"index":6625},{"krate":0,"index":6629},{"krate":0,"index":3982},{"krate":0,"index":6641},{"krate":0,"index":6633},{"krate":0,"index":3988},{"krate":0,"index":3991},{"krate":0,"index":3997}],"decl_id":null,"docs":" Parallel iterator types for [options][std::option]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [options][std::option]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":374528,"byte_end":374582,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":374583,"byte_end":374586,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":374587,"byte_end":374665,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":374666,"byte_end":374704,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":374705,"byte_end":374708,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::option]: https://doc.rust-lang.org/stable/std/option/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":374709,"byte_end":374772,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6593},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375380,"byte_end":375388,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::option::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6595}],"decl_id":null,"docs":" A parallel iterator over the value in [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over the value in [`Some`] variant of an [`Option`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":374872,"byte_end":374948,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":374949,"byte_end":374952,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":374953,"byte_end":375035,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375036,"byte_end":375039,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_par_iter`] function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375040,"byte_end":375103,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375104,"byte_end":375107,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375108,"byte_end":375177,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375178,"byte_end":375258,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`into_par_iter`]: ../iter/trait.IntoParallelIterator.html#tymethod.into_par_iter","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375259,"byte_end":375344,"line_start":20,"line_end":20,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":6602},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377030,"byte_end":377034,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"Iter","qualname":"::option::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6605}],"decl_id":null,"docs":" A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":376535,"byte_end":376617,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":376618,"byte_end":376621,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":376622,"byte_end":376704,"line_start":79,"line_end":79,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":376705,"byte_end":376708,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter`] function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":376709,"byte_end":376767,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":376768,"byte_end":376771,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":376772,"byte_end":376841,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":376842,"byte_end":376922,"line_start":84,"line_end":84,"column_start":1,"column_end":81}},{"value":"/ [`par_iter`]: ../iter/trait.IntoParallelRefIterator.html#tymethod.par_iter","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":376923,"byte_end":377001,"line_start":85,"line_end":85,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":6625},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":378068,"byte_end":378075,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::option::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6628}],"decl_id":null,"docs":" A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377550,"byte_end":377640,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377641,"byte_end":377644,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377645,"byte_end":377727,"line_start":117,"line_end":117,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377728,"byte_end":377731,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter_mut`] function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377732,"byte_end":377794,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377795,"byte_end":377798,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377799,"byte_end":377868,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377869,"byte_end":377949,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/ [`par_iter_mut`]: ../iter/trait.IntoParallelRefMutIterator.html#tymethod.par_iter_mut","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377950,"byte_end":378039,"line_start":123,"line_end":123,"column_start":1,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":4006},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017}],"decl_id":null,"docs":" The rayon prelude imports the various `ParallelIterator` traits.\n The intention is that one can include `use rayon::prelude::*` and\n have easy access to the various traits and methods you will need.\n","sig":null,"attributes":[{"value":"/ The rayon prelude imports the various `ParallelIterator` traits.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":379967,"byte_end":380035,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ The intention is that one can include `use rayon::prelude::*` and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380036,"byte_end":380105,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ have easy access to the various traits and methods you will need.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380106,"byte_end":380175,"line_start":3,"line_end":3,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":4018},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","parent":null,"children":[{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":6648},{"krate":0,"index":6654},{"krate":0,"index":6651},{"krate":0,"index":4023},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4037},{"krate":0,"index":6657},{"krate":0,"index":6662},{"krate":0,"index":6668},{"krate":0,"index":6673},{"krate":0,"index":6678},{"krate":0,"index":6684},{"krate":0,"index":6689},{"krate":0,"index":6694},{"krate":0,"index":6700},{"krate":0,"index":6705},{"krate":0,"index":6710},{"krate":0,"index":6716},{"krate":0,"index":6721},{"krate":0,"index":6726},{"krate":0,"index":6732},{"krate":0,"index":6737},{"krate":0,"index":6742},{"krate":0,"index":6748},{"krate":0,"index":6753},{"krate":0,"index":6758},{"krate":0,"index":6764},{"krate":0,"index":6769},{"krate":0,"index":6774},{"krate":0,"index":6780},{"krate":0,"index":6785},{"krate":0,"index":6787},{"krate":0,"index":6795},{"krate":0,"index":6800},{"krate":0,"index":6802},{"krate":0,"index":6810},{"krate":0,"index":6815},{"krate":0,"index":6817},{"krate":0,"index":6825},{"krate":0,"index":6830},{"krate":0,"index":6832},{"krate":0,"index":6840}],"decl_id":null,"docs":" Parallel iterator types for [ranges][std::range],\n the type for values created by `a..b` expressions","sig":null,"attributes":[{"value":"/ Parallel iterator types for [ranges][std::range],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380631,"byte_end":380684,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/ the type for values created by `a..b` expressions","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380685,"byte_end":380738,"line_start":2,"line_end":2,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380739,"byte_end":380742,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380743,"byte_end":380821,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380822,"byte_end":380865,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380866,"byte_end":380869,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380870,"byte_end":380877,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380878,"byte_end":380904,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380905,"byte_end":380908,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let r = (0..100u64).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380909,"byte_end":380948,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/                    .sum();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380949,"byte_end":380979,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380980,"byte_end":380983,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // compare result with sequential calculation","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":380984,"byte_end":381033,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ assert_eq!((0..100).sum::<u64>(), r);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381034,"byte_end":381075,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381076,"byte_end":381083,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381084,"byte_end":381087,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [std::range]: https://doc.rust-lang.org/core/ops/struct.Range.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381088,"byte_end":381158,"line_start":17,"line_end":17,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6648},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381977,"byte_end":381981,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6650}],"decl_id":null,"docs":" Parallel iterator over a range, implemented for all integer types.","sig":null,"attributes":[{"value":"/ Parallel iterator over a range, implemented for all integer types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381248,"byte_end":381318,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381319,"byte_end":381322,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ **Note:** The `zip` operation requires `IndexedParallelIterator`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381323,"byte_end":381391,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ which is not implemented for `u64`, `i64`, `u128`, or `i128`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381392,"byte_end":381457,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381458,"byte_end":381461,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381462,"byte_end":381469,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381470,"byte_end":381496,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381497,"byte_end":381500,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let p = (0..25usize).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381501,"byte_end":381541,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/                   .zip(0..25usize)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381542,"byte_end":381580,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381581,"byte_end":381646,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381647,"byte_end":381689,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/                   .sum::<usize>();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381690,"byte_end":381728,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381729,"byte_end":381732,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let s = (0..25usize).zip(0..25)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381733,"byte_end":381768,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381769,"byte_end":381834,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381835,"byte_end":381877,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/                   .sum();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381878,"byte_end":381907,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381908,"byte_end":381911,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, s);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381912,"byte_end":381933,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381934,"byte_end":381941,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4041},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range_inclusive","qualname":"::range_inclusive","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","parent":null,"children":[{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":6845},{"krate":0,"index":6851},{"krate":0,"index":6848},{"krate":0,"index":4045},{"krate":0,"index":4048},{"krate":0,"index":6860},{"krate":0,"index":6854},{"krate":0,"index":6871},{"krate":0,"index":6865},{"krate":0,"index":6882},{"krate":0,"index":6876},{"krate":0,"index":6893},{"krate":0,"index":6887},{"krate":0,"index":6898},{"krate":0,"index":6903},{"krate":0,"index":6908},{"krate":0,"index":6913},{"krate":0,"index":6918},{"krate":0,"index":6923},{"krate":0,"index":6928},{"krate":0,"index":6933}],"decl_id":null,"docs":" Parallel iterator types for [inclusive ranges][std::range],\n the type for values created by `a..=b` expressions","sig":null,"attributes":[{"value":"/ Parallel iterator types for [inclusive ranges][std::range],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389388,"byte_end":389451,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/ the type for values created by `a..=b` expressions","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389452,"byte_end":389506,"line_start":2,"line_end":2,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389507,"byte_end":389510,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389511,"byte_end":389589,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389590,"byte_end":389633,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389634,"byte_end":389637,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389638,"byte_end":389645,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389646,"byte_end":389672,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389673,"byte_end":389676,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let r = (0..=100u64).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389677,"byte_end":389717,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"/                     .sum();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389718,"byte_end":389749,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389750,"byte_end":389753,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // compare result with sequential calculation","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389754,"byte_end":389803,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ assert_eq!((0..=100).sum::<u64>(), r);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389804,"byte_end":389846,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389847,"byte_end":389854,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389855,"byte_end":389858,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [std::range]: https://doc.rust-lang.org/core/ops/struct.RangeInclusive.html","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":389859,"byte_end":389938,"line_start":17,"line_end":17,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":6845},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390758,"byte_end":390762,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range_inclusive::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6847}],"decl_id":null,"docs":" Parallel iterator over an inclusive range, implemented for all integer types.","sig":null,"attributes":[{"value":"/ Parallel iterator over an inclusive range, implemented for all integer types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390021,"byte_end":390102,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390103,"byte_end":390106,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ **Note:** The `zip` operation requires `IndexedParallelIterator`","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390107,"byte_end":390175,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"/ which is only implemented for `u8`, `i8`, `u16`, and `i16`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390176,"byte_end":390239,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390240,"byte_end":390243,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390244,"byte_end":390251,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390252,"byte_end":390278,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390279,"byte_end":390282,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let p = (0..=25u16).into_par_iter()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390283,"byte_end":390322,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/                   .zip(0..=25u16)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390323,"byte_end":390360,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390361,"byte_end":390426,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390427,"byte_end":390469,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/                   .sum::<u16>();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390470,"byte_end":390506,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390507,"byte_end":390510,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let s = (0..=25u16).zip(0..=25u16)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390511,"byte_end":390549,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390550,"byte_end":390615,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390616,"byte_end":390658,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/                   .sum();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390659,"byte_end":390688,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390689,"byte_end":390692,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, s);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390693,"byte_end":390714,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390715,"byte_end":390722,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4056},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","parent":null,"children":[{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4060},{"krate":0,"index":6938},{"krate":0,"index":6944},{"krate":0,"index":6941},{"krate":0,"index":4061},{"krate":0,"index":6954},{"krate":0,"index":6947},{"krate":0,"index":6960},{"krate":0,"index":6964},{"krate":0,"index":4067},{"krate":0,"index":4071},{"krate":0,"index":6976},{"krate":0,"index":6968},{"krate":0,"index":6983},{"krate":0,"index":6987},{"krate":0,"index":4078},{"krate":0,"index":6999},{"krate":0,"index":6991},{"krate":0,"index":4085}],"decl_id":null,"docs":" Parallel iterator types for [results][std::result]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [results][std::result]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395339,"byte_end":395393,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395394,"byte_end":395397,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395398,"byte_end":395476,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395477,"byte_end":395515,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395516,"byte_end":395519,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::result]: https://doc.rust-lang.org/stable/std/result/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395520,"byte_end":395583,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6938},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395749,"byte_end":395757,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::result::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6940}],"decl_id":null,"docs":" Parallel iterator over a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a result","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395678,"byte_end":395713,"line_start":14,"line_end":14,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6960},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":396199,"byte_end":396203,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Iter","qualname":"::result::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6963}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a result","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":396109,"byte_end":396170,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":6983},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":396825,"byte_end":396832,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::result::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6986}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a result","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":396738,"byte_end":396796,"line_start":66,"line_end":66,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":4096},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::slice","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","parent":null,"children":[{"krate":0,"index":4097},{"krate":0,"index":4178},{"krate":0,"index":4259},{"krate":0,"index":4260},{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":7733},{"krate":0,"index":4269},{"krate":0,"index":4270},{"krate":0,"index":4277},{"krate":0,"index":4280},{"krate":0,"index":4302},{"krate":0,"index":4305},{"krate":0,"index":4311},{"krate":0,"index":4317},{"krate":0,"index":4323},{"krate":0,"index":7028},{"krate":0,"index":7032},{"krate":0,"index":4329},{"krate":0,"index":4333},{"krate":0,"index":4340},{"krate":0,"index":4348},{"krate":0,"index":4352},{"krate":0,"index":7036},{"krate":0,"index":7041},{"krate":0,"index":4359},{"krate":0,"index":4363},{"krate":0,"index":4370},{"krate":0,"index":4378},{"krate":0,"index":4383},{"krate":0,"index":7045},{"krate":0,"index":7050},{"krate":0,"index":4390},{"krate":0,"index":4394},{"krate":0,"index":4401},{"krate":0,"index":4409},{"krate":0,"index":4414},{"krate":0,"index":7054},{"krate":0,"index":7058},{"krate":0,"index":4421},{"krate":0,"index":4428},{"krate":0,"index":4436},{"krate":0,"index":4440},{"krate":0,"index":7062},{"krate":0,"index":7067},{"krate":0,"index":4447},{"krate":0,"index":4454},{"krate":0,"index":4462},{"krate":0,"index":4467},{"krate":0,"index":4474},{"krate":0,"index":4480},{"krate":0,"index":4485},{"krate":0,"index":4490},{"krate":0,"index":4497},{"krate":0,"index":4508},{"krate":0,"index":4514},{"krate":0,"index":4519},{"krate":0,"index":4526}],"decl_id":null,"docs":" Parallel iterator types for [slices][std::slice]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [slices][std::slice]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":398749,"byte_end":398801,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":398802,"byte_end":398805,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":398806,"byte_end":398884,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":398885,"byte_end":398923,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":398924,"byte_end":398927,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::slice]: https://doc.rust-lang.org/stable/std/slice/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":398928,"byte_end":398989,"line_start":6,"line_end":6,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":4270},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399331,"byte_end":399344,"line_start":25,"line_end":25,"column_start":11,"column_end":24},"name":"ParallelSlice","qualname":"::slice::ParallelSlice","value":"ParallelSlice<T: Sync>","parent":null,"children":[{"krate":0,"index":4272},{"krate":0,"index":4273},{"krate":0,"index":4275},{"krate":0,"index":4276}],"decl_id":null,"docs":" Parallel extensions for slices.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for slices.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399285,"byte_end":399320,"line_start":24,"line_end":24,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4272},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399463,"byte_end":399480,"line_start":28,"line_end":28,"column_start":8,"column_end":25},"name":"as_parallel_slice","qualname":"::slice::ParallelSlice::as_parallel_slice","value":"pub fn as_parallel_slice(&Self) -> &[T]","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":" Returns a plain slice, which is used to implement the rest of the\n parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain slice, which is used to implement the rest of the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399360,"byte_end":399429,"line_start":26,"line_end":26,"column_start":5,"column_end":74}},{"value":"/ parallel methods.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399434,"byte_end":399455,"line_start":27,"line_end":27,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4273},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399913,"byte_end":399922,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"par_split","qualname":"::slice::ParallelSlice::par_split","value":"pub fn par_split<P>(&Self, P) -> Split<, T, P> where P: Fn(&T) -> bool +\nSync + Send","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over subslices separated by elements that\n match the separator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over subslices separated by elements that","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399502,"byte_end":399575,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ match the separator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399580,"byte_end":399604,"line_start":31,"line_end":31,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399609,"byte_end":399612,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399617,"byte_end":399631,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399636,"byte_end":399639,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399644,"byte_end":399651,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399656,"byte_end":399682,"line_start":36,"line_end":36,"column_start":5,"column_end":31}},{"value":"/ let smallest = [1, 2, 3, 0, 2, 4, 8, 0, 3, 6, 9]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399687,"byte_end":399739,"line_start":37,"line_end":37,"column_start":5,"column_end":57}},{"value":"/     .par_split(|i| *i == 0)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399744,"byte_end":399775,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/     .map(|numbers| numbers.iter().min().unwrap())","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399780,"byte_end":399833,"line_start":39,"line_end":39,"column_start":5,"column_end":58}},{"value":"/     .min();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399838,"byte_end":399853,"line_start":40,"line_end":40,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(Some(&1), smallest);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399858,"byte_end":399893,"line_start":41,"line_end":41,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399898,"byte_end":399905,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4275},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400456,"byte_end":400467,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"par_windows","qualname":"::slice::ParallelSlice::par_windows","value":"pub fn par_windows(&Self, usize) -> Windows<, T>","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over all contiguous windows of length\n `window_size`. The windows overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over all contiguous windows of length","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400128,"byte_end":400197,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ `window_size`. The windows overlap.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400202,"byte_end":400241,"line_start":54,"line_end":54,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400246,"byte_end":400249,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400254,"byte_end":400268,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400273,"byte_end":400276,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400281,"byte_end":400288,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400293,"byte_end":400319,"line_start":59,"line_end":59,"column_start":5,"column_end":31}},{"value":"/ let windows: Vec<_> = [1, 2, 3].par_windows(2).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400324,"byte_end":400385,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(vec![[1, 2], [2, 3]], windows);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400390,"byte_end":400436,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400441,"byte_end":400448,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4276},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401180,"byte_end":401190,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"par_chunks","qualname":"::slice::ParallelSlice::par_chunks","value":"pub fn par_chunks(&Self, usize) -> Chunks<, T>","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400624,"byte_end":400693,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ `self` at a time. The chunks do not overlap.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400698,"byte_end":400746,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400751,"byte_end":400754,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400759,"byte_end":400824,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400829,"byte_end":400900,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400905,"byte_end":400950,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400955,"byte_end":400958,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400963,"byte_end":400977,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400982,"byte_end":400985,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400990,"byte_end":400997,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401002,"byte_end":401028,"line_start":80,"line_end":80,"column_start":5,"column_end":31}},{"value":"/ let chunks: Vec<_> = [1, 2, 3, 4, 5].par_chunks(2).collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401033,"byte_end":401098,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(chunks, vec![&[1, 2][..], &[3, 4], &[5]]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401103,"byte_end":401160,"line_start":82,"line_end":82,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401165,"byte_end":401172,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4280},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401579,"byte_end":401595,"line_start":101,"line_end":101,"column_start":11,"column_end":27},"name":"ParallelSliceMut","qualname":"::slice::ParallelSliceMut","value":"ParallelSliceMut<T: Send>","parent":null,"children":[{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4290},{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4298}],"decl_id":null,"docs":" Parallel extensions for mutable slices.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for mutable slices.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401525,"byte_end":401568,"line_start":100,"line_end":100,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4282},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401722,"byte_end":401743,"line_start":104,"line_end":104,"column_start":8,"column_end":29},"name":"as_parallel_slice_mut","qualname":"::slice::ParallelSliceMut::as_parallel_slice_mut","value":"pub fn as_parallel_slice_mut(&mut Self) -> &mut [T]","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Returns a plain mutable slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain mutable slice, which is used to implement the rest of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401611,"byte_end":401684,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ the parallel methods.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401689,"byte_end":401714,"line_start":103,"line_end":103,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4283},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402192,"byte_end":402205,"line_start":118,"line_end":118,"column_start":8,"column_end":21},"name":"par_split_mut","qualname":"::slice::ParallelSliceMut::par_split_mut","value":"pub fn par_split_mut<P>(&mut Self, P) -> SplitMut<, T, P> where P: Fn(&T) ->\nbool + Sync + Send","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over mutable subslices separated by\n elements that match the separator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over mutable subslices separated by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401773,"byte_end":401840,"line_start":106,"line_end":106,"column_start":5,"column_end":72}},{"value":"/ elements that match the separator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401845,"byte_end":401883,"line_start":107,"line_end":107,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401888,"byte_end":401891,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401896,"byte_end":401910,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401915,"byte_end":401918,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401923,"byte_end":401930,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401935,"byte_end":401961,"line_start":112,"line_end":112,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 0, 2, 4, 8, 0, 3, 6, 9];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401966,"byte_end":402020,"line_start":113,"line_end":113,"column_start":5,"column_end":59}},{"value":"/ array.par_split_mut(|i| *i == 0)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402025,"byte_end":402061,"line_start":114,"line_end":114,"column_start":5,"column_end":41}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402066,"byte_end":402110,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [3, 2, 1, 0, 8, 4, 2, 0, 9, 6, 3]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402115,"byte_end":402172,"line_start":116,"line_end":116,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402177,"byte_end":402184,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403031,"byte_end":403045,"line_start":144,"line_end":144,"column_start":8,"column_end":22},"name":"par_chunks_mut","qualname":"::slice::ParallelSliceMut::par_chunks_mut","value":"pub fn par_chunks_mut(&mut Self, usize) -> ChunksMut<, T>","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks are mutable and do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402425,"byte_end":402494,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ `self` at a time. The chunks are mutable and do not overlap.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402499,"byte_end":402563,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402568,"byte_end":402571,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402576,"byte_end":402641,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402646,"byte_end":402717,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402722,"byte_end":402767,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402772,"byte_end":402775,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402780,"byte_end":402794,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402799,"byte_end":402802,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402807,"byte_end":402814,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402819,"byte_end":402845,"line_start":138,"line_end":138,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 4, 5];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402850,"byte_end":402886,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ array.par_chunks_mut(2)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402891,"byte_end":402918,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402923,"byte_end":402967,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [2, 1, 4, 3, 5]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402972,"byte_end":403011,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403016,"byte_end":403023,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4286},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404734,"byte_end":404742,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"par_sort","qualname":"::slice::ParallelSliceMut::par_sort","value":"pub fn par_sort(&mut Self) where T: Ord","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403277,"byte_end":403309,"line_start":152,"line_end":152,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403314,"byte_end":403317,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403322,"byte_end":403413,"line_start":154,"line_end":154,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403418,"byte_end":403421,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403426,"byte_end":403519,"line_start":156,"line_end":156,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403524,"byte_end":403577,"line_start":157,"line_end":157,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable`](#method.par_sort_unstable).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403582,"byte_end":403639,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403644,"byte_end":403647,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403652,"byte_end":403680,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403685,"byte_end":403688,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403693,"byte_end":403756,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403761,"byte_end":403814,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403819,"byte_end":403911,"line_start":164,"line_end":164,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403916,"byte_end":403980,"line_start":165,"line_end":165,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403985,"byte_end":403988,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403993,"byte_end":404086,"line_start":167,"line_end":167,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404091,"byte_end":404141,"line_start":168,"line_end":168,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404146,"byte_end":404149,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404154,"byte_end":404248,"line_start":170,"line_end":170,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404253,"byte_end":404347,"line_start":171,"line_end":171,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404352,"byte_end":404448,"line_start":172,"line_end":172,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404453,"byte_end":404517,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404522,"byte_end":404525,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404530,"byte_end":404544,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404549,"byte_end":404552,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404557,"byte_end":404564,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404569,"byte_end":404595,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404600,"byte_end":404603,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404608,"byte_end":404642,"line_start":180,"line_end":180,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404647,"byte_end":404650,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ v.par_sort();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404655,"byte_end":404672,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(v, [-5, -3, 1, 2, 4]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404677,"byte_end":404714,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404719,"byte_end":404726,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4287},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406468,"byte_end":406479,"line_start":228,"line_end":228,"column_start":8,"column_end":19},"name":"par_sort_by","qualname":"::slice::ParallelSliceMut::par_sort_by","value":"pub fn par_sort_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering + Sync","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a comparator function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404857,"byte_end":404916,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404921,"byte_end":404924,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404929,"byte_end":405020,"line_start":194,"line_end":194,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405025,"byte_end":405028,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405033,"byte_end":405126,"line_start":196,"line_end":196,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405131,"byte_end":405184,"line_start":197,"line_end":197,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable_by`](#method.par_sort_unstable_by).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405189,"byte_end":405252,"line_start":198,"line_end":198,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405257,"byte_end":405260,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405265,"byte_end":405293,"line_start":200,"line_end":200,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405298,"byte_end":405301,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405306,"byte_end":405369,"line_start":202,"line_end":202,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405374,"byte_end":405427,"line_start":203,"line_end":203,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405432,"byte_end":405524,"line_start":204,"line_end":204,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405529,"byte_end":405593,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405598,"byte_end":405601,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405606,"byte_end":405699,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405704,"byte_end":405754,"line_start":208,"line_end":208,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405759,"byte_end":405762,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405767,"byte_end":405861,"line_start":210,"line_end":210,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405866,"byte_end":405960,"line_start":211,"line_end":211,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":405965,"byte_end":406061,"line_start":212,"line_end":212,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406066,"byte_end":406130,"line_start":213,"line_end":213,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406135,"byte_end":406138,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406143,"byte_end":406157,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406162,"byte_end":406165,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406170,"byte_end":406177,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406182,"byte_end":406208,"line_start":218,"line_end":218,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406213,"byte_end":406216,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406221,"byte_end":406253,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ v.par_sort_by(|a, b| a.cmp(b));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406258,"byte_end":406293,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [1, 2, 3, 4, 5]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406298,"byte_end":406333,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406338,"byte_end":406341,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ // reverse sorting","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406346,"byte_end":406368,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/ v.par_sort_by(|a, b| b.cmp(a));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406373,"byte_end":406408,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [5, 4, 3, 2, 1]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406413,"byte_end":406448,"line_start":226,"line_end":226,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406453,"byte_end":406460,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4290},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408215,"byte_end":408230,"line_start":270,"line_end":270,"column_start":8,"column_end":23},"name":"par_sort_by_key","qualname":"::slice::ParallelSliceMut::par_sort_by_key","value":"pub fn par_sort_by_key<B, F>(&mut Self, F) where B: Ord, F: Fn(&T) -> B + Sync","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406692,"byte_end":406755,"line_start":237,"line_end":237,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406760,"byte_end":406763,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406768,"byte_end":406859,"line_start":239,"line_end":239,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406864,"byte_end":406867,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406872,"byte_end":406965,"line_start":241,"line_end":241,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406970,"byte_end":407023,"line_start":242,"line_end":242,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable_by_key`](#method.par_sort_unstable_by_key).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407028,"byte_end":407099,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407104,"byte_end":407107,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407112,"byte_end":407140,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407145,"byte_end":407148,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407153,"byte_end":407216,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407221,"byte_end":407274,"line_start":248,"line_end":248,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407279,"byte_end":407371,"line_start":249,"line_end":249,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407376,"byte_end":407440,"line_start":250,"line_end":250,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407445,"byte_end":407448,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407453,"byte_end":407546,"line_start":252,"line_end":252,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407551,"byte_end":407601,"line_start":253,"line_end":253,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407606,"byte_end":407609,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407614,"byte_end":407708,"line_start":255,"line_end":255,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407713,"byte_end":407807,"line_start":256,"line_end":256,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407812,"byte_end":407908,"line_start":257,"line_end":257,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407913,"byte_end":407977,"line_start":258,"line_end":258,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407982,"byte_end":407985,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":407990,"byte_end":408004,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408009,"byte_end":408012,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408017,"byte_end":408024,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408029,"byte_end":408055,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408060,"byte_end":408063,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408068,"byte_end":408105,"line_start":265,"line_end":265,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408110,"byte_end":408113,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_by_key(|k| k.abs());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408118,"byte_end":408153,"line_start":267,"line_end":267,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [1, 2, -3, 4, -5]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408158,"byte_end":408195,"line_start":268,"line_end":268,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408200,"byte_end":408207,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4294},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409675,"byte_end":409692,"line_start":309,"line_end":309,"column_start":8,"column_end":25},"name":"par_sort_unstable","qualname":"::slice::ParallelSliceMut::par_sort_unstable","value":"pub fn par_sort_unstable(&mut Self) where T: Ord","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel, but may not preserve the order of equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel, but may not preserve the order of equal elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408404,"byte_end":408486,"line_start":278,"line_end":278,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408491,"byte_end":408494,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408499,"byte_end":408594,"line_start":280,"line_end":280,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408599,"byte_end":408631,"line_start":281,"line_end":281,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408636,"byte_end":408639,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408644,"byte_end":408672,"line_start":283,"line_end":283,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408677,"byte_end":408680,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408685,"byte_end":408776,"line_start":285,"line_end":285,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408781,"byte_end":408868,"line_start":286,"line_end":286,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408873,"byte_end":408963,"line_start":287,"line_end":287,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408968,"byte_end":409002,"line_start":288,"line_end":288,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409007,"byte_end":409010,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409015,"byte_end":409107,"line_start":290,"line_end":290,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409112,"byte_end":409172,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409177,"byte_end":409180,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409185,"byte_end":409274,"line_start":293,"line_end":293,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409279,"byte_end":409372,"line_start":294,"line_end":294,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409377,"byte_end":409390,"line_start":295,"line_end":295,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409395,"byte_end":409398,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409403,"byte_end":409449,"line_start":297,"line_end":297,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409454,"byte_end":409457,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409462,"byte_end":409476,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409481,"byte_end":409484,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409489,"byte_end":409496,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409501,"byte_end":409527,"line_start":302,"line_end":302,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409532,"byte_end":409535,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409540,"byte_end":409574,"line_start":304,"line_end":304,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409579,"byte_end":409582,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_unstable();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409587,"byte_end":409613,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(v, [-5, -3, 1, 2, 4]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409618,"byte_end":409655,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409660,"byte_end":409667,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4295},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411243,"byte_end":411263,"line_start":351,"line_end":351,"column_start":8,"column_end":28},"name":"par_sort_unstable_by","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by","value":"pub fn par_sort_unstable_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering +\nSync","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function, but may not preserve the order of\n equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a comparator function, but may not preserve the order of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409807,"byte_end":409900,"line_start":316,"line_end":316,"column_start":5,"column_end":98}},{"value":"/ equal elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409905,"byte_end":409924,"line_start":317,"line_end":317,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409929,"byte_end":409932,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409937,"byte_end":410032,"line_start":319,"line_end":319,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410037,"byte_end":410069,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410074,"byte_end":410077,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410082,"byte_end":410110,"line_start":322,"line_end":322,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410115,"byte_end":410118,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410123,"byte_end":410214,"line_start":324,"line_end":324,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410219,"byte_end":410306,"line_start":325,"line_end":325,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410311,"byte_end":410401,"line_start":326,"line_end":326,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410406,"byte_end":410440,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410445,"byte_end":410448,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410453,"byte_end":410545,"line_start":329,"line_end":329,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410550,"byte_end":410610,"line_start":330,"line_end":330,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410615,"byte_end":410618,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410623,"byte_end":410712,"line_start":332,"line_end":332,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410717,"byte_end":410810,"line_start":333,"line_end":333,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410815,"byte_end":410828,"line_start":334,"line_end":334,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410833,"byte_end":410836,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410841,"byte_end":410887,"line_start":336,"line_end":336,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410892,"byte_end":410895,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410900,"byte_end":410914,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410919,"byte_end":410922,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410927,"byte_end":410934,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410939,"byte_end":410965,"line_start":341,"line_end":341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410970,"byte_end":410973,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":410978,"byte_end":411010,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/ v.par_sort_unstable_by(|a, b| a.cmp(b));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411015,"byte_end":411059,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [1, 2, 3, 4, 5]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411064,"byte_end":411099,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411104,"byte_end":411107,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // reverse sorting","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411112,"byte_end":411134,"line_start":347,"line_end":347,"column_start":5,"column_end":27}},{"value":"/ v.par_sort_unstable_by(|a, b| b.cmp(a));","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411139,"byte_end":411183,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [5, 4, 3, 2, 1]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411188,"byte_end":411223,"line_start":349,"line_end":349,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411228,"byte_end":411235,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4298},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412807,"byte_end":412831,"line_start":392,"line_end":392,"column_start":8,"column_end":32},"name":"par_sort_unstable_by_key","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by_key","value":"pub fn par_sort_unstable_by_key<B, F>(&mut Self, F) where B: Ord, F: Fn(&T) ->\nB + Sync","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function, but may not preserve the order\n of equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function, but may not preserve the order","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411476,"byte_end":411570,"line_start":360,"line_end":360,"column_start":5,"column_end":99}},{"value":"/ of equal elements.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411575,"byte_end":411597,"line_start":361,"line_end":361,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411602,"byte_end":411605,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411610,"byte_end":411705,"line_start":363,"line_end":363,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411710,"byte_end":411742,"line_start":364,"line_end":364,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411747,"byte_end":411750,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411755,"byte_end":411783,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411788,"byte_end":411791,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411796,"byte_end":411887,"line_start":368,"line_end":368,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411892,"byte_end":411979,"line_start":369,"line_end":369,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411984,"byte_end":412074,"line_start":370,"line_end":370,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412079,"byte_end":412113,"line_start":371,"line_end":371,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412118,"byte_end":412121,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412126,"byte_end":412218,"line_start":373,"line_end":373,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412223,"byte_end":412283,"line_start":374,"line_end":374,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412288,"byte_end":412291,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412296,"byte_end":412385,"line_start":376,"line_end":376,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412390,"byte_end":412483,"line_start":377,"line_end":377,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412488,"byte_end":412501,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412506,"byte_end":412509,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412514,"byte_end":412560,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412565,"byte_end":412568,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412573,"byte_end":412587,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412592,"byte_end":412595,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412600,"byte_end":412607,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412612,"byte_end":412638,"line_start":385,"line_end":385,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412643,"byte_end":412646,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412651,"byte_end":412688,"line_start":387,"line_end":387,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412693,"byte_end":412696,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_unstable_by_key(|k| k.abs());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412701,"byte_end":412745,"line_start":389,"line_end":389,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [1, 2, -3, 4, -5]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412750,"byte_end":412787,"line_start":390,"line_end":390,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412792,"byte_end":412799,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7028},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414081,"byte_end":414085,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"Iter","qualname":"::slice::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":7031}],"decl_id":null,"docs":" Parallel iterator over immutable items in a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable items in a slice","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":413999,"byte_end":414052,"line_start":444,"line_end":444,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":7036},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415595,"byte_end":415601,"line_start":511,"line_end":511,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::slice::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":7039},{"krate":0,"index":7040}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable non-overlapping chunks of a slice","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415496,"byte_end":415566,"line_start":509,"line_end":509,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":7045},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":417554,"byte_end":417561,"line_start":591,"line_end":591,"column_start":12,"column_end":19},"name":"Windows","qualname":"::slice::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":7048},{"krate":0,"index":7049}],"decl_id":null,"docs":" Parallel iterator over immutable overlapping windows of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable overlapping windows of a slice","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":417458,"byte_end":417525,"line_start":589,"line_end":589,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7054},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":419598,"byte_end":419605,"line_start":673,"line_end":673,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::slice::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":7057}],"decl_id":null,"docs":" Parallel iterator over mutable items in a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable items in a slice","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":419518,"byte_end":419569,"line_start":671,"line_end":671,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7062},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":421084,"byte_end":421093,"line_start":735,"line_end":735,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::slice::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":7065},{"krate":0,"index":7066}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable non-overlapping chunks of a slice","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":420987,"byte_end":421055,"line_start":733,"line_end":733,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4474},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":422952,"byte_end":422957,"line_start":808,"line_end":808,"column_start":12,"column_end":17},"name":"Split","qualname":"::slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":4478},{"krate":0,"index":4479}],"decl_id":null,"docs":" Parallel iterator over slices separated by a predicate\n","sig":null,"attributes":[{"value":"/ Parallel iterator over slices separated by a predicate","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":422882,"byte_end":422940,"line_start":807,"line_end":807,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4508},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":424826,"byte_end":424834,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"SplitMut","qualname":"::slice::SplitMut","value":"SplitMut {  }","parent":null,"children":[{"krate":0,"index":4512},{"krate":0,"index":4513}],"decl_id":null,"docs":" Parallel iterator over mutable slices separated by a predicate\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable slices separated by a predicate","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":424748,"byte_end":424814,"line_start":883,"line_end":883,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":4537},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::str","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","parent":null,"children":[{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4541},{"krate":0,"index":4542},{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4560},{"krate":0,"index":4562},{"krate":0,"index":4577},{"krate":0,"index":4578},{"krate":0,"index":4582},{"krate":0,"index":4595},{"krate":0,"index":7074},{"krate":0,"index":7080},{"krate":0,"index":7077},{"krate":0,"index":4609},{"krate":0,"index":4612},{"krate":0,"index":4617},{"krate":0,"index":7083},{"krate":0,"index":7089},{"krate":0,"index":7086},{"krate":0,"index":4623},{"krate":0,"index":4627},{"krate":0,"index":4632},{"krate":0,"index":7092},{"krate":0,"index":7098},{"krate":0,"index":7095},{"krate":0,"index":4638},{"krate":0,"index":4641},{"krate":0,"index":4646},{"krate":0,"index":7101},{"krate":0,"index":7107},{"krate":0,"index":7104},{"krate":0,"index":4652},{"krate":0,"index":4655},{"krate":0,"index":4660},{"krate":0,"index":7110},{"krate":0,"index":7119},{"krate":0,"index":7115},{"krate":0,"index":4666},{"krate":0,"index":4670},{"krate":0,"index":4676},{"krate":0,"index":7123},{"krate":0,"index":7132},{"krate":0,"index":7128},{"krate":0,"index":4686},{"krate":0,"index":4692},{"krate":0,"index":4696},{"krate":0,"index":4701},{"krate":0,"index":4707},{"krate":0,"index":7136},{"krate":0,"index":7143},{"krate":0,"index":7140},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":7146},{"krate":0,"index":7153},{"krate":0,"index":7150},{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":7156},{"krate":0,"index":7165},{"krate":0,"index":7161},{"krate":0,"index":4728},{"krate":0,"index":4734},{"krate":0,"index":4740},{"krate":0,"index":7169},{"krate":0,"index":7178},{"krate":0,"index":7174},{"krate":0,"index":4748},{"krate":0,"index":4755},{"krate":0,"index":4761}],"decl_id":null,"docs":" Parallel iterator types for [strings][std::str]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [strings][std::str]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486291,"byte_end":486342,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486343,"byte_end":486346,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486347,"byte_end":486425,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486426,"byte_end":486464,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486465,"byte_end":486468,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Note: [`ParallelString::par_split()`] and [`par_split_terminator()`]","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486469,"byte_end":486541,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ reference a `Pattern` trait which is not visible outside this crate.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486542,"byte_end":486614,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ This trait is intentionally kept private, for use only by Rayon itself.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486615,"byte_end":486690,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486691,"byte_end":486768,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486769,"byte_end":486772,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`ParallelString::par_split()`]: trait.ParallelString.html#method.par_split","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486773,"byte_end":486852,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`par_split_terminator()`]: trait.ParallelString.html#method.par_split_terminator","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486853,"byte_end":486938,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486939,"byte_end":486942,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std::str]: https://doc.rust-lang.org/stable/std/str/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":486943,"byte_end":487000,"line_start":14,"line_end":14,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":4544},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488249,"byte_end":488263,"line_start":59,"line_end":59,"column_start":11,"column_end":25},"name":"ParallelString","qualname":"::str::ParallelString","value":"ParallelString","parent":null,"children":[{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4550},{"krate":0,"index":4552},{"krate":0,"index":4554},{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":4558}],"decl_id":null,"docs":" Parallel extensions for strings.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for strings.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488202,"byte_end":488238,"line_start":58,"line_end":58,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4545},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488380,"byte_end":488398,"line_start":62,"line_end":62,"column_start":8,"column_end":26},"name":"as_parallel_string","qualname":"::str::ParallelString::as_parallel_string","value":"pub fn as_parallel_string(&Self) -> &str","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a plain string slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain string slice, which is used to implement the rest of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488270,"byte_end":488342,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ the parallel methods.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488347,"byte_end":488372,"line_start":61,"line_end":61,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4546},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488683,"byte_end":488692,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"par_chars","qualname":"::str::ParallelString::par_chars","value":"pub fn par_chars(&Self) -> Chars","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the characters of a string.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488420,"byte_end":488484,"line_start":64,"line_end":64,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488489,"byte_end":488492,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488497,"byte_end":488511,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488516,"byte_end":488519,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488524,"byte_end":488531,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488536,"byte_end":488562,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/ let max = \"hello\".par_chars().max_by_key(|c| *c as i32);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488567,"byte_end":488627,"line_start":70,"line_end":70,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(Some('o'), max);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488632,"byte_end":488663,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488668,"byte_end":488675,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4547},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489101,"byte_end":489117,"line_start":88,"line_end":88,"column_start":8,"column_end":24},"name":"par_char_indices","qualname":"::str::ParallelString::par_char_indices","value":"pub fn par_char_indices(&Self) -> CharIndices","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string, with their positions.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the characters of a string, with their positions.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488798,"byte_end":488884,"line_start":79,"line_end":79,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488889,"byte_end":488892,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488897,"byte_end":488911,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488916,"byte_end":488919,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488924,"byte_end":488931,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488936,"byte_end":488962,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ let min = \"hello\".par_char_indices().min_by_key(|&(_i, c)| c as i32);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488967,"byte_end":489040,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Some((1, 'e')), min);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489045,"byte_end":489081,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489086,"byte_end":489093,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4548},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489777,"byte_end":489786,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"par_bytes","qualname":"::str::ParallelString::par_bytes","value":"pub fn par_bytes(&Self) -> Bytes","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the bytes of a string.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the bytes of a string.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489235,"byte_end":489294,"line_start":94,"line_end":94,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489299,"byte_end":489302,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that multi-byte sequences (for code points greater than `U+007F`)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489307,"byte_end":489381,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ are produced as separate items, but will not be split across threads.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489386,"byte_end":489459,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ If you would prefer an indexed iterator without that guarantee, consider","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489464,"byte_end":489540,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ `string.as_bytes().par_iter().cloned()` instead.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489545,"byte_end":489597,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489602,"byte_end":489605,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489610,"byte_end":489624,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489629,"byte_end":489632,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489637,"byte_end":489644,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489649,"byte_end":489675,"line_start":104,"line_end":104,"column_start":5,"column_end":31}},{"value":"/ let max = \"hello\".par_bytes().max();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489680,"byte_end":489720,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Some(b'o'), max);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489725,"byte_end":489757,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489762,"byte_end":489769,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4549},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490507,"byte_end":490523,"line_start":132,"line_end":132,"column_start":8,"column_end":24},"name":"par_encode_utf16","qualname":"::str::ParallelString::par_encode_utf16","value":"pub fn par_encode_utf16(&Self) -> EncodeUtf16","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over a string encoded as UTF-16.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over a string encoded as UTF-16.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489892,"byte_end":489956,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489961,"byte_end":489964,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Note that surrogate pairs (for code points greater than `U+FFFF`) are","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489969,"byte_end":490042,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ produced as separate items, but will not be split across threads.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490047,"byte_end":490116,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490121,"byte_end":490124,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490129,"byte_end":490143,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490148,"byte_end":490151,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490156,"byte_end":490163,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490168,"byte_end":490194,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490199,"byte_end":490202,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let max = \"hello\".par_encode_utf16().max();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490207,"byte_end":490254,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(Some(b'o' as u16), max);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490259,"byte_end":490298,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490303,"byte_end":490306,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let text = \"Zażółć gęślą jaźń\";","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490311,"byte_end":490355,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ let utf8_len = text.len();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490360,"byte_end":490390,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ let utf16_len = text.par_encode_utf16().count();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490395,"byte_end":490447,"line_start":129,"line_end":129,"column_start":5,"column_end":57}},{"value":"/ assert!(utf16_len <= utf8_len);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490452,"byte_end":490487,"line_start":130,"line_end":130,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490492,"byte_end":490499,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4550},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491211,"byte_end":491220,"line_start":154,"line_end":154,"column_start":8,"column_end":17},"name":"par_split","qualname":"::str::ParallelString::par_split","value":"pub fn par_split<P: Pattern>(&Self, P) -> Split<, P>","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings separated by a\n given character or predicate, similar to `str::split`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings separated by a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490641,"byte_end":490703,"line_start":138,"line_end":138,"column_start":5,"column_end":67}},{"value":"/ given character or predicate, similar to `str::split`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490708,"byte_end":490766,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490771,"byte_end":490774,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490779,"byte_end":490850,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490855,"byte_end":490932,"line_start":142,"line_end":142,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490937,"byte_end":490940,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490945,"byte_end":490959,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490964,"byte_end":490967,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490972,"byte_end":490979,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490984,"byte_end":491010,"line_start":147,"line_end":147,"column_start":5,"column_end":31}},{"value":"/ let total = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491015,"byte_end":491057,"line_start":148,"line_end":148,"column_start":5,"column_end":47}},{"value":"/    .par_split(',')","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491062,"byte_end":491084,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/    .filter_map(|s| s.trim().parse::<i32>().ok())","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491089,"byte_end":491141,"line_start":150,"line_end":150,"column_start":5,"column_end":57}},{"value":"/    .sum();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491146,"byte_end":491160,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(10, total);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491165,"byte_end":491191,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491196,"byte_end":491203,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4552},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492049,"byte_end":492069,"line_start":175,"line_end":175,"column_start":8,"column_end":28},"name":"par_split_terminator","qualname":"::str::ParallelString::par_split_terminator","value":"pub fn par_split_terminator<P: Pattern>(&Self, P) -> SplitTerminator<, P>","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings terminated by a\n given character or predicate, similar to `str::split_terminator`.\n It's equivalent to `par_split`, except it doesn't produce an empty\n substring after a trailing terminator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings terminated by a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491340,"byte_end":491403,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ given character or predicate, similar to `str::split_terminator`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491408,"byte_end":491477,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/ It's equivalent to `par_split`, except it doesn't produce an empty","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491482,"byte_end":491552,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ substring after a trailing terminator.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491557,"byte_end":491599,"line_start":161,"line_end":161,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491604,"byte_end":491607,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491612,"byte_end":491683,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491688,"byte_end":491765,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491770,"byte_end":491773,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491778,"byte_end":491792,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491797,"byte_end":491800,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491805,"byte_end":491812,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491817,"byte_end":491843,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/ let parts: Vec<_> = \"((1 + 3) * 2)\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491848,"byte_end":491887,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/     .par_split_terminator(|c| c == '(' || c == ')')","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491892,"byte_end":491947,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/     .collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491952,"byte_end":491971,"line_start":172,"line_end":172,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(vec![\"\", \"\", \"1 + 3\", \" * 2\"], parts);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491976,"byte_end":492029,"line_start":173,"line_end":173,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492034,"byte_end":492041,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4554},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492740,"byte_end":492749,"line_start":194,"line_end":194,"column_start":8,"column_end":17},"name":"par_lines","qualname":"::str::ParallelString::par_lines","value":"pub fn par_lines(&Self) -> Lines","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the lines of a string, ending with an\n optional carriage return and with a newline (`\\r\\n` or just `\\n`).\n The final line ending is optional, and line endings are not included in\n the output strings.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the lines of a string, ending with an","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492211,"byte_end":492285,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ optional carriage return and with a newline (`\\r\\n` or just `\\n`).","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492290,"byte_end":492360,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ The final line ending is optional, and line endings are not included in","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492365,"byte_end":492440,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ the output strings.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492445,"byte_end":492468,"line_start":182,"line_end":182,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492473,"byte_end":492476,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492481,"byte_end":492495,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492500,"byte_end":492503,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492508,"byte_end":492515,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492520,"byte_end":492546,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/ let lengths: Vec<_> = \"hello world\\nfizbuzz\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492551,"byte_end":492599,"line_start":188,"line_end":188,"column_start":5,"column_end":53}},{"value":"/     .par_lines()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492604,"byte_end":492624,"line_start":189,"line_end":189,"column_start":5,"column_end":25}},{"value":"/     .map(|l| l.len())","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492629,"byte_end":492654,"line_start":190,"line_end":190,"column_start":5,"column_end":30}},{"value":"/     .collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492659,"byte_end":492678,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(vec![11, 7], lengths);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492683,"byte_end":492720,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492725,"byte_end":492732,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4555},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493374,"byte_end":493394,"line_start":213,"line_end":213,"column_start":8,"column_end":28},"name":"par_split_whitespace","qualname":"::str::ParallelString::par_split_whitespace","value":"pub fn par_split_whitespace(&Self) -> SplitWhitespace","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the sub-slices of a string that are\n separated by any amount of whitespace.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the sub-slices of a string that are","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492824,"byte_end":492896,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/ separated by any amount of whitespace.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492901,"byte_end":492943,"line_start":199,"line_end":199,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492948,"byte_end":492951,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ As with `str::split_whitespace`, 'whitespace' is defined according to","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492956,"byte_end":493029,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ the terms of the Unicode Derived Core Property `White_Space`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493034,"byte_end":493099,"line_start":202,"line_end":202,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493104,"byte_end":493107,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493112,"byte_end":493126,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493131,"byte_end":493134,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493139,"byte_end":493146,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493151,"byte_end":493177,"line_start":207,"line_end":207,"column_start":5,"column_end":31}},{"value":"/ let longest = \"which is the longest word?\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493182,"byte_end":493228,"line_start":208,"line_end":208,"column_start":5,"column_end":51}},{"value":"/     .par_split_whitespace()","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493233,"byte_end":493264,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/     .max_by_key(|word| word.len());","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493269,"byte_end":493308,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Some(\"longest\"), longest);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493313,"byte_end":493354,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493359,"byte_end":493366,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4556},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494071,"byte_end":494082,"line_start":233,"line_end":233,"column_start":8,"column_end":19},"name":"par_matches","qualname":"::str::ParallelString::par_matches","value":"pub fn par_matches<P: Pattern>(&Self, P) -> Matches<, P>","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a\n given character or predicate, similar to `str::matches`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings that match a","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493489,"byte_end":493549,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/ given character or predicate, similar to `str::matches`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493554,"byte_end":493614,"line_start":218,"line_end":218,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493619,"byte_end":493622,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493627,"byte_end":493698,"line_start":220,"line_end":220,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493703,"byte_end":493780,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493785,"byte_end":493788,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493793,"byte_end":493807,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493812,"byte_end":493815,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493820,"byte_end":493827,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493832,"byte_end":493858,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/ let total = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493863,"byte_end":493905,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/    .par_matches(char::is_numeric)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493910,"byte_end":493947,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/    .map(|s| s.parse::<i32>().expect(\"digit\"))","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493952,"byte_end":494001,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/    .sum();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494006,"byte_end":494020,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(10, total);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494025,"byte_end":494051,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494056,"byte_end":494063,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4558},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494860,"byte_end":494877,"line_start":255,"line_end":255,"column_start":8,"column_end":25},"name":"par_match_indices","qualname":"::str::ParallelString::par_match_indices","value":"pub fn par_match_indices<P: Pattern>(&Self, P) -> MatchIndices<, P>","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a given character\n or predicate, with their positions, similar to `str::match_indices`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings that match a given character","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494240,"byte_end":494316,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ or predicate, with their positions, similar to `str::match_indices`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494321,"byte_end":494393,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494398,"byte_end":494401,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494406,"byte_end":494477,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494482,"byte_end":494559,"line_start":244,"line_end":244,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494564,"byte_end":494567,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494572,"byte_end":494586,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494591,"byte_end":494594,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494599,"byte_end":494606,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494611,"byte_end":494637,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/ let digits: Vec<_> = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494642,"byte_end":494693,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"/    .par_match_indices(char::is_numeric)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494698,"byte_end":494741,"line_start":251,"line_end":251,"column_start":5,"column_end":48}},{"value":"/    .collect();","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494746,"byte_end":494764,"line_start":252,"line_end":252,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(digits, vec![(0, \"1\"), (3, \"2\"), (14, \"3\"), (17, \"4\")]);","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494769,"byte_end":494840,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494845,"byte_end":494852,"line_start":254,"line_end":254,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4564},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495774,"byte_end":495781,"line_start":283,"line_end":283,"column_start":15,"column_end":22},"name":"Pattern","qualname":"::str::private::Pattern","value":"Pattern: Sized + Sync + Send","parent":null,"children":[{"krate":0,"index":7071},{"krate":0,"index":4565},{"krate":0,"index":4566},{"krate":0,"index":4567},{"krate":0,"index":4568},{"krate":0,"index":4571},{"krate":0,"index":4574}],"decl_id":null,"docs":" Pattern-matching trait for `ParallelString`, somewhat like a mix of\n `std::str::pattern::{Pattern, Searcher}`.","sig":null,"attributes":[{"value":"/ Pattern-matching trait for `ParallelString`, somewhat like a mix of","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495561,"byte_end":495632,"line_start":279,"line_end":279,"column_start":5,"column_end":76}},{"value":"/ `std::str::pattern::{Pattern, Searcher}`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495637,"byte_end":495682,"line_start":280,"line_end":280,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495687,"byte_end":495690,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Implementing this trait is not permitted outside of `rayon`.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495695,"byte_end":495759,"line_start":282,"line_end":282,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4565},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495841,"byte_end":495848,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"find_in","qualname":"::str::private::Pattern::find_in","value":"pub fn find_in(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":4564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4566},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495901,"byte_end":495909,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"rfind_in","qualname":"::str::private::Pattern::rfind_in","value":"pub fn rfind_in(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":4564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4567},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495962,"byte_end":495974,"line_start":287,"line_end":287,"column_start":12,"column_end":24},"name":"is_suffix_of","qualname":"::str::private::Pattern::is_suffix_of","value":"pub fn is_suffix_of(&Self, &str) -> bool","parent":{"krate":0,"index":4564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4568},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":496018,"byte_end":496029,"line_start":288,"line_end":288,"column_start":12,"column_end":23},"name":"fold_splits","qualname":"::str::private::Pattern::fold_splits","value":"pub fn fold_splits<'ch, F>(&Self, &'ch str, F, bool) -> F where\nF: Folder<&'ch str>","parent":{"krate":0,"index":4564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4571},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":496156,"byte_end":496168,"line_start":291,"line_end":291,"column_start":12,"column_end":24},"name":"fold_matches","qualname":"::str::private::Pattern::fold_matches","value":"pub fn fold_matches<'ch, F>(&Self, &'ch str, F) -> F where F: Folder<&'ch str>","parent":{"krate":0,"index":4564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4574},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":496278,"byte_end":496296,"line_start":294,"line_end":294,"column_start":12,"column_end":30},"name":"fold_match_indices","qualname":"::str::private::Pattern::fold_match_indices","value":"pub fn fold_match_indices<'ch, F>(&Self, &'ch str, F, usize) -> F where\nF: Folder<(usize, &'ch str)>","parent":{"krate":0,"index":4564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7074},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":498767,"byte_end":498772,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"Chars","qualname":"::str::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":7076}],"decl_id":null,"docs":" Parallel iterator over the characters of a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the characters of a string","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":498678,"byte_end":498731,"line_start":393,"line_end":393,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":7083},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":499814,"byte_end":499825,"line_start":439,"line_end":439,"column_start":12,"column_end":23},"name":"CharIndices","qualname":"::str::CharIndices","value":"CharIndices {  }","parent":null,"children":[{"krate":0,"index":7085}],"decl_id":null,"docs":" Parallel iterator over the characters of a string, with their positions\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the characters of a string, with their positions","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":499703,"byte_end":499778,"line_start":437,"line_end":437,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":7092},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":501197,"byte_end":501202,"line_start":495,"line_end":495,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::str::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":7094}],"decl_id":null,"docs":" Parallel iterator over the bytes of a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the bytes of a string","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":501113,"byte_end":501161,"line_start":493,"line_end":493,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":7101},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":502218,"byte_end":502229,"line_start":539,"line_end":539,"column_start":12,"column_end":23},"name":"EncodeUtf16","qualname":"::str::EncodeUtf16","value":"EncodeUtf16 {  }","parent":null,"children":[{"krate":0,"index":7103}],"decl_id":null,"docs":" Parallel iterator over a string encoded as UTF-16\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a string encoded as UTF-16","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":502129,"byte_end":502182,"line_start":537,"line_end":537,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":7110},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":503297,"byte_end":503302,"line_start":583,"line_end":583,"column_start":12,"column_end":17},"name":"Split","qualname":"::str::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":7113},{"krate":0,"index":7114}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by a pattern","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":503201,"byte_end":503261,"line_start":581,"line_end":581,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7123},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":504971,"byte_end":504986,"line_start":644,"line_end":644,"column_start":12,"column_end":27},"name":"SplitTerminator","qualname":"::str::SplitTerminator","value":"SplitTerminator {  }","parent":null,"children":[{"krate":0,"index":7126},{"krate":0,"index":7127}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a terminator pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by a terminator pattern","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":504864,"byte_end":504935,"line_start":642,"line_end":642,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":7136},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":506844,"byte_end":506849,"line_start":710,"line_end":710,"column_start":12,"column_end":17},"name":"Lines","qualname":"::str::Lines","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over lines in a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over lines in a string","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":506764,"byte_end":506808,"line_start":708,"line_end":708,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":7146},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":507520,"byte_end":507535,"line_start":739,"line_end":739,"column_start":12,"column_end":27},"name":"SplitWhitespace","qualname":"::str::SplitWhitespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over substrings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by whitespace","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":507423,"byte_end":507484,"line_start":737,"line_end":737,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":7156},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":508124,"byte_end":508131,"line_start":764,"line_end":764,"column_start":12,"column_end":19},"name":"Matches","qualname":"::str::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":7159},{"krate":0,"index":7160}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings that match a pattern","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":508030,"byte_end":508088,"line_start":762,"line_end":762,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":7169},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":509532,"byte_end":509544,"line_start":820,"line_end":820,"column_start":12,"column_end":24},"name":"MatchIndices","qualname":"::str::MatchIndices","value":"MatchIndices {  }","parent":null,"children":[{"krate":0,"index":7172},{"krate":0,"index":7173}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern, with their positions\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings that match a pattern, with their positions","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":509416,"byte_end":509496,"line_start":818,"line_end":818,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":4769},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","parent":null,"children":[{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":7182},{"krate":0,"index":7188},{"krate":0,"index":7185},{"krate":0,"index":4772},{"krate":0,"index":4777},{"krate":0,"index":4783},{"krate":0,"index":4790},{"krate":0,"index":4794},{"krate":0,"index":4801},{"krate":0,"index":4805},{"krate":0,"index":4809},{"krate":0,"index":4815},{"krate":0,"index":4819},{"krate":0,"index":4823}],"decl_id":null,"docs":" Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","sig":null,"attributes":[{"value":"/ Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":510922,"byte_end":510984,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":510985,"byte_end":510988,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":510989,"byte_end":511067,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511068,"byte_end":511106,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511107,"byte_end":511110,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::vec]: https://doc.rust-lang.org/stable/std/vec/","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511111,"byte_end":511168,"line_start":6,"line_end":6,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7182},"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511306,"byte_end":511314,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":7184}],"decl_id":null,"docs":" Parallel iterator that moves out of a vector.\n","sig":null,"attributes":[{"value":"/ Parallel iterator that moves out of a vector.","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511221,"byte_end":511270,"line_start":11,"line_end":11,"column_start":1,"column_end":50}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/split_producer.rs","byte_start":8527,"byte_end":8540,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/split_producer.rs","byte_start":10008,"byte_end":10021,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13155,"byte_end":13165,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13622,"byte_end":13626,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":14826,"byte_end":14830,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":16341,"byte_end":16345,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":17609,"byte_end":17613,"line_start":35,"line_end":35,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":19259,"byte_end":19263,"line_start":35,"line_end":35,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":20369,"byte_end":20373,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":21782,"byte_end":21786,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118516,"byte_end":118517,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":119027,"byte_end":119037,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":120035,"byte_end":120055,"line_start":107,"line_end":107,"column_start":41,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":120347,"byte_end":120367,"line_start":118,"line_end":118,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":124274,"byte_end":124279,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":124507,"byte_end":124512,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":125615,"byte_end":125620,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":126555,"byte_end":126564,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":127242,"byte_end":127251,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":127920,"byte_end":127933,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":128116,"byte_end":128129,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":129741,"byte_end":129749,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":129963,"byte_end":129971,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":130267,"byte_end":130275,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":130396,"byte_end":130404,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":131024,"byte_end":131036,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":131190,"byte_end":131202,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":131787,"byte_end":131799,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":132159,"byte_end":132169,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":133196,"byte_end":133207,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":135729,"byte_end":135741,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":136291,"byte_end":136303,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":137369,"byte_end":137381,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":138939,"byte_end":138949,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":140657,"byte_end":140668,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141498,"byte_end":141504,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141703,"byte_end":141709,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":142042,"byte_end":142048,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":142746,"byte_end":142754,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":143327,"byte_end":143340,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":144459,"byte_end":144467,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":145145,"byte_end":145153,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":145314,"byte_end":145322,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":152028,"byte_end":152043,"line_start":30,"line_end":30,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":152336,"byte_end":152351,"line_start":38,"line_end":38,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":153378,"byte_end":153391,"line_start":72,"line_end":72,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":154402,"byte_end":154417,"line_start":106,"line_end":106,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/mod.rs","byte_start":148290,"byte_end":148297,"line_start":76,"line_end":76,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/mod.rs","byte_start":149963,"byte_end":149966,"line_start":121,"line_end":121,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162901,"byte_end":162910,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":163103,"byte_end":163112,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":163456,"byte_end":163465,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":163971,"byte_end":163979,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":164563,"byte_end":164580,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166386,"byte_end":166392,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166552,"byte_end":166558,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166769,"byte_end":166775,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":167319,"byte_end":167333,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":167484,"byte_end":167498,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":168242,"byte_end":168256,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":168639,"byte_end":168651,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169927,"byte_end":169936,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":170143,"byte_end":170152,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":170341,"byte_end":170350,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":170913,"byte_end":170930,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":171083,"byte_end":171100,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":171886,"byte_end":171903,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":172304,"byte_end":172319,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173621,"byte_end":173628,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173807,"byte_end":173814,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173994,"byte_end":174001,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":174612,"byte_end":174627,"line_start":59,"line_end":59,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":174772,"byte_end":174787,"line_start":65,"line_end":65,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":175579,"byte_end":175594,"line_start":97,"line_end":97,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":176034,"byte_end":176047,"line_start":118,"line_end":118,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177619,"byte_end":177626,"line_start":16,"line_end":16,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177860,"byte_end":177867,"line_start":27,"line_end":27,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178303,"byte_end":178307,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":179104,"byte_end":179108,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":179298,"byte_end":179302,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":179911,"byte_end":179923,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":180779,"byte_end":180791,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":181260,"byte_end":181270,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":182430,"byte_end":182438,"line_start":182,"line_end":182,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":183227,"byte_end":183235,"line_start":210,"line_end":210,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":183489,"byte_end":183497,"line_start":219,"line_end":219,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":184065,"byte_end":184081,"line_start":246,"line_end":246,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":184999,"byte_end":185015,"line_start":285,"line_end":285,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/for_each.rs","byte_start":185744,"byte_end":185759,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/for_each.rs","byte_start":186155,"byte_end":186170,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/for_each.rs","byte_start":186594,"byte_end":186609,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":187492,"byte_end":187495,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":187764,"byte_end":187772,"line_start":35,"line_end":35,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":188128,"byte_end":188138,"line_start":49,"line_end":49,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":188447,"byte_end":188457,"line_start":63,"line_end":63,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":188920,"byte_end":188927,"line_start":79,"line_end":79,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":189461,"byte_end":189469,"line_start":97,"line_end":97,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":189768,"byte_end":189775,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190097,"byte_end":190105,"line_start":125,"line_end":125,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190383,"byte_end":190389,"line_start":138,"line_end":138,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190650,"byte_end":190656,"line_start":148,"line_end":148,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190923,"byte_end":190929,"line_start":158,"line_end":158,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":191192,"byte_end":191198,"line_start":168,"line_end":168,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":191468,"byte_end":191474,"line_start":178,"line_end":178,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":191917,"byte_end":191920,"line_start":192,"line_end":192,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":204054,"byte_end":204062,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":205191,"byte_end":205205,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207563,"byte_end":207571,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":211834,"byte_end":211841,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212743,"byte_end":212750,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212946,"byte_end":212953,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":213649,"byte_end":213664,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":214555,"byte_end":214570,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":215088,"byte_end":215101,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":215829,"byte_end":215840,"line_start":167,"line_end":167,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216681,"byte_end":216692,"line_start":196,"line_end":196,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216973,"byte_end":216984,"line_start":208,"line_end":208,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":217594,"byte_end":217613,"line_start":236,"line_end":236,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":218576,"byte_end":218595,"line_start":276,"line_end":276,"column_start":47,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":219484,"byte_end":219498,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":219540,"byte_end":219554,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":219656,"byte_end":219670,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":220197,"byte_end":220211,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":220460,"byte_end":220474,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":220715,"byte_end":220727,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221842,"byte_end":221846,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":222078,"byte_end":222082,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":222417,"byte_end":222421,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":223002,"byte_end":223010,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224148,"byte_end":224165,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224207,"byte_end":224224,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224326,"byte_end":224343,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224957,"byte_end":224974,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1428},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":225241,"byte_end":225258,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":225734,"byte_end":225749,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227089,"byte_end":227110,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227144,"byte_end":227165,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227259,"byte_end":227280,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227859,"byte_end":227880,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":228117,"byte_end":228138,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":228793,"byte_end":228812,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234128,"byte_end":234133,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234313,"byte_end":234318,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234806,"byte_end":234819,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235780,"byte_end":235784,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":236016,"byte_end":236020,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":236355,"byte_end":236359,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":236922,"byte_end":236930,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1575},{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237868,"byte_end":237871,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":238028,"byte_end":238031,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":238233,"byte_end":238236,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":238710,"byte_end":238713,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":239455,"byte_end":239463,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":240142,"byte_end":240153,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":241325,"byte_end":241336,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":241477,"byte_end":241488,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":242227,"byte_end":242238,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":242629,"byte_end":242638,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243875,"byte_end":243882,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":244114,"byte_end":244121,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":244352,"byte_end":244359,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":244875,"byte_end":244882,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":245727,"byte_end":245735,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":246518,"byte_end":246533,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":247866,"byte_end":247877,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":248258,"byte_end":248269,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":248560,"byte_end":248571,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":248885,"byte_end":248900,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":249066,"byte_end":249081,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":249925,"byte_end":249940,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1830},{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":250400,"byte_end":250413,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1859},{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251944,"byte_end":251951,"line_start":352,"line_end":352,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":252124,"byte_end":252131,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":252374,"byte_end":252381,"line_start":368,"line_end":368,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":252921,"byte_end":252928,"line_start":390,"line_end":390,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1887},{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":253803,"byte_end":253811,"line_start":425,"line_end":425,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":254621,"byte_end":254636,"line_start":457,"line_end":457,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":256086,"byte_end":256101,"line_start":520,"line_end":520,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":256283,"byte_end":256298,"line_start":526,"line_end":526,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":257154,"byte_end":257169,"line_start":559,"line_end":559,"column_start":56,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1968},{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":258084,"byte_end":258087,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":258309,"byte_end":258312,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":258696,"byte_end":258699,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":259359,"byte_end":259368,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":259989,"byte_end":259998,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2018},{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":260655,"byte_end":260666,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":262075,"byte_end":262080,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":262349,"byte_end":262354,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":262746,"byte_end":262751,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272824,"byte_end":272834,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":273085,"byte_end":273095,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":273472,"byte_end":273482,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2086},{"krate":0,"index":2088},{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":274378,"byte_end":274387,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":275197,"byte_end":275206,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2116},{"krate":0,"index":2117}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":275987,"byte_end":276005,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2130}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":276325,"byte_end":276343,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":279208,"byte_end":279221,"line_start":267,"line_end":267,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":280354,"byte_end":280367,"line_start":306,"line_end":306,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2156}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":280928,"byte_end":280941,"line_start":327,"line_end":327,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2160}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281868,"byte_end":281886,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":282527,"byte_end":282545,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2175}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":282922,"byte_end":282940,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2179},{"krate":0,"index":2181},{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":284042,"byte_end":284053,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":284283,"byte_end":284294,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":284824,"byte_end":284835,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":285742,"byte_end":285750,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2217},{"krate":0,"index":2218}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":286317,"byte_end":286336,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":286577,"byte_end":286596,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":288771,"byte_end":288786,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":289558,"byte_end":289573,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2252}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":290221,"byte_end":290236,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":290584,"byte_end":290603,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2265}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":290828,"byte_end":290847,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":291925,"byte_end":291944,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":292484,"byte_end":292501,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294274,"byte_end":294280,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294440,"byte_end":294446,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294657,"byte_end":294663,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2317}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":295125,"byte_end":295131,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":2323},{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":295872,"byte_end":295880,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2335},{"krate":0,"index":2336}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":296557,"byte_end":296571,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":297831,"byte_end":297845,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":297992,"byte_end":298006,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":298752,"byte_end":298766,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2383},{"krate":0,"index":2384}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":299287,"byte_end":299299,"line_start":233,"line_end":233,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2405},{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":300245,"byte_end":300254,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":301004,"byte_end":301013,"line_start":310,"line_end":310,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":301117,"byte_end":301126,"line_start":317,"line_end":317,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":301431,"byte_end":301443,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":301787,"byte_end":301799,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2444},{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":302155,"byte_end":302167,"line_start":45,"line_end":45,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":302361,"byte_end":302372,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302926,"byte_end":302929,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":303110,"byte_end":303113,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2466}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":303448,"byte_end":303451,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2469},{"krate":0,"index":2471},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":304021,"byte_end":304029,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":304544,"byte_end":304555,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305774,"byte_end":305780,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2503}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305984,"byte_end":305990,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2509}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":306325,"byte_end":306331,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2512},{"krate":0,"index":2514},{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":306909,"byte_end":306917,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2524},{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":307552,"byte_end":307566,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308858,"byte_end":308864,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2543}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":309068,"byte_end":309074,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":309409,"byte_end":309415,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2552},{"krate":0,"index":2554},{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":309993,"byte_end":310001,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2564},{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":310636,"byte_end":310650,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311949,"byte_end":311955,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2590}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":312142,"byte_end":312148,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":312596,"byte_end":312602,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2603},{"krate":0,"index":2605},{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":313247,"byte_end":313255,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2615},{"krate":0,"index":2616}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":313812,"byte_end":313826,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":314722,"byte_end":314736,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":314848,"byte_end":314862,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":315510,"byte_end":315524,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2653},{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":315844,"byte_end":315856,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2666},{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316900,"byte_end":316906,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2675}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":317093,"byte_end":317099,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":317546,"byte_end":317552,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2688},{"krate":0,"index":2690},{"krate":0,"index":2691}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":318196,"byte_end":318204,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2700},{"krate":0,"index":2701}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":318760,"byte_end":318774,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":319743,"byte_end":319757,"line_start":143,"line_end":143,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":319869,"byte_end":319883,"line_start":149,"line_end":149,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":320530,"byte_end":320544,"line_start":178,"line_end":178,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2738},{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":320863,"byte_end":320875,"line_start":196,"line_end":196,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2751},{"krate":0,"index":2752}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":321980,"byte_end":321995,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322017,"byte_end":322032,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322181,"byte_end":322196,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322746,"byte_end":322761,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2786},{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322993,"byte_end":323008,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2790}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":323193,"byte_end":323206,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324194,"byte_end":324205,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324227,"byte_end":324238,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2822}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324379,"byte_end":324390,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324857,"byte_end":324868,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2835},{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":325084,"byte_end":325095,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2839}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":325268,"byte_end":325277,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2850},{"krate":0,"index":2851}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326373,"byte_end":326380,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326541,"byte_end":326548,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326763,"byte_end":326770,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2873}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":327230,"byte_end":327237,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2877},{"krate":0,"index":2879},{"krate":0,"index":2880}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":327979,"byte_end":327987,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2891},{"krate":0,"index":2892}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":328658,"byte_end":328673,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2910}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":329883,"byte_end":329898,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2922}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":330048,"byte_end":330063,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":330806,"byte_end":330821,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2939},{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":331200,"byte_end":331213,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2956},{"krate":0,"index":2957}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332601,"byte_end":332605,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332763,"byte_end":332767,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2971}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332877,"byte_end":332886,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2974}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":333080,"byte_end":333089,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":333599,"byte_end":333608,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2985},{"krate":0,"index":2986}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":334308,"byte_end":334316,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":335025,"byte_end":335042,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3011}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":336140,"byte_end":336153,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":336500,"byte_end":336513,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3027}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":336764,"byte_end":336777,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3031}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":337088,"byte_end":337105,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3046}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":338063,"byte_end":338080,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3051},{"krate":0,"index":3052}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":338559,"byte_end":338574,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3071},{"krate":0,"index":3072}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":339423,"byte_end":339439,"line_start":335,"line_end":335,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3082}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340157,"byte_end":340166,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340355,"byte_end":340364,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3096},{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340994,"byte_end":341011,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":341811,"byte_end":341828,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3118},{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":342231,"byte_end":342246,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3137},{"krate":0,"index":3138}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":345066,"byte_end":345076,"line_start":64,"line_end":64,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3181}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":345373,"byte_end":345383,"line_start":77,"line_end":77,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3186}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":345695,"byte_end":345703,"line_start":90,"line_end":90,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3191}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":346038,"byte_end":346046,"line_start":104,"line_end":104,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3197}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":346382,"byte_end":346390,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":346684,"byte_end":346692,"line_start":131,"line_end":131,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":347162,"byte_end":347169,"line_start":152,"line_end":152,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3217}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":347624,"byte_end":347631,"line_start":168,"line_end":168,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":348158,"byte_end":348165,"line_start":191,"line_end":191,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3233}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":348497,"byte_end":348504,"line_start":205,"line_end":205,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3239}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":348956,"byte_end":348966,"line_start":224,"line_end":224,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":349406,"byte_end":349416,"line_start":241,"line_end":241,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3250}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":349820,"byte_end":349826,"line_start":259,"line_end":259,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3254}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":350481,"byte_end":350487,"line_start":278,"line_end":278,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":350954,"byte_end":350960,"line_start":293,"line_end":293,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3264}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":351221,"byte_end":351227,"line_start":303,"line_end":303,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3267}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":351503,"byte_end":351509,"line_start":313,"line_end":313,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":351880,"byte_end":351888,"line_start":327,"line_end":327,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3278}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":352174,"byte_end":352182,"line_start":340,"line_end":340,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3283}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":352594,"byte_end":352597,"line_start":356,"line_end":356,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353908,"byte_end":353914,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3302},{"krate":0,"index":3303}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354763,"byte_end":354769,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3307},{"krate":0,"index":3308}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355219,"byte_end":355233,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356284,"byte_end":356291,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356609,"byte_end":356616,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3329},{"krate":0,"index":3331},{"krate":0,"index":3333}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":357228,"byte_end":357243,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":358040,"byte_end":358044,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":358422,"byte_end":358426,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":358555,"byte_end":358559,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3358}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":361581,"byte_end":361586,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":362467,"byte_end":362476,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":363513,"byte_end":363525,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":364156,"byte_end":364162,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":365563,"byte_end":365569,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3473}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":366506,"byte_end":366519,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":367782,"byte_end":367795,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3500},{"krate":0,"index":3501}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":368459,"byte_end":368470,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":369211,"byte_end":369223,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3530}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":370307,"byte_end":370315,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3552}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371446,"byte_end":371451,"line_start":35,"line_end":35,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3573}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371541,"byte_end":371546,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3576}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371682,"byte_end":371687,"line_start":47,"line_end":47,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3579},{"krate":0,"index":3580},{"krate":0,"index":3582}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371973,"byte_end":371978,"line_start":62,"line_end":62,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3585},{"krate":0,"index":3587},{"krate":0,"index":3588}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":372458,"byte_end":372471,"line_start":85,"line_end":85,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3598},{"krate":0,"index":3599},{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373784,"byte_end":373788,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3615}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":374074,"byte_end":374078,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3620},{"krate":0,"index":3621}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31738,"byte_end":31739,"line_start":268,"line_end":268,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3640}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33247,"byte_end":33248,"line_start":315,"line_end":315,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91883,"byte_end":91884,"line_start":2070,"line_end":2070,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":116105,"byte_end":116111,"line_start":2834,"line_end":2834,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6591},{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3937},{"krate":0,"index":3938},{"krate":0,"index":3939}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":116436,"byte_end":116442,"line_start":2851,"line_end":2851,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6592},{"krate":0,"index":3943},{"krate":0,"index":3944},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375462,"byte_end":375468,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3958}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375641,"byte_end":375649,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3961},{"krate":0,"index":3962},{"krate":0,"index":3964}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375944,"byte_end":375952,"line_start":50,"line_end":50,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3969},{"krate":0,"index":3970}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377109,"byte_end":377113,"line_start":91,"line_end":91,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3975}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":378589,"byte_end":378603,"line_start":150,"line_end":150,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3993},{"krate":0,"index":3994},{"krate":0,"index":3995},{"krate":0,"index":3996}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":379215,"byte_end":379221,"line_start":173,"line_end":173,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4000}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":382044,"byte_end":382049,"line_start":50,"line_end":50,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":382326,"byte_end":382338,"line_start":66,"line_end":66,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4033},{"krate":0,"index":4034},{"krate":0,"index":4035}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390809,"byte_end":390813,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4047}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":391387,"byte_end":391401,"line_start":63,"line_end":63,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":4052}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395846,"byte_end":395852,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4064},{"krate":0,"index":4065},{"krate":0,"index":4066}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":396286,"byte_end":396290,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4070}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":397543,"byte_end":397549,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4089}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":427272,"byte_end":427282,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4115}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":430232,"byte_end":430238,"line_start":102,"line_end":102,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4124}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":430487,"byte_end":430500,"line_start":114,"line_end":114,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":434226,"byte_end":434235,"line_start":217,"line_end":217,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4142}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":445677,"byte_end":445682,"line_start":521,"line_end":521,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4166}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/quicksort.rs","byte_start":454853,"byte_end":454864,"line_start":21,"line_end":21,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4188}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/quicksort.rs","byte_start":455094,"byte_end":455100,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4194}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/quicksort.rs","byte_start":455307,"byte_end":455317,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4201}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414161,"byte_end":414165,"line_start":450,"line_end":450,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414292,"byte_end":414296,"line_start":456,"line_end":456,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4336},{"krate":0,"index":4337},{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414622,"byte_end":414626,"line_start":471,"line_end":471,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4343},{"krate":0,"index":4345},{"krate":0,"index":4346}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415129,"byte_end":415141,"line_start":495,"line_end":495,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4355},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415700,"byte_end":415706,"line_start":516,"line_end":516,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4362}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415835,"byte_end":415841,"line_start":522,"line_end":522,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4369}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":416169,"byte_end":416175,"line_start":537,"line_end":537,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4373},{"krate":0,"index":4375},{"krate":0,"index":4376}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":416798,"byte_end":416812,"line_start":565,"line_end":565,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4386},{"krate":0,"index":4387},{"krate":0,"index":4388},{"krate":0,"index":4389}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":417661,"byte_end":417668,"line_start":596,"line_end":596,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4393}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":417798,"byte_end":417805,"line_start":602,"line_end":602,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4397},{"krate":0,"index":4398},{"krate":0,"index":4400}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":418133,"byte_end":418140,"line_start":617,"line_end":617,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4404},{"krate":0,"index":4406},{"krate":0,"index":4407}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":418814,"byte_end":418829,"line_start":646,"line_end":646,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4419},{"krate":0,"index":4420}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":419704,"byte_end":419711,"line_start":677,"line_end":677,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4427}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":420041,"byte_end":420048,"line_start":692,"line_end":692,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4431},{"krate":0,"index":4433},{"krate":0,"index":4434}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":420561,"byte_end":420576,"line_start":716,"line_end":716,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4443},{"krate":0,"index":4444},{"krate":0,"index":4445},{"krate":0,"index":4446}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":421215,"byte_end":421224,"line_start":740,"line_end":740,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4453}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":421556,"byte_end":421565,"line_start":755,"line_end":755,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4457},{"krate":0,"index":4459},{"krate":0,"index":4460}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":422198,"byte_end":422215,"line_start":783,"line_end":783,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4472},{"krate":0,"index":4473}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":423052,"byte_end":423057,"line_start":813,"line_end":813,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4484}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":423240,"byte_end":423245,"line_start":822,"line_end":822,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4489}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":423441,"byte_end":423446,"line_start":828,"line_end":828,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4494},{"krate":0,"index":4495}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":424933,"byte_end":424941,"line_start":889,"line_end":889,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4518}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":425166,"byte_end":425174,"line_start":897,"line_end":897,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4523},{"krate":0,"index":4524}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":497642,"byte_end":497644,"line_start":350,"line_end":350,"column_start":54,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7073},{"krate":0,"index":4597},{"krate":0,"index":4598},{"krate":0,"index":4599},{"krate":0,"index":4600},{"krate":0,"index":4603},{"krate":0,"index":4606}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":498887,"byte_end":498892,"line_start":403,"line_end":403,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4614},{"krate":0,"index":4615}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":499152,"byte_end":499165,"line_start":414,"line_end":414,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4619},{"krate":0,"index":4620},{"krate":0,"index":4621}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":499964,"byte_end":499975,"line_start":448,"line_end":448,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4629},{"krate":0,"index":4630}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":500326,"byte_end":500345,"line_start":463,"line_end":463,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":501317,"byte_end":501322,"line_start":503,"line_end":503,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4643},{"krate":0,"index":4644}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":501580,"byte_end":501593,"line_start":514,"line_end":514,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":502350,"byte_end":502361,"line_start":547,"line_end":547,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4657},{"krate":0,"index":4658}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":502626,"byte_end":502645,"line_start":558,"line_end":558,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4664}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":503386,"byte_end":503391,"line_start":588,"line_end":588,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4669}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":503541,"byte_end":503546,"line_start":594,"line_end":594,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4673},{"krate":0,"index":4674}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":505199,"byte_end":505214,"line_start":654,"line_end":654,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4695}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":505368,"byte_end":505391,"line_start":660,"line_end":660,"column_start":36,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4700}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":505699,"byte_end":505714,"line_start":669,"line_end":669,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4704},{"krate":0,"index":4705}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":506062,"byte_end":506085,"line_start":681,"line_end":681,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":4711},{"krate":0,"index":4712},{"krate":0,"index":4714}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":507049,"byte_end":507054,"line_start":721,"line_end":721,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4719},{"krate":0,"index":4720}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":507648,"byte_end":507663,"line_start":746,"line_end":746,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4725},{"krate":0,"index":4726}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":508328,"byte_end":508335,"line_start":774,"line_end":774,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4737},{"krate":0,"index":4738}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":508712,"byte_end":508727,"line_start":789,"line_end":789,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":509764,"byte_end":509776,"line_start":831,"line_end":831,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4758},{"krate":0,"index":4759}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":510189,"byte_end":510209,"line_start":847,"line_end":847,"column_start":51,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4765},{"krate":0,"index":4766},{"krate":0,"index":4767}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511385,"byte_end":511388,"line_start":17,"line_end":17,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4774},{"krate":0,"index":4775},{"krate":0,"index":4776}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511561,"byte_end":511569,"line_start":26,"line_end":26,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4782}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511866,"byte_end":511874,"line_start":41,"line_end":41,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4785},{"krate":0,"index":4787},{"krate":0,"index":4788}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":512989,"byte_end":513000,"line_start":79,"line_end":79,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4797},{"krate":0,"index":4798},{"krate":0,"index":4799},{"krate":0,"index":4800}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":513664,"byte_end":513675,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4804}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514037,"byte_end":514047,"line_start":114,"line_end":114,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4812},{"krate":0,"index":4813},{"krate":0,"index":4814}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514369,"byte_end":514379,"line_start":128,"line_end":128,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4818}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514584,"byte_end":514594,"line_start":135,"line_end":135,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4822}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514700,"byte_end":514710,"line_start":141,"line_end":141,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4826}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/par_either.rs","byte_start":515779,"byte_end":515785,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4841}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/par_either.rs","byte_start":516305,"byte_end":516311,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4845},{"krate":0,"index":4847},{"krate":0,"index":4848}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/par_either.rs","byte_start":517105,"byte_end":517111,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4854}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4010,"byte_end":4021,"line_start":96,"line_end":96,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":46}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12548,"byte_end":12559,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":48}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12569,"byte_end":12578,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":62}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12588,"byte_end":12597,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":72}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12607,"byte_end":12615,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":81}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12625,"byte_end":12633,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":94}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12643,"byte_end":12654,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":106}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12664,"byte_end":12673,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":115}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4031,"byte_end":4035,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":137}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27622,"byte_end":27630,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1079}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4045,"byte_end":4051,"line_start":98,"line_end":98,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3948}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4061,"byte_end":4068,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4006}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4078,"byte_end":4083,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4018}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4093,"byte_end":4108,"line_start":101,"line_end":101,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":4041}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4118,"byte_end":4124,"line_start":102,"line_end":102,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4056}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4134,"byte_end":4139,"line_start":103,"line_end":103,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4096}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4149,"byte_end":4152,"line_start":104,"line_end":104,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4537}},{"kind":"Mod","span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4162,"byte_end":4165,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4769}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/split_producer.rs","byte_start":8096,"byte_end":8101,"line_start":17,"line_end":17,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/split_producer.rs","byte_start":8527,"byte_end":8540,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":15},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/split_producer.rs","byte_start":10008,"byte_end":10021,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":15},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13155,"byte_end":13165,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":497},"to":{"krate":0,"index":3626}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13622,"byte_end":13626,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4909},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":14826,"byte_end":14830,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4961},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":16341,"byte_end":16345,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5031},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":17609,"byte_end":17613,"line_start":35,"line_end":35,"column_start":50,"column_end":54},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5076},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":19259,"byte_end":19263,"line_start":35,"line_end":35,"column_start":41,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":5149},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":20369,"byte_end":20373,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5193},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":21782,"byte_end":21786,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5265},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118352,"byte_end":118357,"line_start":46,"line_end":46,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":168}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118516,"byte_end":118517,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":171},"to":{"krate":0,"index":168}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":119027,"byte_end":119037,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5311},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":120035,"byte_end":120055,"line_start":107,"line_end":107,"column_start":41,"column_end":61},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":120347,"byte_end":120367,"line_start":118,"line_end":118,"column_start":60,"column_end":80},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":178},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":124274,"byte_end":124279,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":124507,"byte_end":124512,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5320},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":125615,"byte_end":125620,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5320},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":126555,"byte_end":126564,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":228},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":127242,"byte_end":127251,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":240},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":127920,"byte_end":127933,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":128116,"byte_end":128129,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":252},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":129741,"byte_end":129749,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":129963,"byte_end":129971,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":273},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":130267,"byte_end":130275,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":273},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":130396,"byte_end":130404,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":273},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":131024,"byte_end":131036,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":131190,"byte_end":131202,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":303},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":131787,"byte_end":131799,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":303},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":132159,"byte_end":132169,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":328},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":133196,"byte_end":133207,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":349},"to":{"krate":0,"index":1114}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":135729,"byte_end":135741,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":136291,"byte_end":136303,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":368},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":137369,"byte_end":137381,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":368},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":138939,"byte_end":138949,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":397},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":140657,"byte_end":140668,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":414},"to":{"krate":0,"index":1114}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141498,"byte_end":141504,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141703,"byte_end":141709,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5341},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":142042,"byte_end":142048,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5341},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":142746,"byte_end":142754,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":441},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":143327,"byte_end":143340,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":452},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":144459,"byte_end":144467,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":145145,"byte_end":145153,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":145314,"byte_end":145322,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":152028,"byte_end":152043,"line_start":30,"line_end":30,"column_start":24,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":152336,"byte_end":152351,"line_start":38,"line_end":38,"column_start":40,"column_end":55},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":500},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":153378,"byte_end":153391,"line_start":72,"line_end":72,"column_start":38,"column_end":51},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":154402,"byte_end":154417,"line_start":106,"line_end":106,"column_start":49,"column_end":64},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":500},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/mod.rs","byte_start":148290,"byte_end":148297,"line_start":76,"line_end":76,"column_start":24,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/mod.rs","byte_start":149963,"byte_end":149966,"line_start":121,"line_end":121,"column_start":31,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162901,"byte_end":162910,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":163103,"byte_end":163112,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5351},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":163456,"byte_end":163465,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5351},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":163971,"byte_end":163979,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":586},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":164563,"byte_end":164580,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":595},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166386,"byte_end":166392,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5360},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166552,"byte_end":166558,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166769,"byte_end":166775,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5360},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":167319,"byte_end":167333,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":167484,"byte_end":167498,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":628},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":168242,"byte_end":168256,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":628},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":168639,"byte_end":168651,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":657},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169927,"byte_end":169936,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5369},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":170143,"byte_end":170152,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":170341,"byte_end":170350,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5369},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":170913,"byte_end":170930,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":171083,"byte_end":171100,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":694},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":171886,"byte_end":171903,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":694},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":172304,"byte_end":172319,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":725},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173621,"byte_end":173628,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5378},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173807,"byte_end":173814,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173994,"byte_end":174001,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5378},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":174612,"byte_end":174627,"line_start":59,"line_end":59,"column_start":16,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":174772,"byte_end":174787,"line_start":65,"line_end":65,"column_start":38,"column_end":53},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":763},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":175579,"byte_end":175594,"line_start":97,"line_end":97,"column_start":47,"column_end":62},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":763},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":176034,"byte_end":176047,"line_start":118,"line_end":118,"column_start":36,"column_end":49},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":794},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177619,"byte_end":177626,"line_start":16,"line_end":16,"column_start":13,"column_end":20},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177860,"byte_end":177867,"line_start":27,"line_end":27,"column_start":34,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5387},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178303,"byte_end":178307,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":179104,"byte_end":179108,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5396},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":179298,"byte_end":179302,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5396},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":179911,"byte_end":179923,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":854},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":180779,"byte_end":180791,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":854},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":181260,"byte_end":181270,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":884},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":182430,"byte_end":182438,"line_start":182,"line_end":182,"column_start":15,"column_end":23},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":183227,"byte_end":183235,"line_start":210,"line_end":210,"column_start":58,"column_end":66},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5408},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":183489,"byte_end":183497,"line_start":219,"line_end":219,"column_start":36,"column_end":44},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5408},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":184065,"byte_end":184081,"line_start":246,"line_end":246,"column_start":38,"column_end":54},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":927},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":184999,"byte_end":185015,"line_start":285,"line_end":285,"column_start":47,"column_end":63},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":927},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/for_each.rs","byte_start":185744,"byte_end":185759,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":963},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/for_each.rs","byte_start":186155,"byte_end":186170,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":963},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/for_each.rs","byte_start":186594,"byte_end":186609,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":963},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":187492,"byte_end":187495,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"kind":{"Impl":{"id":120}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":187764,"byte_end":187772,"line_start":35,"line_end":35,"column_start":37,"column_end":45},"kind":{"Impl":{"id":121}},"from":{"krate":5,"index":3191},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":188128,"byte_end":188138,"line_start":49,"line_end":49,"column_start":37,"column_end":47},"kind":{"Impl":{"id":122}},"from":{"krate":5,"index":497},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":188447,"byte_end":188457,"line_start":63,"line_end":63,"column_start":37,"column_end":47},"kind":{"Impl":{"id":123}},"from":{"krate":5,"index":2603},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":188920,"byte_end":188927,"line_start":79,"line_end":79,"column_start":48,"column_end":55},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":6776},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":189461,"byte_end":189469,"line_start":97,"line_end":97,"column_start":45,"column_end":53},"kind":{"Impl":{"id":125}},"from":{"krate":5,"index":907},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":189768,"byte_end":189775,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"kind":{"Impl":{"id":126}},"from":{"krate":1,"index":6802},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190097,"byte_end":190105,"line_start":125,"line_end":125,"column_start":37,"column_end":45},"kind":{"Impl":{"id":127}},"from":{"krate":5,"index":5541},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190383,"byte_end":190389,"line_start":138,"line_end":138,"column_start":37,"column_end":43},"kind":{"Impl":{"id":128}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190650,"byte_end":190656,"line_start":148,"line_end":148,"column_start":45,"column_end":51},"kind":{"Impl":{"id":129}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190923,"byte_end":190929,"line_start":158,"line_end":158,"column_start":44,"column_end":50},"kind":{"Impl":{"id":130}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":191192,"byte_end":191198,"line_start":168,"line_end":168,"column_start":39,"column_end":45},"kind":{"Impl":{"id":131}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":191468,"byte_end":191474,"line_start":178,"line_end":178,"column_start":49,"column_end":55},"kind":{"Impl":{"id":132}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":191917,"byte_end":191920,"line_start":192,"line_end":192,"column_start":52,"column_end":55},"kind":{"Impl":{"id":133}},"from":{"krate":5,"index":406},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195587,"byte_end":195591,"line_start":59,"line_end":59,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195594,"byte_end":195599,"line_start":59,"line_end":59,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198601,"byte_end":198605,"line_start":128,"line_end":128,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198608,"byte_end":198613,"line_start":128,"line_end":128,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199921,"byte_end":199926,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201941,"byte_end":201949,"line_start":213,"line_end":213,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":1098},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203054,"byte_end":203058,"line_start":236,"line_end":236,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203061,"byte_end":203066,"line_start":236,"line_end":236,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":204054,"byte_end":204062,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":205191,"byte_end":205205,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207563,"byte_end":207571,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1135},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":211834,"byte_end":211841,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212743,"byte_end":212750,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5431},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212946,"byte_end":212953,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5431},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":213649,"byte_end":213664,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":214555,"byte_end":214570,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":215088,"byte_end":215101,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1224},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":215829,"byte_end":215840,"line_start":167,"line_end":167,"column_start":15,"column_end":26},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216681,"byte_end":216692,"line_start":196,"line_end":196,"column_start":56,"column_end":67},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5446},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216973,"byte_end":216984,"line_start":208,"line_end":208,"column_start":36,"column_end":47},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5446},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":217594,"byte_end":217613,"line_start":236,"line_end":236,"column_start":38,"column_end":57},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1259},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":218576,"byte_end":218595,"line_start":276,"line_end":276,"column_start":47,"column_end":66},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1259},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":219484,"byte_end":219498,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":219540,"byte_end":219554,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":219656,"byte_end":219670,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":220197,"byte_end":220211,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":220460,"byte_end":220474,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":1114}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":220715,"byte_end":220727,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1337},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221842,"byte_end":221846,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":222078,"byte_end":222082,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5458},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":222417,"byte_end":222421,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5458},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":223002,"byte_end":223010,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1374},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224148,"byte_end":224165,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1396},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224207,"byte_end":224224,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1396},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224326,"byte_end":224343,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1396},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224957,"byte_end":224974,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1396},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":225241,"byte_end":225258,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1396},"to":{"krate":0,"index":1114}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":225734,"byte_end":225749,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1436},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227089,"byte_end":227110,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1462},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227144,"byte_end":227165,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1462},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227259,"byte_end":227280,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1462},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227859,"byte_end":227880,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1462},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":228117,"byte_end":228138,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1462},"to":{"krate":0,"index":1114}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":228793,"byte_end":228812,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1495},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234128,"byte_end":234133,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5468},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234313,"byte_end":234318,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5468},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234806,"byte_end":234819,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1530},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235780,"byte_end":235784,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":236016,"byte_end":236020,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5477},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":236355,"byte_end":236359,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5477},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":236922,"byte_end":236930,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1568},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237868,"byte_end":237871,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5487},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":238028,"byte_end":238031,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":238233,"byte_end":238236,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5487},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":238710,"byte_end":238713,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5487},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":239455,"byte_end":239463,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1611},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":240142,"byte_end":240153,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1624},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":241325,"byte_end":241336,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":241477,"byte_end":241488,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1643},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":242227,"byte_end":242238,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1643},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":242629,"byte_end":242638,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1674},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243875,"byte_end":243882,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5496},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":244114,"byte_end":244121,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":244352,"byte_end":244359,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5496},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":244875,"byte_end":244882,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5496},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":245727,"byte_end":245735,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1728},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":246518,"byte_end":246533,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1744},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":247866,"byte_end":247877,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1766},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":248258,"byte_end":248269,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1766},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":248560,"byte_end":248571,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1766},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":248885,"byte_end":248900,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":249066,"byte_end":249081,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1796},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":249925,"byte_end":249940,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1796},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":250400,"byte_end":250413,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1832},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251944,"byte_end":251951,"line_start":352,"line_end":352,"column_start":54,"column_end":61},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5508},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":252124,"byte_end":252131,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":252374,"byte_end":252381,"line_start":368,"line_end":368,"column_start":45,"column_end":52},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5508},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":252921,"byte_end":252928,"line_start":390,"line_end":390,"column_start":52,"column_end":59},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5508},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":253803,"byte_end":253811,"line_start":425,"line_end":425,"column_start":60,"column_end":68},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1892},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":254621,"byte_end":254636,"line_start":457,"line_end":457,"column_start":41,"column_end":56},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1909},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":256086,"byte_end":256101,"line_start":520,"line_end":520,"column_start":22,"column_end":37},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":256283,"byte_end":256298,"line_start":526,"line_end":526,"column_start":47,"column_end":62},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1932},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":257154,"byte_end":257169,"line_start":559,"line_end":559,"column_start":56,"column_end":71},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1932},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":258084,"byte_end":258087,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":258309,"byte_end":258312,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5520},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":258696,"byte_end":258699,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5520},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":259359,"byte_end":259368,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1997},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":259989,"byte_end":259998,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2009},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":260655,"byte_end":260666,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2021},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":262075,"byte_end":262080,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":262349,"byte_end":262354,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5533},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":262746,"byte_end":262751,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5533},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272824,"byte_end":272834,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":6424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":273085,"byte_end":273095,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":6424},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":273472,"byte_end":273482,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":6424},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":274378,"byte_end":274387,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2091},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":275197,"byte_end":275206,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2105},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":275987,"byte_end":276005,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":276325,"byte_end":276343,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2119},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":279208,"byte_end":279221,"line_start":267,"line_end":267,"column_start":25,"column_end":38},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2141},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":280354,"byte_end":280367,"line_start":306,"line_end":306,"column_start":36,"column_end":49},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2141},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":280928,"byte_end":280941,"line_start":327,"line_end":327,"column_start":34,"column_end":47},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2141},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281868,"byte_end":281886,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":6437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":282527,"byte_end":282545,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":6437},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":282922,"byte_end":282940,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":6437},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":284042,"byte_end":284053,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":6449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":284283,"byte_end":284294,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":6449},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":284824,"byte_end":284835,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":6449},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":285742,"byte_end":285750,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2208},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":286317,"byte_end":286336,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":286577,"byte_end":286596,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2220},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":288771,"byte_end":288786,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2239},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":289558,"byte_end":289573,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2239},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":290221,"byte_end":290236,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2239},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":290584,"byte_end":290603,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":290828,"byte_end":290847,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2256},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":291925,"byte_end":291944,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2256},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":292484,"byte_end":292501,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2280},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294274,"byte_end":294280,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":6459},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294440,"byte_end":294446,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294657,"byte_end":294663,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":6459},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":295125,"byte_end":295131,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":6459},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":295872,"byte_end":295880,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2326},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":296557,"byte_end":296571,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2338},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":297831,"byte_end":297845,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":297992,"byte_end":298006,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2356},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":298752,"byte_end":298766,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2356},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":299287,"byte_end":299299,"line_start":233,"line_end":233,"column_start":33,"column_end":45},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2385},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":300245,"byte_end":300254,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":301004,"byte_end":301013,"line_start":310,"line_end":310,"column_start":34,"column_end":43},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":301117,"byte_end":301126,"line_start":317,"line_end":317,"column_start":36,"column_end":45},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":301431,"byte_end":301443,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2428},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":301787,"byte_end":301799,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2428},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":302155,"byte_end":302167,"line_start":45,"line_end":45,"column_start":34,"column_end":46},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2428},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":302361,"byte_end":302372,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2450},"to":{"krate":0,"index":1114}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302926,"byte_end":302929,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":6481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":303110,"byte_end":303113,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":6481},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":303448,"byte_end":303451,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":6481},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":304021,"byte_end":304029,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2474},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":304544,"byte_end":304555,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2484},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305774,"byte_end":305780,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":6490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305984,"byte_end":305990,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":6490},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":306325,"byte_end":306331,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":6490},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":306909,"byte_end":306917,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2517},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":307552,"byte_end":307566,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2527},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308858,"byte_end":308864,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":6500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":309068,"byte_end":309074,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":6500},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":309409,"byte_end":309415,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":6500},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":309993,"byte_end":310001,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2557},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":310636,"byte_end":310650,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2567},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311949,"byte_end":311955,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":6510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":312142,"byte_end":312148,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":6510},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":312596,"byte_end":312602,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6510},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":313247,"byte_end":313255,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2608},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":313812,"byte_end":313826,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2618},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":314722,"byte_end":314736,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":314848,"byte_end":314862,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2633},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":315510,"byte_end":315524,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2633},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":315844,"byte_end":315856,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2655},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316900,"byte_end":316906,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":6519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":317093,"byte_end":317099,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6519},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":317546,"byte_end":317552,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6519},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":318196,"byte_end":318204,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2693},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":318760,"byte_end":318774,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2703},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":319743,"byte_end":319757,"line_start":143,"line_end":143,"column_start":9,"column_end":23},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":319869,"byte_end":319883,"line_start":149,"line_end":149,"column_start":36,"column_end":50},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2718},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":320530,"byte_end":320544,"line_start":178,"line_end":178,"column_start":45,"column_end":59},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2718},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":320863,"byte_end":320875,"line_start":196,"line_end":196,"column_start":34,"column_end":46},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2740},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":321980,"byte_end":321995,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2766},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322017,"byte_end":322032,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322181,"byte_end":322196,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2766},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322746,"byte_end":322761,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2766},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322993,"byte_end":323008,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2766},"to":{"krate":0,"index":1114}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":323193,"byte_end":323206,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2791},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324194,"byte_end":324205,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2815},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324227,"byte_end":324238,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324379,"byte_end":324390,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2815},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324857,"byte_end":324868,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2815},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":325084,"byte_end":325095,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2815},"to":{"krate":0,"index":1114}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":325268,"byte_end":325277,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2840},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326373,"byte_end":326380,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6528},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326541,"byte_end":326548,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326763,"byte_end":326770,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6528},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":327230,"byte_end":327237,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6528},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":327979,"byte_end":327987,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2882},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":328658,"byte_end":328673,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2894},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":329883,"byte_end":329898,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":330048,"byte_end":330063,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2912},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":330806,"byte_end":330821,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2912},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":331200,"byte_end":331213,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2941},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332601,"byte_end":332605,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6546},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332763,"byte_end":332767,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332877,"byte_end":332886,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":333080,"byte_end":333089,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6537},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":333599,"byte_end":333608,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6537},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":334308,"byte_end":334316,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2988},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":335025,"byte_end":335042,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2997},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":336140,"byte_end":336153,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3013},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":336500,"byte_end":336513,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3013},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":336764,"byte_end":336777,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3013},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":337088,"byte_end":337105,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3032},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":338063,"byte_end":338080,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3032},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":338559,"byte_end":338574,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3053},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":339423,"byte_end":339439,"line_start":335,"line_end":335,"column_start":31,"column_end":47},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3073},"to":{"krate":0,"index":1114}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340157,"byte_end":340166,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340355,"byte_end":340364,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6553},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340994,"byte_end":341011,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":3099},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":341811,"byte_end":341828,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":3099},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":342231,"byte_end":342246,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3120},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":345066,"byte_end":345076,"line_start":64,"line_end":64,"column_start":31,"column_end":41},"kind":{"Impl":{"id":335}},"from":{"krate":5,"index":497},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":345373,"byte_end":345383,"line_start":77,"line_end":77,"column_start":39,"column_end":49},"kind":{"Impl":{"id":336}},"from":{"krate":5,"index":497},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":345695,"byte_end":345703,"line_start":90,"line_end":90,"column_start":39,"column_end":47},"kind":{"Impl":{"id":337}},"from":{"krate":5,"index":907},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":346038,"byte_end":346046,"line_start":104,"line_end":104,"column_start":59,"column_end":67},"kind":{"Impl":{"id":338}},"from":{"krate":5,"index":907},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":346382,"byte_end":346390,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"kind":{"Impl":{"id":339}},"from":{"krate":5,"index":5541},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":346684,"byte_end":346692,"line_start":131,"line_end":131,"column_start":39,"column_end":47},"kind":{"Impl":{"id":340}},"from":{"krate":5,"index":5541},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":347162,"byte_end":347169,"line_start":152,"line_end":152,"column_start":42,"column_end":49},"kind":{"Impl":{"id":341}},"from":{"krate":1,"index":6776},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":347624,"byte_end":347631,"line_start":168,"line_end":168,"column_start":62,"column_end":69},"kind":{"Impl":{"id":342}},"from":{"krate":1,"index":6776},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":348158,"byte_end":348165,"line_start":191,"line_end":191,"column_start":34,"column_end":41},"kind":{"Impl":{"id":343}},"from":{"krate":1,"index":6802},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":348497,"byte_end":348504,"line_start":205,"line_end":205,"column_start":42,"column_end":49},"kind":{"Impl":{"id":344}},"from":{"krate":1,"index":6802},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":348956,"byte_end":348966,"line_start":224,"line_end":224,"column_start":31,"column_end":41},"kind":{"Impl":{"id":345}},"from":{"krate":5,"index":2603},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":349406,"byte_end":349416,"line_start":241,"line_end":241,"column_start":39,"column_end":49},"kind":{"Impl":{"id":346}},"from":{"krate":5,"index":2603},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":349820,"byte_end":349826,"line_start":259,"line_end":259,"column_start":31,"column_end":37},"kind":{"Impl":{"id":347}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":350481,"byte_end":350487,"line_start":278,"line_end":278,"column_start":39,"column_end":45},"kind":{"Impl":{"id":348}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":350954,"byte_end":350960,"line_start":293,"line_end":293,"column_start":38,"column_end":44},"kind":{"Impl":{"id":349}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":351221,"byte_end":351227,"line_start":303,"line_end":303,"column_start":33,"column_end":39},"kind":{"Impl":{"id":350}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":351503,"byte_end":351509,"line_start":313,"line_end":313,"column_start":43,"column_end":49},"kind":{"Impl":{"id":351}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":351880,"byte_end":351888,"line_start":327,"line_end":327,"column_start":31,"column_end":39},"kind":{"Impl":{"id":352}},"from":{"krate":5,"index":3191},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":352174,"byte_end":352182,"line_start":340,"line_end":340,"column_start":39,"column_end":47},"kind":{"Impl":{"id":353}},"from":{"krate":5,"index":3191},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":352594,"byte_end":352597,"line_start":356,"line_end":356,"column_start":39,"column_end":42},"kind":{"Impl":{"id":354}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":3922}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353908,"byte_end":353914,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354763,"byte_end":354769,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6562},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355219,"byte_end":355233,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":3310},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356284,"byte_end":356291,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6571},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356609,"byte_end":356616,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":6571},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":357228,"byte_end":357243,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":3334},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":358040,"byte_end":358044,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3344},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":358422,"byte_end":358426,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":3344},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":358555,"byte_end":358559,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":3344},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":358898,"byte_end":358902,"line_start":7,"line_end":7,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":3362}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":358905,"byte_end":358909,"line_start":7,"line_end":7,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":3362}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":361581,"byte_end":361586,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":3392},"to":{"krate":0,"index":3362}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":362467,"byte_end":362476,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":3408},"to":{"krate":0,"index":3362}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":363513,"byte_end":363525,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":3426},"to":{"krate":0,"index":3362}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":364156,"byte_end":364162,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":3439},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":365563,"byte_end":365569,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":3456},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":366506,"byte_end":366519,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3474},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":367782,"byte_end":367795,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":3474},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":368459,"byte_end":368470,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":3502},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":369211,"byte_end":369223,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":3520},"to":{"krate":0,"index":1114}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":370307,"byte_end":370315,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":3545},"to":{"krate":0,"index":3362}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371446,"byte_end":371451,"line_start":35,"line_end":35,"column_start":25,"column_end":30},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371541,"byte_end":371546,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371682,"byte_end":371687,"line_start":47,"line_end":47,"column_start":36,"column_end":41},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":3568},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371973,"byte_end":371978,"line_start":62,"line_end":62,"column_start":43,"column_end":48},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":3568},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":372458,"byte_end":372471,"line_start":85,"line_end":85,"column_start":28,"column_end":41},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":3590},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373784,"byte_end":373788,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":6581},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":374074,"byte_end":374078,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":6581},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31738,"byte_end":31739,"line_start":268,"line_end":268,"column_start":67,"column_end":68},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":3637},"to":{"krate":0,"index":3630}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33247,"byte_end":33248,"line_start":315,"line_end":315,"column_start":70,"column_end":71},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":3648},"to":{"krate":0,"index":3641}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34137,"byte_end":34142,"line_start":341,"line_end":341,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34145,"byte_end":34149,"line_start":341,"line_end":341,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91883,"byte_end":91884,"line_start":2070,"line_end":2070,"column_start":52,"column_end":53},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":3852},"to":{"krate":0,"index":3626}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92251,"byte_end":92267,"line_start":2084,"line_end":2084,"column_start":36,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":3652},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":116105,"byte_end":116111,"line_start":2834,"line_end":2834,"column_start":21,"column_end":27},"kind":{"Impl":{"id":384}},"from":{"krate":2,"index":34376},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":116436,"byte_end":116442,"line_start":2851,"line_end":2851,"column_start":24,"column_end":30},"kind":{"Impl":{"id":385}},"from":{"krate":2,"index":34535},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375462,"byte_end":375468,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"kind":{"Impl":{"id":386}},"from":{"krate":2,"index":34376},"to":{"krate":0,"index":3626}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375641,"byte_end":375649,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6593},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375944,"byte_end":375952,"line_start":50,"line_end":50,"column_start":43,"column_end":51},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6593},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377109,"byte_end":377113,"line_start":91,"line_end":91,"column_start":29,"column_end":33},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":378589,"byte_end":378603,"line_start":150,"line_end":150,"column_start":28,"column_end":42},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":3988},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":379215,"byte_end":379221,"line_start":173,"line_end":173,"column_start":48,"column_end":54},"kind":{"Impl":{"id":395}},"from":{"krate":2,"index":34376},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":382044,"byte_end":382049,"line_start":50,"line_end":50,"column_start":34,"column_end":39},"kind":{"Impl":{"id":396}},"from":{"krate":2,"index":33102},"to":{"krate":0,"index":3626}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":382326,"byte_end":382338,"line_start":66,"line_end":66,"column_start":26,"column_end":38},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4028},"to":{"krate":2,"index":5442}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390809,"byte_end":390813,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":391387,"byte_end":391401,"line_start":63,"line_end":63,"column_start":34,"column_end":48},"kind":{"Impl":{"id":399}},"from":{"krate":2,"index":33171},"to":{"krate":0,"index":3626}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395846,"byte_end":395852,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"kind":{"Impl":{"id":400}},"from":{"krate":2,"index":34535},"to":{"krate":0,"index":3626}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":396286,"byte_end":396290,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6960},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":397543,"byte_end":397549,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"kind":{"Impl":{"id":408}},"from":{"krate":2,"index":34535},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":427272,"byte_end":427282,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4108},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":430232,"byte_end":430238,"line_start":102,"line_end":102,"column_start":22,"column_end":28},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4119},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":430487,"byte_end":430500,"line_start":114,"line_end":114,"column_start":22,"column_end":35},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4125},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":434226,"byte_end":434235,"line_start":217,"line_end":217,"column_start":22,"column_end":31},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4135},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":445677,"byte_end":445682,"line_start":521,"line_end":521,"column_start":22,"column_end":27},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":4157},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/quicksort.rs","byte_start":454853,"byte_end":454864,"line_start":21,"line_end":21,"column_start":18,"column_end":29},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4182},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/quicksort.rs","byte_start":455094,"byte_end":455100,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":4189},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/quicksort.rs","byte_start":455307,"byte_end":455317,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":4195},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414161,"byte_end":414165,"line_start":450,"line_end":450,"column_start":32,"column_end":36},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":7028},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414292,"byte_end":414296,"line_start":456,"line_end":456,"column_start":51,"column_end":55},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":7028},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414622,"byte_end":414626,"line_start":471,"line_end":471,"column_start":58,"column_end":62},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":7028},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415129,"byte_end":415141,"line_start":495,"line_end":495,"column_start":43,"column_end":55},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4348},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415700,"byte_end":415706,"line_start":516,"line_end":516,"column_start":32,"column_end":38},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":7036},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415835,"byte_end":415841,"line_start":522,"line_end":522,"column_start":51,"column_end":57},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":7036},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":416169,"byte_end":416175,"line_start":537,"line_end":537,"column_start":58,"column_end":64},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":7036},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":416798,"byte_end":416812,"line_start":565,"line_end":565,"column_start":43,"column_end":57},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":4378},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":417661,"byte_end":417668,"line_start":596,"line_end":596,"column_start":32,"column_end":39},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":7045},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":417798,"byte_end":417805,"line_start":602,"line_end":602,"column_start":51,"column_end":58},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":7045},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":418133,"byte_end":418140,"line_start":617,"line_end":617,"column_start":58,"column_end":65},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":7045},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":418814,"byte_end":418829,"line_start":646,"line_end":646,"column_start":43,"column_end":58},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":4409},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":419704,"byte_end":419711,"line_start":677,"line_end":677,"column_start":51,"column_end":58},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":7054},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":420041,"byte_end":420048,"line_start":692,"line_end":692,"column_start":58,"column_end":65},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":7054},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":420561,"byte_end":420576,"line_start":716,"line_end":716,"column_start":43,"column_end":58},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":4436},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":421215,"byte_end":421224,"line_start":740,"line_end":740,"column_start":51,"column_end":60},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":7062},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":421556,"byte_end":421565,"line_start":755,"line_end":755,"column_start":58,"column_end":67},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":7062},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":422198,"byte_end":422215,"line_start":783,"line_end":783,"column_start":43,"column_end":60},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":4462},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":423052,"byte_end":423057,"line_start":813,"line_end":813,"column_start":36,"column_end":41},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":4474},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":423240,"byte_end":423245,"line_start":822,"line_end":822,"column_start":36,"column_end":41},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":4474},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":423441,"byte_end":423446,"line_start":828,"line_end":828,"column_start":40,"column_end":45},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":4474},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":424933,"byte_end":424941,"line_start":889,"line_end":889,"column_start":36,"column_end":44},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":4508},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":425166,"byte_end":425174,"line_start":897,"line_end":897,"column_start":40,"column_end":48},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":4508},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495783,"byte_end":495788,"line_start":283,"line_end":283,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":4564}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495791,"byte_end":495795,"line_start":283,"line_end":283,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":4564}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495798,"byte_end":495802,"line_start":283,"line_end":283,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":4564}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":497642,"byte_end":497644,"line_start":350,"line_end":350,"column_start":54,"column_end":56},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":4596},"to":{"krate":0,"index":4564}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":498887,"byte_end":498892,"line_start":403,"line_end":403,"column_start":32,"column_end":37},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":7074},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":499152,"byte_end":499165,"line_start":414,"line_end":414,"column_start":33,"column_end":46},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":4609},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":499964,"byte_end":499975,"line_start":448,"line_end":448,"column_start":32,"column_end":43},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":7083},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":500326,"byte_end":500345,"line_start":463,"line_end":463,"column_start":33,"column_end":52},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":4623},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":501317,"byte_end":501322,"line_start":503,"line_end":503,"column_start":32,"column_end":37},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":7092},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":501580,"byte_end":501593,"line_start":514,"line_end":514,"column_start":33,"column_end":46},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":4638},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":502350,"byte_end":502361,"line_start":547,"line_end":547,"column_start":32,"column_end":43},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":7101},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":502626,"byte_end":502645,"line_start":558,"line_end":558,"column_start":33,"column_end":52},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":4652},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":503386,"byte_end":503391,"line_start":588,"line_end":588,"column_start":23,"column_end":28},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":7110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":503541,"byte_end":503546,"line_start":594,"line_end":594,"column_start":44,"column_end":49},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":7110},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":505199,"byte_end":505214,"line_start":654,"line_end":654,"column_start":23,"column_end":38},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":7123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":505368,"byte_end":505391,"line_start":660,"line_end":660,"column_start":36,"column_end":59},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":4686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":505699,"byte_end":505714,"line_start":669,"line_end":669,"column_start":44,"column_end":59},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":7123},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":506062,"byte_end":506085,"line_start":681,"line_end":681,"column_start":58,"column_end":81},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":4686},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":507049,"byte_end":507054,"line_start":721,"line_end":721,"column_start":32,"column_end":37},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":7136},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":507648,"byte_end":507663,"line_start":746,"line_end":746,"column_start":32,"column_end":47},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":7146},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":508328,"byte_end":508335,"line_start":774,"line_end":774,"column_start":44,"column_end":51},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":7156},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":508712,"byte_end":508727,"line_start":789,"line_end":789,"column_start":51,"column_end":66},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":4728},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":509764,"byte_end":509776,"line_start":831,"line_end":831,"column_start":44,"column_end":56},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":7169},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":510189,"byte_end":510209,"line_start":847,"line_end":847,"column_start":51,"column_end":71},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":4748},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511385,"byte_end":511388,"line_start":17,"line_end":17,"column_start":40,"column_end":43},"kind":{"Impl":{"id":463}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":3626}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511561,"byte_end":511569,"line_start":26,"line_end":26,"column_start":36,"column_end":44},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":7182},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511866,"byte_end":511874,"line_start":41,"line_end":41,"column_start":43,"column_end":51},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":7182},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":512989,"byte_end":513000,"line_start":79,"line_end":79,"column_start":43,"column_end":54},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":4790},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":513664,"byte_end":513675,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":4790},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514037,"byte_end":514047,"line_start":114,"line_end":114,"column_start":36,"column_end":46},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":4805},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514369,"byte_end":514379,"line_start":128,"line_end":128,"column_start":47,"column_end":57},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":4805},"to":{"krate":2,"index":5465}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514584,"byte_end":514594,"line_start":135,"line_end":135,"column_start":45,"column_end":55},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":4805},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514700,"byte_end":514710,"line_start":141,"line_end":141,"column_start":32,"column_end":42},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":4805},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/par_either.rs","byte_start":515779,"byte_end":515785,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"kind":{"Impl":{"id":472}},"from":{"krate":18,"index":161},"to":{"krate":0,"index":3652}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/par_either.rs","byte_start":516305,"byte_end":516311,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"kind":{"Impl":{"id":473}},"from":{"krate":18,"index":161},"to":{"krate":0,"index":3856}},{"span":{"file_name":"/home/pangpangguy/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/par_either.rs","byte_start":517105,"byte_end":517111,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"kind":{"Impl":{"id":474}},"from":{"krate":18,"index":161},"to":{"krate":0,"index":3922}}]}